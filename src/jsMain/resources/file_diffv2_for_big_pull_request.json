{"fileDiffs":[{"oldFile":{"objectId":"ab49cecf80ffff49949bc6ea05957da980082591","fileLines":[{"lineText":"import org.jetbrains.kotlin.gradle.dsl.KotlinJsCompile","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"val ktorVersion = \"1.3.2\"","filePosition":2,"lineItems":[]},{"lineText":"val jgitVersion = \"5.7.0.202003110725-r\"","filePosition":3,"lineItems":[]},{"lineText":"val logbackVersion = \"1.2.3\"","filePosition":4,"lineItems":[]},{"lineText":"val jdbiVersion = \"3.12.2\"","filePosition":5,"lineItems":[]},{"lineText":"","filePosition":6,"lineItems":[]},{"lineText":"","filePosition":7,"lineItems":[]},{"lineText":"","filePosition":8,"lineItems":[]},{"lineText":"plugins {","filePosition":9,"lineItems":[]},{"lineText":"    kotlin(\"multiplatform\") version \"1.3.71\"","filePosition":10,"lineItems":[]},{"lineText":"    kotlin(\"plugin.serialization\") version \"1.3.71\"","filePosition":11,"lineItems":[]},{"lineText":"}","filePosition":12,"lineItems":[]},{"lineText":"","filePosition":13,"lineItems":[]},{"lineText":"group = \"io.btc\"","filePosition":14,"lineItems":[]},{"lineText":"version = \"1.0.0\"","filePosition":15,"lineItems":[]},{"lineText":"","filePosition":16,"lineItems":[]},{"lineText":"repositories {","filePosition":17,"lineItems":[]},{"lineText":"    maven(\"https://kotlin.bintray.com/kotlin-js-wrappers/\")","filePosition":18,"lineItems":[]},{"lineText":"    mavenCentral()","filePosition":19,"lineItems":[]},{"lineText":"    jcenter()","filePosition":20,"lineItems":[]},{"lineText":"}","filePosition":21,"lineItems":[]},{"lineText":"","filePosition":22,"lineItems":[]},{"lineText":"kotlin {","filePosition":23,"lineItems":[]},{"lineText":"    js {","filePosition":24,"lineItems":[]},{"lineText":"        browser {","filePosition":25,"lineItems":[]},{"lineText":"            testTask {","filePosition":26,"lineItems":[]},{"lineText":"                useKarma() {","filePosition":27,"lineItems":[]},{"lineText":"                    useChromeHeadless()","filePosition":28,"lineItems":[]},{"lineText":"                }","filePosition":29,"lineItems":[]},{"lineText":"            }","filePosition":30,"lineItems":[]},{"lineText":"        }","filePosition":31,"lineItems":[]},{"lineText":"        nodejs {","filePosition":32,"lineItems":[]},{"lineText":"            useCommonJs()","filePosition":33,"lineItems":[]},{"lineText":"        }","filePosition":34,"lineItems":[]},{"lineText":"    }","filePosition":35,"lineItems":[]},{"lineText":"","filePosition":36,"lineItems":[]},{"lineText":"    jvm {","filePosition":37,"lineItems":[]},{"lineText":"        val main by compilations.getting {","filePosition":38,"lineItems":[]},{"lineText":"            kotlinOptions {","filePosition":39,"lineItems":[]},{"lineText":"                jvmTarget = \"1.8\"","filePosition":40,"lineItems":[]},{"lineText":"            }","filePosition":41,"lineItems":[]},{"lineText":"        }","filePosition":42,"lineItems":[]},{"lineText":"        val test by compilations.getting {","filePosition":43,"lineItems":[]},{"lineText":"            kotlinOptions {","filePosition":44,"lineItems":[]},{"lineText":"                jvmTarget = \"1.8\"","filePosition":45,"lineItems":[]},{"lineText":"            }","filePosition":46,"lineItems":[]},{"lineText":"        }","filePosition":47,"lineItems":[]},{"lineText":"    }","filePosition":48,"lineItems":[]},{"lineText":"","filePosition":49,"lineItems":[]},{"lineText":"    tasks.named(\"compileKotlinJs\") {","filePosition":50,"lineItems":[]},{"lineText":"        this as KotlinJsCompile","filePosition":51,"lineItems":[]},{"lineText":"        kotlinOptions.moduleKind = \"commonjs\"","filePosition":52,"lineItems":[]},{"lineText":"    }","filePosition":53,"lineItems":[]},{"lineText":"","filePosition":54,"lineItems":[]},{"lineText":"    sourceSets {","filePosition":55,"lineItems":[]},{"lineText":"        val commonMain by getting {","filePosition":56,"lineItems":[]},{"lineText":"            dependencies {","filePosition":57,"lineItems":[]},{"lineText":"                implementation(kotlin(\"stdlib-common\"))","filePosition":58,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-client-core:$ktorVersion\")","filePosition":59,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-client-json:$ktorVersion\")","filePosition":60,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-client-serialization:$ktorVersion\")","filePosition":61,"lineItems":[]},{"lineText":"                implementation(\"org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:0.20.0\")","filePosition":62,"lineItems":[]},{"lineText":"            }","filePosition":63,"lineItems":[]},{"lineText":"        }","filePosition":64,"lineItems":[]},{"lineText":"        val commonTest by getting {","filePosition":65,"lineItems":[]},{"lineText":"            dependencies {","filePosition":66,"lineItems":[]},{"lineText":"                implementation(kotlin(\"test-common\"))","filePosition":67,"lineItems":[]},{"lineText":"                implementation(kotlin(\"test-annotations-common\"))","filePosition":68,"lineItems":[]},{"lineText":"            }","filePosition":69,"lineItems":[]},{"lineText":"        }","filePosition":70,"lineItems":[]},{"lineText":"","filePosition":71,"lineItems":[]},{"lineText":"        val jsMain by getting {","filePosition":72,"lineItems":[]},{"lineText":"            dependencies {","filePosition":73,"lineItems":[]},{"lineText":"                api(npm(\"text-encoding\", \"0.7.0\"))","filePosition":74,"lineItems":[]},{"lineText":"                api(npm(\"abort-controller\", \"3.0.0\"))","filePosition":75,"lineItems":[]},{"lineText":"                implementation(kotlin(\"stdlib-js\"))","filePosition":76,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-client-serialization-js:$ktorVersion\")","filePosition":77,"lineItems":[]},{"lineText":"                implementation(\"org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:0.20.0\")","filePosition":78,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-client-js:$ktorVersion\")","filePosition":79,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-client-json-js:$ktorVersion\")","filePosition":80,"lineItems":[]},{"lineText":"                api(\"org.jetbrains.kotlinx:kotlinx-html-js:0.7.1\")","filePosition":81,"lineItems":[]},{"lineText":"","filePosition":82,"lineItems":[]},{"lineText":"                //React, React DOM + Wrappers","filePosition":83,"lineItems":[]},{"lineText":"                implementation(\"org.jetbrains:kotlin-react:16.13.0-pre.94-kotlin-1.3.70\")","filePosition":84,"lineItems":[]},{"lineText":"                implementation(\"org.jetbrains:kotlin-react-dom:16.13.0-pre.94-kotlin-1.3.70\")","filePosition":85,"lineItems":[]},{"lineText":"                implementation(npm(\"react\", \"16.13.1\"))","filePosition":86,"lineItems":[]},{"lineText":"                implementation(npm(\"react-dom\", \"16.13.1\"))","filePosition":87,"lineItems":[]},{"lineText":"                implementation(\"org.jetbrains:kotlin-styled:1.0.0-pre.94-kotlin-1.3.70\")","filePosition":88,"lineItems":[]},{"lineText":"                implementation(npm(\"styled-components\"))","filePosition":89,"lineItems":[]},{"lineText":"                implementation(npm(\"inline-style-prefixer\"))","filePosition":90,"lineItems":[]},{"lineText":"                // Components used only within React rendering (substituted out when using Atom)","filePosition":91,"lineItems":[]},{"lineText":"                implementation(npm(\"react-ace\", \"8.1.0\"))","filePosition":92,"lineItems":[]},{"lineText":"                implementation(npm(\"ace-builds\", \"~1.4.10\"))","filePosition":93,"lineItems":[]},{"lineText":"                // Material UI","filePosition":94,"lineItems":[]},{"lineText":"                implementation(npm(\"@material-ui/core\"))","filePosition":95,"lineItems":[]},{"lineText":"","filePosition":96,"lineItems":[]},{"lineText":"                /** Webpack */","filePosition":97,"lineItems":[]},{"lineText":"                implementation(npm(\"file-loader\", \"~6.0.0\"))","filePosition":98,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"            }","filePosition":99,"lineItems":[]},{"lineText":"        }","filePosition":100,"lineItems":[]},{"lineText":"","filePosition":101,"lineItems":[]},{"lineText":"        val jsTest by getting {","filePosition":102,"lineItems":[]},{"lineText":"            dependencies {","filePosition":103,"lineItems":[]},{"lineText":"                implementation(kotlin(\"test-js\"))","filePosition":104,"lineItems":[]},{"lineText":"            }","filePosition":105,"lineItems":[]},{"lineText":"        }","filePosition":106,"lineItems":[]},{"lineText":"","filePosition":107,"lineItems":[]},{"lineText":"        val jvmMain by getting {","filePosition":108,"lineItems":[]},{"lineText":"            dependencies {","filePosition":109,"lineItems":[]},{"lineText":"                implementation(kotlin(\"stdlib-jdk8\"))","filePosition":110,"lineItems":[]},{"lineText":"                /** Ktor and relatives */","filePosition":111,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-client-cio:$ktorVersion\")","filePosition":112,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-client-json-jvm:$ktorVersion\")","filePosition":113,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-client-serialization-jvm:$ktorVersion\")","filePosition":114,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-server-netty:$ktorVersion\")","filePosition":115,"lineItems":[]},{"lineText":"                implementation(\"org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0\")","filePosition":116,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-jackson:$ktorVersion\")","filePosition":117,"lineItems":[]},{"lineText":"                /** Jgit */","filePosition":118,"lineItems":[]},{"lineText":"                implementation(\"org.eclipse.jgit:org.eclipse.jgit:$jgitVersion\")","filePosition":119,"lineItems":[]},{"lineText":"                /** Logs */","filePosition":120,"lineItems":[]},{"lineText":"                implementation(\"ch.qos.logback:logback-classic:$logbackVersion\")","filePosition":121,"lineItems":[]},{"lineText":"                /** Db */","filePosition":122,"lineItems":[]},{"lineText":"                implementation(\"org.xerial:sqlite-jdbc:3.30.1\")","filePosition":123,"lineItems":[]},{"lineText":"                implementation(\"org.jdbi:jdbi3-core:$jdbiVersion\")","filePosition":124,"lineItems":[]},{"lineText":"                implementation(\"org.jdbi:jdbi3-kotlin:$jdbiVersion\")","filePosition":125,"lineItems":[]},{"lineText":"                implementation(\"org.jdbi:jdbi3-kotlin-sqlobject:$jdbiVersion\")","filePosition":126,"lineItems":[]},{"lineText":"                implementation(\"org.jdbi:jdbi3-sqlite:$jdbiVersion\")","filePosition":127,"lineItems":[]},{"lineText":"            }","filePosition":128,"lineItems":[]},{"lineText":"        }","filePosition":129,"lineItems":[]},{"lineText":"","filePosition":130,"lineItems":[]},{"lineText":"        val jvmTest by getting {","filePosition":131,"lineItems":[]},{"lineText":"            dependencies {","filePosition":132,"lineItems":[]},{"lineText":"                implementation(kotlin(\"test\"))","filePosition":133,"lineItems":[]},{"lineText":"                implementation(kotlin(\"test-junit\"))","filePosition":134,"lineItems":[]},{"lineText":"                implementation(\"org.eclipse.jgit:org.eclipse.jgit.junit:$jgitVersion\")","filePosition":135,"lineItems":[]},{"lineText":"","filePosition":136,"lineItems":[]},{"lineText":"                /** Ktor and relatives */","filePosition":137,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-server-test-host:$ktorVersion\")","filePosition":138,"lineItems":[]},{"lineText":"            }","filePosition":139,"lineItems":[]},{"lineText":"        }","filePosition":140,"lineItems":[]},{"lineText":"","filePosition":141,"lineItems":[]},{"lineText":"    }","filePosition":142,"lineItems":[]},{"lineText":"}","filePosition":143,"lineItems":[]}],"path":"kotlin/build.gradle.kts"},"newFile":{"objectId":"5cc75da9e51b10bfda057ea7dede52f5b1568f56","fileLines":[{"lineText":"import org.jetbrains.kotlin.gradle.dsl.KotlinJsCompile","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"val ktorVersion = \"1.3.2\"","filePosition":2,"lineItems":[]},{"lineText":"val jgitVersion = \"5.7.0.202003110725-r\"","filePosition":3,"lineItems":[]},{"lineText":"val logbackVersion = \"1.2.3\"","filePosition":4,"lineItems":[]},{"lineText":"val jdbiVersion = \"3.12.2\"","filePosition":5,"lineItems":[]},{"lineText":"","filePosition":6,"lineItems":[]},{"lineText":"","filePosition":7,"lineItems":[]},{"lineText":"","filePosition":8,"lineItems":[]},{"lineText":"plugins {","filePosition":9,"lineItems":[]},{"lineText":"    kotlin(\"multiplatform\") version \"1.3.71\"","filePosition":10,"lineItems":[]},{"lineText":"    kotlin(\"plugin.serialization\") version \"1.3.71\"","filePosition":11,"lineItems":[]},{"lineText":"}","filePosition":12,"lineItems":[]},{"lineText":"","filePosition":13,"lineItems":[]},{"lineText":"group = \"io.btc\"","filePosition":14,"lineItems":[]},{"lineText":"version = \"1.0.0\"","filePosition":15,"lineItems":[]},{"lineText":"","filePosition":16,"lineItems":[]},{"lineText":"repositories {","filePosition":17,"lineItems":[]},{"lineText":"    maven(\"https://kotlin.bintray.com/kotlin-js-wrappers/\")","filePosition":18,"lineItems":[]},{"lineText":"    mavenCentral()","filePosition":19,"lineItems":[]},{"lineText":"    jcenter()","filePosition":20,"lineItems":[]},{"lineText":"}","filePosition":21,"lineItems":[]},{"lineText":"","filePosition":22,"lineItems":[]},{"lineText":"kotlin {","filePosition":23,"lineItems":[]},{"lineText":"    js {","filePosition":24,"lineItems":[]},{"lineText":"        browser {","filePosition":25,"lineItems":[]},{"lineText":"            testTask {","filePosition":26,"lineItems":[]},{"lineText":"                useKarma() {","filePosition":27,"lineItems":[]},{"lineText":"                    useChromeHeadless()","filePosition":28,"lineItems":[]},{"lineText":"                }","filePosition":29,"lineItems":[]},{"lineText":"            }","filePosition":30,"lineItems":[]},{"lineText":"        }","filePosition":31,"lineItems":[]},{"lineText":"        nodejs {","filePosition":32,"lineItems":[]},{"lineText":"            useCommonJs()","filePosition":33,"lineItems":[]},{"lineText":"        }","filePosition":34,"lineItems":[]},{"lineText":"    }","filePosition":35,"lineItems":[]},{"lineText":"","filePosition":36,"lineItems":[]},{"lineText":"    jvm {","filePosition":37,"lineItems":[]},{"lineText":"        val main by compilations.getting {","filePosition":38,"lineItems":[]},{"lineText":"            kotlinOptions {","filePosition":39,"lineItems":[]},{"lineText":"                jvmTarget = \"1.8\"","filePosition":40,"lineItems":[]},{"lineText":"            }","filePosition":41,"lineItems":[]},{"lineText":"        }","filePosition":42,"lineItems":[]},{"lineText":"        val test by compilations.getting {","filePosition":43,"lineItems":[]},{"lineText":"            kotlinOptions {","filePosition":44,"lineItems":[]},{"lineText":"                jvmTarget = \"1.8\"","filePosition":45,"lineItems":[]},{"lineText":"            }","filePosition":46,"lineItems":[]},{"lineText":"        }","filePosition":47,"lineItems":[]},{"lineText":"    }","filePosition":48,"lineItems":[]},{"lineText":"","filePosition":49,"lineItems":[]},{"lineText":"    tasks.named(\"compileKotlinJs\") {","filePosition":50,"lineItems":[]},{"lineText":"        this as KotlinJsCompile","filePosition":51,"lineItems":[]},{"lineText":"        kotlinOptions.moduleKind = \"commonjs\"","filePosition":52,"lineItems":[]},{"lineText":"    }","filePosition":53,"lineItems":[]},{"lineText":"","filePosition":54,"lineItems":[]},{"lineText":"    sourceSets {","filePosition":55,"lineItems":[]},{"lineText":"        val commonMain by getting {","filePosition":56,"lineItems":[]},{"lineText":"            dependencies {","filePosition":57,"lineItems":[]},{"lineText":"                implementation(kotlin(\"stdlib-common\"))","filePosition":58,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-client-core:$ktorVersion\")","filePosition":59,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-client-json:$ktorVersion\")","filePosition":60,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-client-serialization:$ktorVersion\")","filePosition":61,"lineItems":[]},{"lineText":"                implementation(\"org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:0.20.0\")","filePosition":62,"lineItems":[]},{"lineText":"            }","filePosition":63,"lineItems":[]},{"lineText":"        }","filePosition":64,"lineItems":[]},{"lineText":"        val commonTest by getting {","filePosition":65,"lineItems":[]},{"lineText":"            dependencies {","filePosition":66,"lineItems":[]},{"lineText":"                implementation(kotlin(\"test-common\"))","filePosition":67,"lineItems":[]},{"lineText":"                implementation(kotlin(\"test-annotations-common\"))","filePosition":68,"lineItems":[]},{"lineText":"            }","filePosition":69,"lineItems":[]},{"lineText":"        }","filePosition":70,"lineItems":[]},{"lineText":"","filePosition":71,"lineItems":[]},{"lineText":"        val jsMain by getting {","filePosition":72,"lineItems":[]},{"lineText":"            dependencies {","filePosition":73,"lineItems":[]},{"lineText":"                api(npm(\"text-encoding\", \"0.7.0\"))","filePosition":74,"lineItems":[]},{"lineText":"                api(npm(\"abort-controller\", \"3.0.0\"))","filePosition":75,"lineItems":[]},{"lineText":"                implementation(kotlin(\"stdlib-js\"))","filePosition":76,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-client-serialization-js:$ktorVersion\")","filePosition":77,"lineItems":[]},{"lineText":"                implementation(\"org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:0.20.0\")","filePosition":78,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-client-js:$ktorVersion\")","filePosition":79,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-client-json-js:$ktorVersion\")","filePosition":80,"lineItems":[]},{"lineText":"                api(\"org.jetbrains.kotlinx:kotlinx-html-js:0.7.1\")","filePosition":81,"lineItems":[]},{"lineText":"","filePosition":82,"lineItems":[]},{"lineText":"                //React, React DOM + Wrappers","filePosition":83,"lineItems":[]},{"lineText":"                implementation(\"org.jetbrains:kotlin-react:16.13.0-pre.94-kotlin-1.3.70\")","filePosition":84,"lineItems":[]},{"lineText":"                implementation(\"org.jetbrains:kotlin-react-dom:16.13.0-pre.94-kotlin-1.3.70\")","filePosition":85,"lineItems":[]},{"lineText":"                implementation(npm(\"react\", \"16.13.1\"))","filePosition":86,"lineItems":[]},{"lineText":"                implementation(npm(\"react-dom\", \"16.13.1\"))","filePosition":87,"lineItems":[]},{"lineText":"                implementation(\"org.jetbrains:kotlin-styled:1.0.0-pre.94-kotlin-1.3.70\")","filePosition":88,"lineItems":[]},{"lineText":"                implementation(npm(\"styled-components\"))","filePosition":89,"lineItems":[]},{"lineText":"                implementation(npm(\"inline-style-prefixer\"))","filePosition":90,"lineItems":[]},{"lineText":"                // Components used only within React rendering (substituted out when using Atom)","filePosition":91,"lineItems":[]},{"lineText":"                implementation(npm(\"react-ace\", \"8.1.0\"))","filePosition":92,"lineItems":[]},{"lineText":"                implementation(npm(\"ace-builds\", \"~1.4.10\"))","filePosition":93,"lineItems":[]},{"lineText":"                // Material UI","filePosition":94,"lineItems":[]},{"lineText":"                implementation(npm(\"@material-ui/core\"))","filePosition":95,"lineItems":[]},{"lineText":"","filePosition":96,"lineItems":[]},{"lineText":"                /** Webpack */","filePosition":97,"lineItems":[]},{"lineText":"                implementation(npm(\"file-loader\", \"~6.0.0\"))","filePosition":98,"lineItems":[]},{"lineText":"","filePosition":99,"lineItems":[]},{"lineText":"                /** Diff */","filePosition":100,"lineItems":[]},{"lineText":"                implementation(npm(\"diff\", \"~4.0.2\"))","filePosition":101,"lineItems":[]},{"lineText":"            }","filePosition":102,"lineItems":[]},{"lineText":"        }","filePosition":103,"lineItems":[]},{"lineText":"","filePosition":104,"lineItems":[]},{"lineText":"        val jsTest by getting {","filePosition":105,"lineItems":[]},{"lineText":"            dependencies {","filePosition":106,"lineItems":[]},{"lineText":"                implementation(kotlin(\"test-js\"))","filePosition":107,"lineItems":[]},{"lineText":"            }","filePosition":108,"lineItems":[]},{"lineText":"        }","filePosition":109,"lineItems":[]},{"lineText":"","filePosition":110,"lineItems":[]},{"lineText":"        val jvmMain by getting {","filePosition":111,"lineItems":[]},{"lineText":"            dependencies {","filePosition":112,"lineItems":[]},{"lineText":"                implementation(kotlin(\"stdlib-jdk8\"))","filePosition":113,"lineItems":[]},{"lineText":"                /** Ktor and relatives */","filePosition":114,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-client-cio:$ktorVersion\")","filePosition":115,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-client-json-jvm:$ktorVersion\")","filePosition":116,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-client-serialization-jvm:$ktorVersion\")","filePosition":117,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-server-netty:$ktorVersion\")","filePosition":118,"lineItems":[]},{"lineText":"                implementation(\"org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0\")","filePosition":119,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-serialization:$ktorVersion\")","filePosition":120,"lineItems":[]},{"lineText":"                /** Jgit */","filePosition":121,"lineItems":[]},{"lineText":"                implementation(\"org.eclipse.jgit:org.eclipse.jgit:$jgitVersion\")","filePosition":122,"lineItems":[]},{"lineText":"                /** Logs */","filePosition":123,"lineItems":[]},{"lineText":"                implementation(\"ch.qos.logback:logback-classic:$logbackVersion\")","filePosition":124,"lineItems":[]},{"lineText":"                /** Db */","filePosition":125,"lineItems":[]},{"lineText":"                implementation(\"org.xerial:sqlite-jdbc:3.30.1\")","filePosition":126,"lineItems":[]},{"lineText":"                implementation(\"org.jdbi:jdbi3-core:$jdbiVersion\")","filePosition":127,"lineItems":[]},{"lineText":"                implementation(\"org.jdbi:jdbi3-kotlin:$jdbiVersion\")","filePosition":128,"lineItems":[]},{"lineText":"                implementation(\"org.jdbi:jdbi3-kotlin-sqlobject:$jdbiVersion\")","filePosition":129,"lineItems":[]},{"lineText":"                implementation(\"org.jdbi:jdbi3-sqlite:$jdbiVersion\")","filePosition":130,"lineItems":[]},{"lineText":"            }","filePosition":131,"lineItems":[]},{"lineText":"        }","filePosition":132,"lineItems":[]},{"lineText":"","filePosition":133,"lineItems":[]},{"lineText":"        val jvmTest by getting {","filePosition":134,"lineItems":[]},{"lineText":"            dependencies {","filePosition":135,"lineItems":[]},{"lineText":"                implementation(kotlin(\"test\"))","filePosition":136,"lineItems":[]},{"lineText":"                implementation(kotlin(\"test-junit\"))","filePosition":137,"lineItems":[]},{"lineText":"                implementation(\"org.eclipse.jgit:org.eclipse.jgit.junit:$jgitVersion\")","filePosition":138,"lineItems":[]},{"lineText":"","filePosition":139,"lineItems":[]},{"lineText":"                /** Ktor and relatives */","filePosition":140,"lineItems":[]},{"lineText":"                implementation(\"io.ktor:ktor-server-test-host:$ktorVersion\")","filePosition":141,"lineItems":[]},{"lineText":"            }","filePosition":142,"lineItems":[]},{"lineText":"        }","filePosition":143,"lineItems":[]},{"lineText":"","filePosition":144,"lineItems":[]},{"lineText":"    }","filePosition":145,"lineItems":[]},{"lineText":"}","filePosition":146,"lineItems":[]}],"path":"kotlin/build.gradle.kts"},"diffChangeType":"MODIFY","tShirtSize":"S","editList":[{"beginA":99,"beginB":99,"endA":99,"endB":102},{"beginA":117,"beginB":120,"endA":118,"endB":121}]},{"oldFile":{"objectId":"1c073cc0af85c1004202fa68c9108b6979b49fd7","fileLines":[{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"const val APP_NAME = \"super-cr\"","filePosition":0,"lineItems":[]},{"lineText":"const val CODE_REVIEW_TOOL_CACHE_DIRECTORY = \".$APP_NAME\"","filePosition":1,"lineItems":[]},{"lineText":"const val HOME = \"HOME\"","filePosition":2,"lineItems":[]},{"lineText":"","filePosition":3,"lineItems":[]}],"path":"kotlin/src/commonMain/kotlin/Constants.kt"},"newFile":{"objectId":"9bddd6cf7d32ef764234a399d5abdae33f31c2d5","fileLines":[{"lineText":"const val DEFAULT_PORT = 8081","filePosition":0,"lineItems":[]},{"lineText":"const val APP_NAME = \"super-cr\"","filePosition":1,"lineItems":[]},{"lineText":"const val CODE_REVIEW_TOOL_CACHE_DIRECTORY = \".$APP_NAME\"","filePosition":2,"lineItems":[]},{"lineText":"const val HOME = \"HOME\"","filePosition":3,"lineItems":[]},{"lineText":"","filePosition":4,"lineItems":[]}],"path":"kotlin/src/commonMain/kotlin/Constants.kt"},"diffChangeType":"MODIFY","tShirtSize":"XS","editList":[{"beginA":0,"beginB":0,"endA":0,"endB":1}]},{"oldFile":{"objectId":"489ba12c8e7c868ce1b8538bafc2804a13032294","fileLines":[{"lineText":"package codereview","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import encodeToBase64","filePosition":2,"lineItems":[]},{"lineText":"import kotlinx.serialization.Serializable","filePosition":3,"lineItems":[]},{"lineText":"","filePosition":4,"lineItems":[]},{"lineText":"","filePosition":5,"lineItems":[]},{"lineText":"@Serializable","filePosition":6,"lineItems":[]},{"lineText":"data class Project(","filePosition":7,"lineItems":[]},{"lineText":"    val localPath: String,","filePosition":8,"lineItems":[]},{"lineText":"    val providerPath: String,","filePosition":9,"lineItems":[]},{"lineText":"    val name: String","filePosition":10,"lineItems":[]},{"lineText":") {","filePosition":11,"lineItems":[]},{"lineText":"    val id = localPath.encodeToBase64()","filePosition":12,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"}","filePosition":13,"lineItems":[]},{"lineText":"","filePosition":14,"lineItems":[]}],"path":"kotlin/src/commonMain/kotlin/codereview/Project.kt"},"newFile":{"objectId":"a53bc024d3c1598d1874dc983a64949087f5e5b2","fileLines":[{"lineText":"package codereview","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"import kotlinx.serialization.Serializable","filePosition":2,"lineItems":[]},{"lineText":"","filePosition":3,"lineItems":[]},{"lineText":"","filePosition":4,"lineItems":[]},{"lineText":"@Serializable","filePosition":5,"lineItems":[]},{"lineText":"data class Project(","filePosition":6,"lineItems":[]},{"lineText":"    val localPath: String,","filePosition":7,"lineItems":[]},{"lineText":"    val providerPath: String,","filePosition":8,"lineItems":[]},{"lineText":"    val name: String","filePosition":9,"lineItems":[]},{"lineText":") {","filePosition":10,"lineItems":[]},{"lineText":"    /** TODO : Get encodeToBase64 to work */","filePosition":11,"lineItems":[]},{"lineText":"//    val id = localPath.encodeToBase64()","filePosition":12,"lineItems":[]},{"lineText":"    val id","filePosition":13,"lineItems":[]},{"lineText":"    get() = localPath.replace(\"/\", \"\")","filePosition":14,"lineItems":[]},{"lineText":"}","filePosition":15,"lineItems":[]},{"lineText":"","filePosition":16,"lineItems":[]}],"path":"kotlin/src/commonMain/kotlin/codereview/Project.kt"},"diffChangeType":"MODIFY","tShirtSize":"S","editList":[{"beginA":2,"beginB":2,"endA":3,"endB":2},{"beginA":12,"beginB":11,"endA":13,"endB":15}]},{"oldFile":{"objectId":"0000000000000000000000000000000000000000","fileLines":[],"path":"/dev/null"},"newFile":{"objectId":"5d0487b1426a4089fabbe5ab8bca1802fc0aad67","fileLines":[{"lineText":"package codereview","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import DEFAULT_PORT","filePosition":2,"lineItems":[]},{"lineText":"import io.ktor.client.HttpClient","filePosition":3,"lineItems":[]},{"lineText":"import io.ktor.client.request.HttpRequestBuilder","filePosition":4,"lineItems":[]},{"lineText":"import io.ktor.client.request.header","filePosition":5,"lineItems":[]},{"lineText":"import io.ktor.client.request.post","filePosition":6,"lineItems":[]},{"lineText":"import io.ktor.client.request.request","filePosition":7,"lineItems":[]},{"lineText":"import io.ktor.client.request.url","filePosition":8,"lineItems":[]},{"lineText":"import io.ktor.client.statement.HttpResponse","filePosition":9,"lineItems":[]},{"lineText":"import io.ktor.content.TextContent","filePosition":10,"lineItems":[]},{"lineText":"import io.ktor.http.ContentType","filePosition":11,"lineItems":[]},{"lineText":"import io.ktor.http.HttpHeaders","filePosition":12,"lineItems":[]},{"lineText":"import io.ktor.http.HttpMethod","filePosition":13,"lineItems":[]},{"lineText":"import io.ktor.http.HttpStatusCode","filePosition":14,"lineItems":[]},{"lineText":"import kotlinx.serialization.json.Json","filePosition":15,"lineItems":[]},{"lineText":"import kotlinx.serialization.json.JsonConfiguration","filePosition":16,"lineItems":[]},{"lineText":"","filePosition":17,"lineItems":[]},{"lineText":"class SuperCrClient(","filePosition":18,"lineItems":[]},{"lineText":"    private val httpClient: HttpClient","filePosition":19,"lineItems":[]},{"lineText":") {","filePosition":20,"lineItems":[]},{"lineText":"    companion object {","filePosition":21,"lineItems":[]},{"lineText":"        private val baseUrl = \"http://localhost:${DEFAULT_PORT}\"","filePosition":22,"lineItems":[]},{"lineText":"        private val json = Json(JsonConfiguration.Stable.copy(ignoreUnknownKeys = true))","filePosition":23,"lineItems":[]},{"lineText":"//        private val json = io.ktor.client.features.json.defaultSerializer()","filePosition":24,"lineItems":[]},{"lineText":"    }","filePosition":25,"lineItems":[]},{"lineText":"","filePosition":26,"lineItems":[]},{"lineText":"    suspend fun getAllProjects(): List<Project> {","filePosition":27,"lineItems":[]},{"lineText":"        return httpClient.request<List<Project>>(buildRequest().apply {","filePosition":28,"lineItems":[]},{"lineText":"            url(\"$baseUrl/projects/_all\")","filePosition":29,"lineItems":[]},{"lineText":"            method = HttpMethod.Get","filePosition":30,"lineItems":[]},{"lineText":"        })","filePosition":31,"lineItems":[]},{"lineText":"    }","filePosition":32,"lineItems":[]},{"lineText":"","filePosition":33,"lineItems":[]},{"lineText":"    suspend fun addProject(project: Project): Boolean {","filePosition":34,"lineItems":[]},{"lineText":"        val response = httpClient.post<HttpResponse> {","filePosition":35,"lineItems":[]},{"lineText":"            body = project","filePosition":36,"lineItems":[]},{"lineText":"            header(HttpHeaders.ContentType, ContentType.Application.Json)","filePosition":37,"lineItems":[]},{"lineText":"            url(\"$baseUrl/projects\")","filePosition":38,"lineItems":[]},{"lineText":"        }","filePosition":39,"lineItems":[]},{"lineText":"        return when(response.status) {","filePosition":40,"lineItems":[]},{"lineText":"            HttpStatusCode.Created -> true","filePosition":41,"lineItems":[]},{"lineText":"            HttpStatusCode.InternalServerError -> false","filePosition":42,"lineItems":[]},{"lineText":"            HttpStatusCode.BadRequest -> false","filePosition":43,"lineItems":[]},{"lineText":"            else -> {","filePosition":44,"lineItems":[]},{"lineText":"                throw RuntimeException(\"Unhandled status code ${response.status}\")","filePosition":45,"lineItems":[]},{"lineText":"            }","filePosition":46,"lineItems":[]},{"lineText":"        }","filePosition":47,"lineItems":[]},{"lineText":"    }","filePosition":48,"lineItems":[]},{"lineText":"","filePosition":49,"lineItems":[]},{"lineText":"    private suspend fun buildRequest(): HttpRequestBuilder {","filePosition":50,"lineItems":[]},{"lineText":"        return HttpRequestBuilder().apply {","filePosition":51,"lineItems":[]},{"lineText":"            header(HttpHeaders.Accept, ContentType.Application.Json)","filePosition":52,"lineItems":[]},{"lineText":"        }","filePosition":53,"lineItems":[]},{"lineText":"    }","filePosition":54,"lineItems":[]},{"lineText":"    private suspend fun buildPostRequest(): HttpRequestBuilder {","filePosition":55,"lineItems":[]},{"lineText":"        return HttpRequestBuilder().apply {","filePosition":56,"lineItems":[]},{"lineText":"            header(HttpHeaders.Accept, ContentType.Application.Json)","filePosition":57,"lineItems":[]},{"lineText":"            header(HttpHeaders.ContentType, ContentType.Application.Json)","filePosition":58,"lineItems":[]},{"lineText":"        }","filePosition":59,"lineItems":[]},{"lineText":"    }","filePosition":60,"lineItems":[]},{"lineText":"}","filePosition":61,"lineItems":[]}],"path":"kotlin/src/commonMain/kotlin/codereview/SuperCrClient.kt"},"diffChangeType":"ADD","tShirtSize":"M","editList":[{"beginA":0,"beginB":0,"endA":0,"endB":62}]},{"oldFile":{"objectId":"f37b2779127ae0010a3be22273f64662d686db60","fileLines":[{"lineText":"package git.provider","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import auth.OauthClient","filePosition":2,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"import io.ktor.client.HttpClient","filePosition":3,"lineItems":[]},{"lineText":"import io.ktor.client.features.json.defaultSerializer","filePosition":4,"lineItems":[]},{"lineText":"import io.ktor.client.request.HttpRequestBuilder","filePosition":5,"lineItems":[]},{"lineText":"import io.ktor.client.request.get","filePosition":6,"lineItems":[]},{"lineText":"import io.ktor.client.request.header","filePosition":7,"lineItems":[]},{"lineText":"import io.ktor.client.request.request","filePosition":8,"lineItems":[]},{"lineText":"import io.ktor.client.request.url","filePosition":9,"lineItems":[]},{"lineText":"import io.ktor.client.statement.HttpResponse","filePosition":10,"lineItems":[]},{"lineText":"import io.ktor.http.HttpHeaders","filePosition":11,"lineItems":[]},{"lineText":"import io.ktor.http.HttpMethod","filePosition":12,"lineItems":[]},{"lineText":"import io.ktor.http.HttpStatusCode","filePosition":13,"lineItems":[]},{"lineText":"","filePosition":14,"lineItems":[]},{"lineText":"","filePosition":15,"lineItems":[]},{"lineText":"class GithubClient(","filePosition":16,"lineItems":[]},{"lineText":"    private val oauthClient: OauthClient,","filePosition":17,"lineItems":[]},{"lineText":"    private val httpClient: HttpClient","filePosition":18,"lineItems":[]},{"lineText":") {","filePosition":19,"lineItems":[]},{"lineText":"    companion object {","filePosition":20,"lineItems":[]},{"lineText":"        val ACCEPT_HEADER_VALUE = \"application/vnd.github.v3+json\"","filePosition":21,"lineItems":[]},{"lineText":"        val GITHUB_API_BASE_URL = \"https://api.github.com/\"","filePosition":22,"lineItems":[]},{"lineText":"        val AUTH_HEADER_PREFIX = \"token \"","filePosition":23,"lineItems":[]},{"lineText":"        val ORGS_PATH = \"orgs/\"","filePosition":24,"lineItems":[]},{"lineText":"        val REPOS_PATH = \"repos\"","filePosition":25,"lineItems":[]},{"lineText":"        val PULLS_PATH = \"pulls\"","filePosition":26,"lineItems":[]},{"lineText":"        val jsonSerializer = defaultSerializer()","filePosition":27,"lineItems":[]},{"lineText":"    }","filePosition":28,"lineItems":[]},{"lineText":"","filePosition":29,"lineItems":[]},{"lineText":"    suspend fun getReposSummary(orgName: String): List<RepoSummary> {","filePosition":30,"lineItems":[]},{"lineText":"        return httpClient.request<List<RepoSummary>>(buildRequest().apply {","filePosition":31,"lineItems":[]},{"lineText":"            url(\"$GITHUB_API_BASE_URL$ORGS_PATH$orgName/${ REPOS_PATH }\")","filePosition":32,"lineItems":[]},{"lineText":"            method = HttpMethod.Get","filePosition":33,"lineItems":[]},{"lineText":"        })","filePosition":34,"lineItems":[]},{"lineText":"    }","filePosition":35,"lineItems":[]},{"lineText":"","filePosition":36,"lineItems":[]},{"lineText":"    suspend fun listPullRequests(repoSummary: RepoSummary): List<PullRequestSummary> {","filePosition":37,"lineItems":[]},{"lineText":"        return httpClient.request<List<PullRequestSummary>>(buildRequest().apply {","filePosition":38,"lineItems":[]},{"lineText":"            url(\"$GITHUB_API_BASE_URL$REPOS_PATH/${repoSummary.full_name}/$PULLS_PATH\")","filePosition":39,"lineItems":[]},{"lineText":"            method = HttpMethod.Get","filePosition":40,"lineItems":[]},{"lineText":"        })","filePosition":41,"lineItems":[]},{"lineText":"    }","filePosition":42,"lineItems":[]},{"lineText":"","filePosition":43,"lineItems":[]},{"lineText":"    suspend fun getPullRequestDetails(pullRequestSummary: PullRequestSummary): PullRequestDetails {","filePosition":44,"lineItems":[]},{"lineText":"        return httpClient.request<PullRequestDetails>(buildRequest().apply {","filePosition":45,"lineItems":[]},{"lineText":"            url(\"${pullRequestSummary._links.self}\")","filePosition":46,"lineItems":[]},{"lineText":"            method = HttpMethod.Get","filePosition":47,"lineItems":[]},{"lineText":"        })","filePosition":48,"lineItems":[]},{"lineText":"    }","filePosition":49,"lineItems":[]},{"lineText":"","filePosition":50,"lineItems":[]},{"lineText":"    suspend fun updatePullRequest(pullRequestSummary: PullRequestSummary, pullRequestUpdate: PullRequestUpdate): PullRequestDetails {","filePosition":51,"lineItems":[]},{"lineText":"        return httpClient.request<PullRequestDetails>(buildRequest().apply {","filePosition":52,"lineItems":[]},{"lineText":"            url(\"${pullRequestSummary._links.self}\")","filePosition":53,"lineItems":[]},{"lineText":"            method = HttpMethod.Patch","filePosition":54,"lineItems":[]},{"lineText":"            body = pullRequestUpdate","filePosition":55,"lineItems":[]},{"lineText":"        })","filePosition":56,"lineItems":[]},{"lineText":"    }","filePosition":57,"lineItems":[]},{"lineText":"","filePosition":58,"lineItems":[]},{"lineText":"    /**","filePosition":59,"lineItems":[]},{"lineText":"     * From GithubDocs","filePosition":60,"lineItems":[]},{"lineText":"     * Lists a maximum of 250 commits for a pull request.","filePosition":61,"lineItems":[]},{"lineText":"     * To receive a complete commit list for pull requests with more than 250 commits, use the Commit List API.","filePosition":62,"lineItems":[]},{"lineText":"     */","filePosition":63,"lineItems":[]},{"lineText":"    suspend fun listCommits(pullRequestSummary: PullRequestSummary): GithubCommit {","filePosition":64,"lineItems":[]},{"lineText":"        return httpClient.request(buildRequest().apply {","filePosition":65,"lineItems":[]},{"lineText":"            url(\"${pullRequestSummary._links.commits}\")","filePosition":66,"lineItems":[]},{"lineText":"            method = HttpMethod.Get","filePosition":67,"lineItems":[]},{"lineText":"        })","filePosition":68,"lineItems":[]},{"lineText":"    }","filePosition":69,"lineItems":[]},{"lineText":"","filePosition":70,"lineItems":[]},{"lineText":"    suspend fun listFiles(pullRequestSummary: PullRequestSummary): List<PullRequestFileDetails> {","filePosition":71,"lineItems":[]},{"lineText":"        return httpClient.request(buildRequest().apply {","filePosition":72,"lineItems":[]},{"lineText":"            url(\"${pullRequestSummary._links.self}/files\")","filePosition":73,"lineItems":[]},{"lineText":"            method = HttpMethod.Get","filePosition":74,"lineItems":[]},{"lineText":"        })","filePosition":75,"lineItems":[]},{"lineText":"    }","filePosition":76,"lineItems":[]},{"lineText":"","filePosition":77,"lineItems":[]},{"lineText":"    suspend fun isPrMerged(pullRequestSummary: PullRequestSummary): Boolean {","filePosition":78,"lineItems":[]},{"lineText":"        val response: HttpResponse = httpClient.request(buildRequest().apply {","filePosition":79,"lineItems":[]},{"lineText":"            url(\"${pullRequestSummary._links.self.href}/merge\")","filePosition":80,"lineItems":[]},{"lineText":"            method = HttpMethod.Get","filePosition":81,"lineItems":[]},{"lineText":"        })","filePosition":82,"lineItems":[]},{"lineText":"        return when(response.status) {","filePosition":83,"lineItems":[]},{"lineText":"            HttpStatusCode.NoContent -> true","filePosition":84,"lineItems":[]},{"lineText":"            HttpStatusCode.NotFound -> false","filePosition":85,"lineItems":[]},{"lineText":"            else -> {","filePosition":86,"lineItems":[]},{"lineText":"                throw RuntimeException(\"Unhandled status code ${response.status}\")","filePosition":87,"lineItems":[]},{"lineText":"            }","filePosition":88,"lineItems":[]},{"lineText":"        }","filePosition":89,"lineItems":[]},{"lineText":"    }","filePosition":90,"lineItems":[]},{"lineText":"","filePosition":91,"lineItems":[]},{"lineText":"    suspend fun mergePullRequest(pullRequestSummary: PullRequestSummary, mergePullRequest: MergePullRequest): Boolean {","filePosition":92,"lineItems":[]},{"lineText":"        val response: HttpResponse = httpClient.request(buildRequest().apply {","filePosition":93,"lineItems":[]},{"lineText":"            url(\"${pullRequestSummary._links.self}/merge\")","filePosition":94,"lineItems":[]},{"lineText":"            method = HttpMethod.Put","filePosition":95,"lineItems":[]},{"lineText":"            body = mergePullRequest","filePosition":96,"lineItems":[]},{"lineText":"        })","filePosition":97,"lineItems":[]},{"lineText":"        return when(response.status) {","filePosition":98,"lineItems":[]},{"lineText":"            HttpStatusCode.OK -> true","filePosition":99,"lineItems":[]},{"lineText":"            HttpStatusCode.MethodNotAllowed -> false","filePosition":100,"lineItems":[]},{"lineText":"            HttpStatusCode.Conflict -> false","filePosition":101,"lineItems":[]},{"lineText":"            else -> {","filePosition":102,"lineItems":[]},{"lineText":"                throw RuntimeException(\"Unhandled status code ${response.status}\")","filePosition":103,"lineItems":[]},{"lineText":"            }","filePosition":104,"lineItems":[]},{"lineText":"        }","filePosition":105,"lineItems":[]},{"lineText":"    }","filePosition":106,"lineItems":[]},{"lineText":"","filePosition":107,"lineItems":[]},{"lineText":"    private suspend fun buildRequest(): HttpRequestBuilder {","filePosition":108,"lineItems":[]},{"lineText":"        return HttpRequestBuilder().apply {","filePosition":109,"lineItems":[]},{"lineText":"            header(HttpHeaders.Accept, ACCEPT_HEADER_VALUE)","filePosition":110,"lineItems":[]},{"lineText":"            header(HttpHeaders.Authorization, \"$AUTH_HEADER_PREFIX${oauthClient.getToken(emptyMap())}\")","filePosition":111,"lineItems":[]},{"lineText":"        }","filePosition":112,"lineItems":[]},{"lineText":"    }","filePosition":113,"lineItems":[]},{"lineText":"}","filePosition":114,"lineItems":[]}],"path":"kotlin/src/commonMain/kotlin/git/provider/GithubClient.kt"},"newFile":{"objectId":"f3f8b44da0c6a766a5e54b8bea0d99a6c5b29171","fileLines":[{"lineText":"package git.provider","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import auth.OauthClient","filePosition":2,"lineItems":[]},{"lineText":"import codereview.Project","filePosition":3,"lineItems":[]},{"lineText":"import io.ktor.client.HttpClient","filePosition":4,"lineItems":[]},{"lineText":"import io.ktor.client.features.json.defaultSerializer","filePosition":5,"lineItems":[]},{"lineText":"import io.ktor.client.request.HttpRequestBuilder","filePosition":6,"lineItems":[]},{"lineText":"import io.ktor.client.request.get","filePosition":7,"lineItems":[]},{"lineText":"import io.ktor.client.request.header","filePosition":8,"lineItems":[]},{"lineText":"import io.ktor.client.request.request","filePosition":9,"lineItems":[]},{"lineText":"import io.ktor.client.request.url","filePosition":10,"lineItems":[]},{"lineText":"import io.ktor.client.statement.HttpResponse","filePosition":11,"lineItems":[]},{"lineText":"import io.ktor.http.HttpHeaders","filePosition":12,"lineItems":[]},{"lineText":"import io.ktor.http.HttpMethod","filePosition":13,"lineItems":[]},{"lineText":"import io.ktor.http.HttpStatusCode","filePosition":14,"lineItems":[]},{"lineText":"","filePosition":15,"lineItems":[]},{"lineText":"","filePosition":16,"lineItems":[]},{"lineText":"class GithubClient(","filePosition":17,"lineItems":[]},{"lineText":"    private val oauthClient: OauthClient,","filePosition":18,"lineItems":[]},{"lineText":"    private val httpClient: HttpClient","filePosition":19,"lineItems":[]},{"lineText":") {","filePosition":20,"lineItems":[]},{"lineText":"    companion object {","filePosition":21,"lineItems":[]},{"lineText":"        private const val ACCEPT_HEADER_VALUE = \"application/vnd.github.v3+json\"","filePosition":22,"lineItems":[]},{"lineText":"        private const val GITHUB_API_BASE_URL = \"https://api.github.com/\"","filePosition":23,"lineItems":[]},{"lineText":"        private const val AUTH_HEADER_PREFIX = \"token \"","filePosition":24,"lineItems":[]},{"lineText":"        private const val ORGS_PATH = \"orgs/\"","filePosition":25,"lineItems":[]},{"lineText":"        private const val REPOS_PATH = \"repos\"","filePosition":26,"lineItems":[]},{"lineText":"        private const val PULLS_PATH = \"pulls\"","filePosition":27,"lineItems":[]},{"lineText":"        val jsonSerializer = defaultSerializer()","filePosition":28,"lineItems":[]},{"lineText":"    }","filePosition":29,"lineItems":[]},{"lineText":"","filePosition":30,"lineItems":[]},{"lineText":"    suspend fun getReposSummary(orgName: String): List<RepoSummary> {","filePosition":31,"lineItems":[]},{"lineText":"        return httpClient.request<List<RepoSummary>>(buildRequest().apply {","filePosition":32,"lineItems":[]},{"lineText":"            url(\"$GITHUB_API_BASE_URL$ORGS_PATH$orgName/${ REPOS_PATH }\")","filePosition":33,"lineItems":[]},{"lineText":"            method = HttpMethod.Get","filePosition":34,"lineItems":[]},{"lineText":"        })","filePosition":35,"lineItems":[]},{"lineText":"    }","filePosition":36,"lineItems":[]},{"lineText":"","filePosition":37,"lineItems":[]},{"lineText":"    suspend fun listPullRequests(project: Project): List<PullRequestSummary> {","filePosition":38,"lineItems":[]},{"lineText":"        return httpClient.request<List<PullRequestSummary>>(buildRequest().apply {","filePosition":39,"lineItems":[]},{"lineText":"            url(\"$GITHUB_API_BASE_URL$REPOS_PATH/${project.providerPath}/$PULLS_PATH\")","filePosition":40,"lineItems":[]},{"lineText":"            method = HttpMethod.Get","filePosition":41,"lineItems":[]},{"lineText":"        })","filePosition":42,"lineItems":[]},{"lineText":"    }","filePosition":43,"lineItems":[]},{"lineText":"","filePosition":44,"lineItems":[]},{"lineText":"    suspend fun getPullRequestDetails(pullRequestSummary: PullRequestSummary): PullRequestDetails {","filePosition":45,"lineItems":[]},{"lineText":"        return httpClient.request<PullRequestDetails>(buildRequest().apply {","filePosition":46,"lineItems":[]},{"lineText":"            url(\"${pullRequestSummary._links.self}\")","filePosition":47,"lineItems":[]},{"lineText":"            method = HttpMethod.Get","filePosition":48,"lineItems":[]},{"lineText":"        })","filePosition":49,"lineItems":[]},{"lineText":"    }","filePosition":50,"lineItems":[]},{"lineText":"","filePosition":51,"lineItems":[]},{"lineText":"    suspend fun updatePullRequest(pullRequestSummary: PullRequestSummary, pullRequestUpdate: PullRequestUpdate): PullRequestDetails {","filePosition":52,"lineItems":[]},{"lineText":"        return httpClient.request<PullRequestDetails>(buildRequest().apply {","filePosition":53,"lineItems":[]},{"lineText":"            url(\"${pullRequestSummary._links.self}\")","filePosition":54,"lineItems":[]},{"lineText":"            method = HttpMethod.Patch","filePosition":55,"lineItems":[]},{"lineText":"            body = pullRequestUpdate","filePosition":56,"lineItems":[]},{"lineText":"        })","filePosition":57,"lineItems":[]},{"lineText":"    }","filePosition":58,"lineItems":[]},{"lineText":"","filePosition":59,"lineItems":[]},{"lineText":"    /**","filePosition":60,"lineItems":[]},{"lineText":"     * From GithubDocs","filePosition":61,"lineItems":[]},{"lineText":"     * Lists a maximum of 250 commits for a pull request.","filePosition":62,"lineItems":[]},{"lineText":"     * To receive a complete commit list for pull requests with more than 250 commits, use the Commit List API.","filePosition":63,"lineItems":[]},{"lineText":"     */","filePosition":64,"lineItems":[]},{"lineText":"    suspend fun listCommits(pullRequestSummary: PullRequestSummary): GithubCommit {","filePosition":65,"lineItems":[]},{"lineText":"        return httpClient.request(buildRequest().apply {","filePosition":66,"lineItems":[]},{"lineText":"            url(\"${pullRequestSummary._links.commits}\")","filePosition":67,"lineItems":[]},{"lineText":"            method = HttpMethod.Get","filePosition":68,"lineItems":[]},{"lineText":"        })","filePosition":69,"lineItems":[]},{"lineText":"    }","filePosition":70,"lineItems":[]},{"lineText":"","filePosition":71,"lineItems":[]},{"lineText":"    suspend fun listFiles(pullRequestSummary: PullRequestSummary): List<PullRequestFileDetails> {","filePosition":72,"lineItems":[]},{"lineText":"        return httpClient.request(buildRequest().apply {","filePosition":73,"lineItems":[]},{"lineText":"            url(\"${pullRequestSummary._links.self}/files\")","filePosition":74,"lineItems":[]},{"lineText":"            method = HttpMethod.Get","filePosition":75,"lineItems":[]},{"lineText":"        })","filePosition":76,"lineItems":[]},{"lineText":"    }","filePosition":77,"lineItems":[]},{"lineText":"","filePosition":78,"lineItems":[]},{"lineText":"    suspend fun isPrMerged(pullRequestSummary: PullRequestSummary): Boolean {","filePosition":79,"lineItems":[]},{"lineText":"        val response: HttpResponse = httpClient.request(buildRequest().apply {","filePosition":80,"lineItems":[]},{"lineText":"            url(\"${pullRequestSummary._links.self.href}/merge\")","filePosition":81,"lineItems":[]},{"lineText":"            method = HttpMethod.Get","filePosition":82,"lineItems":[]},{"lineText":"        })","filePosition":83,"lineItems":[]},{"lineText":"        return when(response.status) {","filePosition":84,"lineItems":[]},{"lineText":"            HttpStatusCode.NoContent -> true","filePosition":85,"lineItems":[]},{"lineText":"            HttpStatusCode.NotFound -> false","filePosition":86,"lineItems":[]},{"lineText":"            else -> {","filePosition":87,"lineItems":[]},{"lineText":"                throw RuntimeException(\"Unhandled status code ${response.status}\")","filePosition":88,"lineItems":[]},{"lineText":"            }","filePosition":89,"lineItems":[]},{"lineText":"        }","filePosition":90,"lineItems":[]},{"lineText":"    }","filePosition":91,"lineItems":[]},{"lineText":"","filePosition":92,"lineItems":[]},{"lineText":"    suspend fun mergePullRequest(pullRequestSummary: PullRequestSummary, mergePullRequest: MergePullRequest): Boolean {","filePosition":93,"lineItems":[]},{"lineText":"        val response: HttpResponse = httpClient.request(buildRequest().apply {","filePosition":94,"lineItems":[]},{"lineText":"            url(\"${pullRequestSummary._links.self}/merge\")","filePosition":95,"lineItems":[]},{"lineText":"            method = HttpMethod.Put","filePosition":96,"lineItems":[]},{"lineText":"            body = mergePullRequest","filePosition":97,"lineItems":[]},{"lineText":"        })","filePosition":98,"lineItems":[]},{"lineText":"        return when(response.status) {","filePosition":99,"lineItems":[]},{"lineText":"            HttpStatusCode.OK -> true","filePosition":100,"lineItems":[]},{"lineText":"            HttpStatusCode.MethodNotAllowed -> false","filePosition":101,"lineItems":[]},{"lineText":"            HttpStatusCode.Conflict -> false","filePosition":102,"lineItems":[]},{"lineText":"            else -> {","filePosition":103,"lineItems":[]},{"lineText":"                throw RuntimeException(\"Unhandled status code ${response.status}\")","filePosition":104,"lineItems":[]},{"lineText":"            }","filePosition":105,"lineItems":[]},{"lineText":"        }","filePosition":106,"lineItems":[]},{"lineText":"    }","filePosition":107,"lineItems":[]},{"lineText":"","filePosition":108,"lineItems":[]},{"lineText":"    private suspend fun buildRequest(): HttpRequestBuilder {","filePosition":109,"lineItems":[]},{"lineText":"        return HttpRequestBuilder().apply {","filePosition":110,"lineItems":[]},{"lineText":"            header(HttpHeaders.Accept, ACCEPT_HEADER_VALUE)","filePosition":111,"lineItems":[]},{"lineText":"            header(HttpHeaders.Authorization, \"$AUTH_HEADER_PREFIX${oauthClient.getToken(emptyMap())}\")","filePosition":112,"lineItems":[]},{"lineText":"        }","filePosition":113,"lineItems":[]},{"lineText":"    }","filePosition":114,"lineItems":[]},{"lineText":"}","filePosition":115,"lineItems":[]}],"path":"kotlin/src/commonMain/kotlin/git/provider/GithubClient.kt"},"diffChangeType":"MODIFY","tShirtSize":"S","editList":[{"beginA":3,"beginB":3,"endA":3,"endB":4},{"beginA":21,"beginB":22,"endA":27,"endB":28},{"beginA":37,"beginB":38,"endA":38,"endB":39},{"beginA":39,"beginB":40,"endA":40,"endB":41}]},{"oldFile":{"objectId":"d92aee8e946cbec88693d7920a61520a5ec21c75","fileLines":[{"lineText":"package git.provider","filePosition":0,"lineItems":[]},{"lineText":"import kotlinx.serialization.Serializable","filePosition":1,"lineItems":[]},{"lineText":"","filePosition":2,"lineItems":[]},{"lineText":"//TODO: Figure out kotlinx.serialisation to convert from snake case to camel case automatically","filePosition":3,"lineItems":[]},{"lineText":"","filePosition":4,"lineItems":[]},{"lineText":"enum class GithubAuthorAssociation{","filePosition":5,"lineItems":[]},{"lineText":"    CONTRIBUTOR,","filePosition":6,"lineItems":[]},{"lineText":"    OWNER","filePosition":7,"lineItems":[]},{"lineText":"}","filePosition":8,"lineItems":[]},{"lineText":"","filePosition":9,"lineItems":[]},{"lineText":"enum class GithubPullRequestState{","filePosition":10,"lineItems":[]},{"lineText":"    open,","filePosition":11,"lineItems":[]},{"lineText":"    closed","filePosition":12,"lineItems":[]},{"lineText":"}","filePosition":13,"lineItems":[]},{"lineText":"","filePosition":14,"lineItems":[]},{"lineText":"","filePosition":15,"lineItems":[]},{"lineText":"@Serializable","filePosition":16,"lineItems":[]},{"lineText":"data class RepoSummary(","filePosition":17,"lineItems":[]},{"lineText":"    val name: String,","filePosition":18,"lineItems":[]},{"lineText":"    val full_name: String,","filePosition":19,"lineItems":[]},{"lineText":"    val private: Boolean","filePosition":20,"lineItems":[]},{"lineText":")","filePosition":21,"lineItems":[]},{"lineText":"","filePosition":22,"lineItems":[]},{"lineText":"@Serializable","filePosition":23,"lineItems":[]},{"lineText":"data class PullRequestSummary(","filePosition":24,"lineItems":[]},{"lineText":"    val url: String,","filePosition":25,"lineItems":[]},{"lineText":"    val id: Long,","filePosition":26,"lineItems":[]},{"lineText":"    val node_id: String,","filePosition":27,"lineItems":[]},{"lineText":"    val html_url: String,","filePosition":28,"lineItems":[]},{"lineText":"    val diff_url: String,","filePosition":29,"lineItems":[]},{"lineText":"    val patch_url: String,","filePosition":30,"lineItems":[]},{"lineText":"    val issue_url: String,","filePosition":31,"lineItems":[]},{"lineText":"    val number: Int,","filePosition":32,"lineItems":[]},{"lineText":"    val state: GithubPullRequestState,","filePosition":33,"lineItems":[]},{"lineText":"    val locked: Boolean,","filePosition":34,"lineItems":[]},{"lineText":"    val title: String,","filePosition":35,"lineItems":[]},{"lineText":"    val user: User,","filePosition":36,"lineItems":[]},{"lineText":"    val body: String,","filePosition":37,"lineItems":[]},{"lineText":"    val created_at: String,","filePosition":38,"lineItems":[]},{"lineText":"    val updated_at: String,","filePosition":39,"lineItems":[]},{"lineText":"    val closed_at: String?,","filePosition":40,"lineItems":[]},{"lineText":"    val merged_at: String?,","filePosition":41,"lineItems":[]},{"lineText":"    val merge_commit_sha: String,","filePosition":42,"lineItems":[]},{"lineText":"    val assignee: User,","filePosition":43,"lineItems":[]},{"lineText":"    val assignees: List<User>,","filePosition":44,"lineItems":[]},{"lineText":"    val requested_reviewers: List<User>,","filePosition":45,"lineItems":[]},{"lineText":"    val requested_teams: List<GithubTeam>,","filePosition":46,"lineItems":[]},{"lineText":"    val labels: List<GithubLabel>,","filePosition":47,"lineItems":[]},{"lineText":"    val milestone: GithubMilestone?,","filePosition":48,"lineItems":[]},{"lineText":"    val draft: Boolean,","filePosition":49,"lineItems":[]},{"lineText":"    val commits_url: String,","filePosition":50,"lineItems":[]},{"lineText":"    val review_comments_url: String,","filePosition":51,"lineItems":[]},{"lineText":"    val review_comment_url: String,","filePosition":52,"lineItems":[]},{"lineText":"    val comments_url: String,","filePosition":53,"lineItems":[]},{"lineText":"    val statuses_url: String,","filePosition":54,"lineItems":[]},{"lineText":"    val head: GithubGitRef,","filePosition":55,"lineItems":[]},{"lineText":"    val base: GithubGitRef,","filePosition":56,"lineItems":[]},{"lineText":"    val _links: GithubLinkRelations,","filePosition":57,"lineItems":[]},{"lineText":"    val author_association: GithubAuthorAssociation","filePosition":58,"lineItems":[]},{"lineText":")","filePosition":59,"lineItems":[]},{"lineText":"","filePosition":60,"lineItems":[]},{"lineText":"@Serializable","filePosition":61,"lineItems":[]},{"lineText":"data class PullRequestDetails(","filePosition":62,"lineItems":[]},{"lineText":"    val url: String,","filePosition":63,"lineItems":[]},{"lineText":"    val id: Long,","filePosition":64,"lineItems":[]},{"lineText":"    val node_id: String,","filePosition":65,"lineItems":[]},{"lineText":"    val html_url: String,","filePosition":66,"lineItems":[]},{"lineText":"    val diff_url: String,","filePosition":67,"lineItems":[]},{"lineText":"    val patch_url: String,","filePosition":68,"lineItems":[]},{"lineText":"    val issue_url: String,","filePosition":69,"lineItems":[]},{"lineText":"    val commits_url: String,","filePosition":70,"lineItems":[]},{"lineText":"    val review_comments_url: String,","filePosition":71,"lineItems":[]},{"lineText":"    val review_comment_url: String,","filePosition":72,"lineItems":[]},{"lineText":"    val comments_url: String,","filePosition":73,"lineItems":[]},{"lineText":"    val statuses_url: String,","filePosition":74,"lineItems":[]},{"lineText":"    val number: Int,","filePosition":75,"lineItems":[]},{"lineText":"    val state: GithubPullRequestState,","filePosition":76,"lineItems":[]},{"lineText":"    val locked: Boolean,","filePosition":77,"lineItems":[]},{"lineText":"    val title: String,","filePosition":78,"lineItems":[]},{"lineText":"    val user: User,","filePosition":79,"lineItems":[]},{"lineText":"    val body: String,","filePosition":80,"lineItems":[]},{"lineText":"    val labels: List<GithubLabel>,","filePosition":81,"lineItems":[]},{"lineText":"    val milestone: GithubMilestone?,","filePosition":82,"lineItems":[]},{"lineText":"    val active_lock_reason: String? = null,","filePosition":83,"lineItems":[]},{"lineText":"    val created_at: String,","filePosition":84,"lineItems":[]},{"lineText":"    val updated_at: String,","filePosition":85,"lineItems":[]},{"lineText":"    val closed_at: String?,","filePosition":86,"lineItems":[]},{"lineText":"    val merged_at: String?,","filePosition":87,"lineItems":[]},{"lineText":"    val merge_commit_sha: String?,","filePosition":88,"lineItems":[]},{"lineText":"    val assignee: User,","filePosition":89,"lineItems":[]},{"lineText":"    val assignees: List<User>,","filePosition":90,"lineItems":[]},{"lineText":"    val requested_reviewers: List<User>,","filePosition":91,"lineItems":[]},{"lineText":"    val requested_teams: List<GithubTeam>,","filePosition":92,"lineItems":[]},{"lineText":"    val head: GithubGitRef,","filePosition":93,"lineItems":[]},{"lineText":"    val base: GithubGitRef,","filePosition":94,"lineItems":[]},{"lineText":"    val _links: GithubLinkRelations,","filePosition":95,"lineItems":[]},{"lineText":"    val author_association: GithubAuthorAssociation,","filePosition":96,"lineItems":[]},{"lineText":"    val draft: Boolean,","filePosition":97,"lineItems":[]},{"lineText":"    val merged: Boolean,","filePosition":98,"lineItems":[]},{"lineText":"    val mergeable: Boolean,","filePosition":99,"lineItems":[]},{"lineText":"    val rebaseable: Boolean,","filePosition":100,"lineItems":[]},{"lineText":"    val mergeable_state: String, //TODO Convert to Enum","filePosition":101,"lineItems":[]},{"lineText":"    val merged_by: User?,","filePosition":102,"lineItems":[]},{"lineText":"    val comments: Long,","filePosition":103,"lineItems":[]},{"lineText":"    val review_comments: Long,","filePosition":104,"lineItems":[]},{"lineText":"    val maintainer_can_modify: Boolean,","filePosition":105,"lineItems":[]},{"lineText":"    val commits: Long,","filePosition":106,"lineItems":[]},{"lineText":"    val additions: Long,","filePosition":107,"lineItems":[]},{"lineText":"    val deletions: Long,","filePosition":108,"lineItems":[]},{"lineText":"    val changed_files: Long","filePosition":109,"lineItems":[]},{"lineText":")","filePosition":110,"lineItems":[]},{"lineText":"","filePosition":111,"lineItems":[]},{"lineText":"@Serializable","filePosition":112,"lineItems":[]},{"lineText":"data class PullRequestUpdate(","filePosition":113,"lineItems":[]},{"lineText":"    val title: String,","filePosition":114,"lineItems":[]},{"lineText":"    val body: String,","filePosition":115,"lineItems":[]},{"lineText":"    val state: GithubPullRequestState,","filePosition":116,"lineItems":[]},{"lineText":"    /**","filePosition":117,"lineItems":[]},{"lineText":"     * The name of the branch you want your changes pulled into.","filePosition":118,"lineItems":[]},{"lineText":"     * This should be an existing branch on the current repository.","filePosition":119,"lineItems":[]},{"lineText":"     * You cannot update the base branch on a pull request to point to another repository.","filePosition":120,"lineItems":[]},{"lineText":"     */","filePosition":121,"lineItems":[]},{"lineText":"    val base: String,","filePosition":122,"lineItems":[]},{"lineText":"    val maintainer_can_modify: Boolean","filePosition":123,"lineItems":[]},{"lineText":")","filePosition":124,"lineItems":[]},{"lineText":"","filePosition":125,"lineItems":[]},{"lineText":"@Serializable","filePosition":126,"lineItems":[]},{"lineText":"data class GithubCommit(","filePosition":127,"lineItems":[]},{"lineText":"    val url: String,","filePosition":128,"lineItems":[]},{"lineText":"    val sha: String,","filePosition":129,"lineItems":[]},{"lineText":"    val node_id: String,","filePosition":130,"lineItems":[]},{"lineText":"    val html_url: String,","filePosition":131,"lineItems":[]},{"lineText":"    val comments_url: String,","filePosition":132,"lineItems":[]},{"lineText":"    val commit: GithubCommitDetails,","filePosition":133,"lineItems":[]},{"lineText":"    val author: User,","filePosition":134,"lineItems":[]},{"lineText":"    val committer: User,","filePosition":135,"lineItems":[]},{"lineText":"    val parents: List<TreeRef>","filePosition":136,"lineItems":[]},{"lineText":")","filePosition":137,"lineItems":[]},{"lineText":"","filePosition":138,"lineItems":[]},{"lineText":"@Serializable","filePosition":139,"lineItems":[]},{"lineText":"data class GithubCommitDetails(","filePosition":140,"lineItems":[]},{"lineText":"    val url: String,","filePosition":141,"lineItems":[]},{"lineText":"    val author: Map<String, String>,","filePosition":142,"lineItems":[]},{"lineText":"    val committer: Map<String, String>,","filePosition":143,"lineItems":[]},{"lineText":"    val message: String,","filePosition":144,"lineItems":[]},{"lineText":"    val tree: TreeRef,","filePosition":145,"lineItems":[]},{"lineText":"    val comment_count: Long,","filePosition":146,"lineItems":[]},{"lineText":"    val verification: CommitVerificationDetails","filePosition":147,"lineItems":[]},{"lineText":")","filePosition":148,"lineItems":[]},{"lineText":"","filePosition":149,"lineItems":[]},{"lineText":"@Serializable","filePosition":150,"lineItems":[]},{"lineText":"data class PullRequestFileDetails(","filePosition":151,"lineItems":[]},{"lineText":"    val sha: String,","filePosition":152,"lineItems":[]},{"lineText":"    val filename: String,","filePosition":153,"lineItems":[]},{"lineText":"    val status: String, // TODO: convert to enum","filePosition":154,"lineItems":[]},{"lineText":"    val additions: Long,","filePosition":155,"lineItems":[]},{"lineText":"    val deletions: Long,","filePosition":156,"lineItems":[]},{"lineText":"    val changes: Long,","filePosition":157,"lineItems":[]},{"lineText":"    val blob_url: String,","filePosition":158,"lineItems":[]},{"lineText":"    val raw_url: String,","filePosition":159,"lineItems":[]},{"lineText":"    val contents_url: String,","filePosition":160,"lineItems":[]},{"lineText":"    val patch: String","filePosition":161,"lineItems":[]},{"lineText":")","filePosition":162,"lineItems":[]},{"lineText":"","filePosition":163,"lineItems":[]},{"lineText":"@Serializable","filePosition":164,"lineItems":[]},{"lineText":"data class TreeRef(","filePosition":165,"lineItems":[]},{"lineText":"    val url: String,","filePosition":166,"lineItems":[]},{"lineText":"    val sha: String","filePosition":167,"lineItems":[]},{"lineText":")","filePosition":168,"lineItems":[]},{"lineText":"","filePosition":169,"lineItems":[]},{"lineText":"@Serializable","filePosition":170,"lineItems":[]},{"lineText":"data class CommitVerificationDetails(","filePosition":171,"lineItems":[]},{"lineText":"    val verified: Boolean,","filePosition":172,"lineItems":[]},{"lineText":"    val reason: String,","filePosition":173,"lineItems":[]},{"lineText":"    val signature: String? = null,","filePosition":174,"lineItems":[]},{"lineText":"    val payload: String? = null","filePosition":175,"lineItems":[]},{"lineText":")","filePosition":176,"lineItems":[]},{"lineText":"","filePosition":177,"lineItems":[]},{"lineText":"enum class GithubMergeMethod {","filePosition":178,"lineItems":[]},{"lineText":"    merge,","filePosition":179,"lineItems":[]},{"lineText":"    squash,","filePosition":180,"lineItems":[]},{"lineText":"    rebase","filePosition":181,"lineItems":[]},{"lineText":"}","filePosition":182,"lineItems":[]},{"lineText":"","filePosition":183,"lineItems":[]},{"lineText":"@Serializable","filePosition":184,"lineItems":[]},{"lineText":"data class MergePullRequest(","filePosition":185,"lineItems":[]},{"lineText":"    val commit_title: String,","filePosition":186,"lineItems":[]},{"lineText":"    val commit_message: String,","filePosition":187,"lineItems":[]},{"lineText":"    val sha: String,","filePosition":188,"lineItems":[]},{"lineText":"    val merge_method: GithubMergeMethod","filePosition":189,"lineItems":[]},{"lineText":")","filePosition":190,"lineItems":[]},{"lineText":"","filePosition":191,"lineItems":[]},{"lineText":"@Serializable","filePosition":192,"lineItems":[]},{"lineText":"data class GithubTeam(","filePosition":193,"lineItems":[]},{"lineText":"    val id: Long,","filePosition":194,"lineItems":[]},{"lineText":"    val node_id: String,","filePosition":195,"lineItems":[]},{"lineText":"    val url: String,","filePosition":196,"lineItems":[]},{"lineText":"    val html_url: String,","filePosition":197,"lineItems":[]},{"lineText":"    val name: String,","filePosition":198,"lineItems":[]},{"lineText":"    val slug: String,","filePosition":199,"lineItems":[]},{"lineText":"    val description: String,","filePosition":200,"lineItems":[]},{"lineText":"    val privacy: String,","filePosition":201,"lineItems":[]},{"lineText":"    val permission: String,","filePosition":202,"lineItems":[]},{"lineText":"    val members_url: String,","filePosition":203,"lineItems":[]},{"lineText":"    val repositories_url: String,","filePosition":204,"lineItems":[]},{"lineText":"    val parent: String?// TODO: Fix","filePosition":205,"lineItems":[]},{"lineText":")","filePosition":206,"lineItems":[]},{"lineText":"","filePosition":207,"lineItems":[]},{"lineText":"@Serializable","filePosition":208,"lineItems":[]},{"lineText":"data class GithubMilestone(","filePosition":209,"lineItems":[]},{"lineText":"    val url: String,","filePosition":210,"lineItems":[]},{"lineText":"    val html_url: String,","filePosition":211,"lineItems":[]},{"lineText":"    val labels_url: String,","filePosition":212,"lineItems":[]},{"lineText":"    val id: Long,","filePosition":213,"lineItems":[]},{"lineText":"    val node_id: String,","filePosition":214,"lineItems":[]},{"lineText":"    val number: Int,","filePosition":215,"lineItems":[]},{"lineText":"    val state: String,","filePosition":216,"lineItems":[]},{"lineText":"    val description: String,","filePosition":217,"lineItems":[]},{"lineText":"    val creator: User,","filePosition":218,"lineItems":[]},{"lineText":"    val open_issues: Long,","filePosition":219,"lineItems":[]},{"lineText":"    val closed_issues: Long,","filePosition":220,"lineItems":[]},{"lineText":"    val created_at: String,","filePosition":221,"lineItems":[]},{"lineText":"    val updated_at: String,","filePosition":222,"lineItems":[]},{"lineText":"    val closed_at: String?,","filePosition":223,"lineItems":[]},{"lineText":"    val due_on: String","filePosition":224,"lineItems":[]},{"lineText":")","filePosition":225,"lineItems":[]},{"lineText":"","filePosition":226,"lineItems":[]},{"lineText":"@Serializable","filePosition":227,"lineItems":[]},{"lineText":"data class GithubLabel(","filePosition":228,"lineItems":[]},{"lineText":"    val id: Long,","filePosition":229,"lineItems":[]},{"lineText":"    val node_id: String,","filePosition":230,"lineItems":[]},{"lineText":"    val url: String,","filePosition":231,"lineItems":[]},{"lineText":"    val name: String,","filePosition":232,"lineItems":[]},{"lineText":"    val description: String,","filePosition":233,"lineItems":[]},{"lineText":"    val color: String,","filePosition":234,"lineItems":[]},{"lineText":"    val default: Boolean","filePosition":235,"lineItems":[]},{"lineText":")","filePosition":236,"lineItems":[]},{"lineText":"","filePosition":237,"lineItems":[]},{"lineText":"@Serializable","filePosition":238,"lineItems":[]},{"lineText":"data class GithubLink(","filePosition":239,"lineItems":[]},{"lineText":"    val href: String","filePosition":240,"lineItems":[]},{"lineText":") {","filePosition":241,"lineItems":[]},{"lineText":"    override fun toString(): String {","filePosition":242,"lineItems":[]},{"lineText":"        return href","filePosition":243,"lineItems":[]},{"lineText":"    }","filePosition":244,"lineItems":[]},{"lineText":"}","filePosition":245,"lineItems":[]},{"lineText":"","filePosition":246,"lineItems":[]},{"lineText":"@Serializable","filePosition":247,"lineItems":[]},{"lineText":"data class GithubLinkRelations(","filePosition":248,"lineItems":[]},{"lineText":"    val self: GithubLink,","filePosition":249,"lineItems":[]},{"lineText":"    val html: GithubLink,","filePosition":250,"lineItems":[]},{"lineText":"    val issue: GithubLink,","filePosition":251,"lineItems":[]},{"lineText":"    val comments: GithubLink,","filePosition":252,"lineItems":[]},{"lineText":"    val review_comments: GithubLink,","filePosition":253,"lineItems":[]},{"lineText":"    val review_comment: GithubLink,","filePosition":254,"lineItems":[]},{"lineText":"    val commits: GithubLink,","filePosition":255,"lineItems":[]},{"lineText":"    val statuses: GithubLink","filePosition":256,"lineItems":[]},{"lineText":")","filePosition":257,"lineItems":[]},{"lineText":"","filePosition":258,"lineItems":[]},{"lineText":"@Serializable","filePosition":259,"lineItems":[]},{"lineText":"data class GithubGitRef(","filePosition":260,"lineItems":[]},{"lineText":"    val label: String,","filePosition":261,"lineItems":[]},{"lineText":"    val ref: String,","filePosition":262,"lineItems":[]},{"lineText":"    val sha: String,","filePosition":263,"lineItems":[]},{"lineText":"    val user: User,","filePosition":264,"lineItems":[]},{"lineText":"    val repo: Repo","filePosition":265,"lineItems":[]},{"lineText":")","filePosition":266,"lineItems":[]},{"lineText":"","filePosition":267,"lineItems":[]},{"lineText":"@Serializable","filePosition":268,"lineItems":[]},{"lineText":"data class Repo(","filePosition":269,"lineItems":[]},{"lineText":"    val id: Long,","filePosition":270,"lineItems":[]},{"lineText":"    val node_id: String,","filePosition":271,"lineItems":[]},{"lineText":"    val name: String,","filePosition":272,"lineItems":[]},{"lineText":"    val full_name: String,","filePosition":273,"lineItems":[]},{"lineText":"    val private: Boolean,","filePosition":274,"lineItems":[]},{"lineText":"    val owner: User,","filePosition":275,"lineItems":[]},{"lineText":"    val html_url: String,","filePosition":276,"lineItems":[]},{"lineText":"    val description: String,","filePosition":277,"lineItems":[]},{"lineText":"    val fork: Boolean,","filePosition":278,"lineItems":[]},{"lineText":"    val url: String,","filePosition":279,"lineItems":[]},{"lineText":"    val forks_url: String,","filePosition":280,"lineItems":[]},{"lineText":"    val keys_url: String,","filePosition":281,"lineItems":[]},{"lineText":"    val collaborators_url: String,","filePosition":282,"lineItems":[]},{"lineText":"    val teams_url: String,","filePosition":283,"lineItems":[]},{"lineText":"    val hooks_url: String,","filePosition":284,"lineItems":[]},{"lineText":"    val issue_events_url: String,","filePosition":285,"lineItems":[]},{"lineText":"    val events_url: String,","filePosition":286,"lineItems":[]},{"lineText":"    val assignees_url: String,","filePosition":287,"lineItems":[]},{"lineText":"    val branches_url: String,","filePosition":288,"lineItems":[]},{"lineText":"    val tags_url: String,","filePosition":289,"lineItems":[]},{"lineText":"    val blobs_url: String,","filePosition":290,"lineItems":[]},{"lineText":"    val git_tags_url: String,","filePosition":291,"lineItems":[]},{"lineText":"    val git_refs_url: String,","filePosition":292,"lineItems":[]},{"lineText":"    val trees_url: String,","filePosition":293,"lineItems":[]},{"lineText":"    val statuses_url: String,","filePosition":294,"lineItems":[]},{"lineText":"    val languages_url: String,","filePosition":295,"lineItems":[]},{"lineText":"    val stargazers_url: String,","filePosition":296,"lineItems":[]},{"lineText":"    val contributors_url: String,","filePosition":297,"lineItems":[]},{"lineText":"    val subscribers_url: String,","filePosition":298,"lineItems":[]},{"lineText":"    val subscription_url: String,","filePosition":299,"lineItems":[]},{"lineText":"    val commits_url: String,","filePosition":300,"lineItems":[]},{"lineText":"    val git_commits_url: String,","filePosition":301,"lineItems":[]},{"lineText":"    val comments_url: String,","filePosition":302,"lineItems":[]},{"lineText":"    val issue_comment_url: String,","filePosition":303,"lineItems":[]},{"lineText":"    val contents_url: String,","filePosition":304,"lineItems":[]},{"lineText":"    val compare_url: String,","filePosition":305,"lineItems":[]},{"lineText":"    val merges_url: String,","filePosition":306,"lineItems":[]},{"lineText":"    val archive_url: String,","filePosition":307,"lineItems":[]},{"lineText":"    val downloads_url: String,","filePosition":308,"lineItems":[]},{"lineText":"    val issues_url: String,","filePosition":309,"lineItems":[]},{"lineText":"    val pulls_url: String,","filePosition":310,"lineItems":[]},{"lineText":"    val milestones_url: String,","filePosition":311,"lineItems":[]},{"lineText":"    val notifications_url: String,","filePosition":312,"lineItems":[]},{"lineText":"    val labels_url: String,","filePosition":313,"lineItems":[]},{"lineText":"    val releases_url: String,","filePosition":314,"lineItems":[]},{"lineText":"    val deployments_url: String,","filePosition":315,"lineItems":[]},{"lineText":"    val created_at: String,","filePosition":316,"lineItems":[]},{"lineText":"    val updated_at: String,","filePosition":317,"lineItems":[]},{"lineText":"    val pushed_at: String,","filePosition":318,"lineItems":[]},{"lineText":"    val git_url: String,","filePosition":319,"lineItems":[]},{"lineText":"    val ssh_url: String,","filePosition":320,"lineItems":[]},{"lineText":"    val clone_url: String,","filePosition":321,"lineItems":[]},{"lineText":"    val svn_url: String,","filePosition":322,"lineItems":[]},{"lineText":"    val homepage: String?,","filePosition":323,"lineItems":[]},{"lineText":"    val size: Int,","filePosition":324,"lineItems":[]},{"lineText":"    val stargazers_count: Long,","filePosition":325,"lineItems":[]},{"lineText":"    val watchers_count: Long,","filePosition":326,"lineItems":[]},{"lineText":"    val language: String?,","filePosition":327,"lineItems":[]},{"lineText":"    val has_issues: Boolean,","filePosition":328,"lineItems":[]},{"lineText":"    val has_projects: Boolean,","filePosition":329,"lineItems":[]},{"lineText":"    val has_downloads: Boolean,","filePosition":330,"lineItems":[]},{"lineText":"    val has_wiki: Boolean,","filePosition":331,"lineItems":[]},{"lineText":"    val has_pages: Boolean,","filePosition":332,"lineItems":[]},{"lineText":"    val forks_count: Long,","filePosition":333,"lineItems":[]},{"lineText":"    val mirror_url: String?,","filePosition":334,"lineItems":[]},{"lineText":"    val archived: Boolean,","filePosition":335,"lineItems":[]},{"lineText":"    val disabled: Boolean,","filePosition":336,"lineItems":[]},{"lineText":"    val open_issues_count: Long,","filePosition":337,"lineItems":[]},{"lineText":"    val license: String? = null,","filePosition":338,"lineItems":[]},{"lineText":"    val forks: Long? = 0,","filePosition":339,"lineItems":[]},{"lineText":"    val open_issues: Long? = 0,","filePosition":340,"lineItems":[]},{"lineText":"    val watchers: Long? = 0,","filePosition":341,"lineItems":[]},{"lineText":"    val default_branch: String","filePosition":342,"lineItems":[]},{"lineText":")","filePosition":343,"lineItems":[]},{"lineText":"","filePosition":344,"lineItems":[]},{"lineText":"@Serializable","filePosition":345,"lineItems":[]},{"lineText":"data class User(","filePosition":346,"lineItems":[]},{"lineText":"    val login: String,","filePosition":347,"lineItems":[]},{"lineText":"    val id: Long,","filePosition":348,"lineItems":[]},{"lineText":"    val node_id: String,","filePosition":349,"lineItems":[]},{"lineText":"    val avatar_url: String,","filePosition":350,"lineItems":[]},{"lineText":"    val gravatar_id: String,","filePosition":351,"lineItems":[]},{"lineText":"    val url: String,","filePosition":352,"lineItems":[]},{"lineText":"    val html_url: String,","filePosition":353,"lineItems":[]},{"lineText":"    val followers_url: String,","filePosition":354,"lineItems":[]},{"lineText":"    val following_url: String,","filePosition":355,"lineItems":[]},{"lineText":"    val gists_url: String,","filePosition":356,"lineItems":[]},{"lineText":"    val starred_url: String,","filePosition":357,"lineItems":[]},{"lineText":"    val subscriptions_url: String,","filePosition":358,"lineItems":[]},{"lineText":"    val organizations_url: String,","filePosition":359,"lineItems":[]},{"lineText":"    val repos_url: String,","filePosition":360,"lineItems":[]},{"lineText":"    val events_url: String,","filePosition":361,"lineItems":[]},{"lineText":"    val received_events_url: String,","filePosition":362,"lineItems":[]},{"lineText":"    val type: String, //TODO: Convert to enum after reading docs","filePosition":363,"lineItems":[]},{"lineText":"    val site_admin: Boolean","filePosition":364,"lineItems":[]},{"lineText":")","filePosition":365,"lineItems":[]},{"lineText":"","filePosition":366,"lineItems":[]}],"path":"kotlin/src/commonMain/kotlin/git/provider/GithubDtos.kt"},"newFile":{"objectId":"e9d93adc94097d1a568bc8736ffc69132149ade9","fileLines":[{"lineText":"package git.provider","filePosition":0,"lineItems":[]},{"lineText":"import kotlinx.serialization.Serializable","filePosition":1,"lineItems":[]},{"lineText":"","filePosition":2,"lineItems":[]},{"lineText":"//TODO: Figure out kotlinx.serialisation to convert from snake case to camel case automatically","filePosition":3,"lineItems":[]},{"lineText":"","filePosition":4,"lineItems":[]},{"lineText":"enum class GithubAuthorAssociation{","filePosition":5,"lineItems":[]},{"lineText":"    CONTRIBUTOR,","filePosition":6,"lineItems":[]},{"lineText":"    OWNER","filePosition":7,"lineItems":[]},{"lineText":"}","filePosition":8,"lineItems":[]},{"lineText":"","filePosition":9,"lineItems":[]},{"lineText":"enum class GithubPullRequestState{","filePosition":10,"lineItems":[]},{"lineText":"    open,","filePosition":11,"lineItems":[]},{"lineText":"    closed","filePosition":12,"lineItems":[]},{"lineText":"}","filePosition":13,"lineItems":[]},{"lineText":"","filePosition":14,"lineItems":[]},{"lineText":"","filePosition":15,"lineItems":[]},{"lineText":"@Serializable","filePosition":16,"lineItems":[]},{"lineText":"data class RepoSummary(","filePosition":17,"lineItems":[]},{"lineText":"    val name: String,","filePosition":18,"lineItems":[]},{"lineText":"    val full_name: String,","filePosition":19,"lineItems":[]},{"lineText":"    val private: Boolean","filePosition":20,"lineItems":[]},{"lineText":")","filePosition":21,"lineItems":[]},{"lineText":"","filePosition":22,"lineItems":[]},{"lineText":"@Serializable","filePosition":23,"lineItems":[]},{"lineText":"data class PullRequestSummary(","filePosition":24,"lineItems":[]},{"lineText":"    val url: String,","filePosition":25,"lineItems":[]},{"lineText":"    val id: Long,","filePosition":26,"lineItems":[]},{"lineText":"    val node_id: String,","filePosition":27,"lineItems":[]},{"lineText":"    val html_url: String,","filePosition":28,"lineItems":[]},{"lineText":"    val diff_url: String,","filePosition":29,"lineItems":[]},{"lineText":"    val patch_url: String,","filePosition":30,"lineItems":[]},{"lineText":"    val issue_url: String,","filePosition":31,"lineItems":[]},{"lineText":"    val number: Int,","filePosition":32,"lineItems":[]},{"lineText":"    val state: GithubPullRequestState,","filePosition":33,"lineItems":[]},{"lineText":"    val locked: Boolean,","filePosition":34,"lineItems":[]},{"lineText":"    val title: String,","filePosition":35,"lineItems":[]},{"lineText":"    val user: User,","filePosition":36,"lineItems":[]},{"lineText":"    val body: String,","filePosition":37,"lineItems":[]},{"lineText":"    val created_at: String,","filePosition":38,"lineItems":[]},{"lineText":"    val updated_at: String,","filePosition":39,"lineItems":[]},{"lineText":"    val closed_at: String?,","filePosition":40,"lineItems":[]},{"lineText":"    val merged_at: String?,","filePosition":41,"lineItems":[]},{"lineText":"    val merge_commit_sha: String,","filePosition":42,"lineItems":[]},{"lineText":"    val assignee: User?,","filePosition":43,"lineItems":[]},{"lineText":"    val assignees: List<User>,","filePosition":44,"lineItems":[]},{"lineText":"    val requested_reviewers: List<User>,","filePosition":45,"lineItems":[]},{"lineText":"    val requested_teams: List<GithubTeam>,","filePosition":46,"lineItems":[]},{"lineText":"    val labels: List<GithubLabel>,","filePosition":47,"lineItems":[]},{"lineText":"    val milestone: GithubMilestone?,","filePosition":48,"lineItems":[]},{"lineText":"    val draft: Boolean,","filePosition":49,"lineItems":[]},{"lineText":"    val commits_url: String,","filePosition":50,"lineItems":[]},{"lineText":"    val review_comments_url: String,","filePosition":51,"lineItems":[]},{"lineText":"    val review_comment_url: String,","filePosition":52,"lineItems":[]},{"lineText":"    val comments_url: String,","filePosition":53,"lineItems":[]},{"lineText":"    val statuses_url: String,","filePosition":54,"lineItems":[]},{"lineText":"    val head: GithubGitRef,","filePosition":55,"lineItems":[]},{"lineText":"    val base: GithubGitRef,","filePosition":56,"lineItems":[]},{"lineText":"    val _links: GithubLinkRelations,","filePosition":57,"lineItems":[]},{"lineText":"    val author_association: GithubAuthorAssociation","filePosition":58,"lineItems":[]},{"lineText":")","filePosition":59,"lineItems":[]},{"lineText":"","filePosition":60,"lineItems":[]},{"lineText":"@Serializable","filePosition":61,"lineItems":[]},{"lineText":"data class PullRequestDetails(","filePosition":62,"lineItems":[]},{"lineText":"    val url: String,","filePosition":63,"lineItems":[]},{"lineText":"    val id: Long,","filePosition":64,"lineItems":[]},{"lineText":"    val node_id: String,","filePosition":65,"lineItems":[]},{"lineText":"    val html_url: String,","filePosition":66,"lineItems":[]},{"lineText":"    val diff_url: String,","filePosition":67,"lineItems":[]},{"lineText":"    val patch_url: String,","filePosition":68,"lineItems":[]},{"lineText":"    val issue_url: String,","filePosition":69,"lineItems":[]},{"lineText":"    val commits_url: String,","filePosition":70,"lineItems":[]},{"lineText":"    val review_comments_url: String,","filePosition":71,"lineItems":[]},{"lineText":"    val review_comment_url: String,","filePosition":72,"lineItems":[]},{"lineText":"    val comments_url: String,","filePosition":73,"lineItems":[]},{"lineText":"    val statuses_url: String,","filePosition":74,"lineItems":[]},{"lineText":"    val number: Int,","filePosition":75,"lineItems":[]},{"lineText":"    val state: GithubPullRequestState,","filePosition":76,"lineItems":[]},{"lineText":"    val locked: Boolean,","filePosition":77,"lineItems":[]},{"lineText":"    val title: String,","filePosition":78,"lineItems":[]},{"lineText":"    val user: User,","filePosition":79,"lineItems":[]},{"lineText":"    val body: String,","filePosition":80,"lineItems":[]},{"lineText":"    val labels: List<GithubLabel>,","filePosition":81,"lineItems":[]},{"lineText":"    val milestone: GithubMilestone?,","filePosition":82,"lineItems":[]},{"lineText":"    val active_lock_reason: String? = null,","filePosition":83,"lineItems":[]},{"lineText":"    val created_at: String,","filePosition":84,"lineItems":[]},{"lineText":"    val updated_at: String,","filePosition":85,"lineItems":[]},{"lineText":"    val closed_at: String?,","filePosition":86,"lineItems":[]},{"lineText":"    val merged_at: String?,","filePosition":87,"lineItems":[]},{"lineText":"    val merge_commit_sha: String?,","filePosition":88,"lineItems":[]},{"lineText":"    val assignee: User?,","filePosition":89,"lineItems":[]},{"lineText":"    val assignees: List<User>,","filePosition":90,"lineItems":[]},{"lineText":"    val requested_reviewers: List<User>,","filePosition":91,"lineItems":[]},{"lineText":"    val requested_teams: List<GithubTeam>,","filePosition":92,"lineItems":[]},{"lineText":"    val head: GithubGitRef,","filePosition":93,"lineItems":[]},{"lineText":"    val base: GithubGitRef,","filePosition":94,"lineItems":[]},{"lineText":"    val _links: GithubLinkRelations,","filePosition":95,"lineItems":[]},{"lineText":"    val author_association: GithubAuthorAssociation,","filePosition":96,"lineItems":[]},{"lineText":"    val draft: Boolean,","filePosition":97,"lineItems":[]},{"lineText":"    val merged: Boolean,","filePosition":98,"lineItems":[]},{"lineText":"    val mergeable: Boolean,","filePosition":99,"lineItems":[]},{"lineText":"    val rebaseable: Boolean,","filePosition":100,"lineItems":[]},{"lineText":"    val mergeable_state: String, //TODO Convert to Enum","filePosition":101,"lineItems":[]},{"lineText":"    val merged_by: User?,","filePosition":102,"lineItems":[]},{"lineText":"    val comments: Long,","filePosition":103,"lineItems":[]},{"lineText":"    val review_comments: Long,","filePosition":104,"lineItems":[]},{"lineText":"    val maintainer_can_modify: Boolean,","filePosition":105,"lineItems":[]},{"lineText":"    val commits: Long,","filePosition":106,"lineItems":[]},{"lineText":"    val additions: Long,","filePosition":107,"lineItems":[]},{"lineText":"    val deletions: Long,","filePosition":108,"lineItems":[]},{"lineText":"    val changed_files: Long","filePosition":109,"lineItems":[]},{"lineText":")","filePosition":110,"lineItems":[]},{"lineText":"","filePosition":111,"lineItems":[]},{"lineText":"@Serializable","filePosition":112,"lineItems":[]},{"lineText":"data class PullRequestUpdate(","filePosition":113,"lineItems":[]},{"lineText":"    val title: String,","filePosition":114,"lineItems":[]},{"lineText":"    val body: String,","filePosition":115,"lineItems":[]},{"lineText":"    val state: GithubPullRequestState,","filePosition":116,"lineItems":[]},{"lineText":"    /**","filePosition":117,"lineItems":[]},{"lineText":"     * The name of the branch you want your changes pulled into.","filePosition":118,"lineItems":[]},{"lineText":"     * This should be an existing branch on the current repository.","filePosition":119,"lineItems":[]},{"lineText":"     * You cannot update the base branch on a pull request to point to another repository.","filePosition":120,"lineItems":[]},{"lineText":"     */","filePosition":121,"lineItems":[]},{"lineText":"    val base: String,","filePosition":122,"lineItems":[]},{"lineText":"    val maintainer_can_modify: Boolean","filePosition":123,"lineItems":[]},{"lineText":")","filePosition":124,"lineItems":[]},{"lineText":"","filePosition":125,"lineItems":[]},{"lineText":"@Serializable","filePosition":126,"lineItems":[]},{"lineText":"data class GithubCommit(","filePosition":127,"lineItems":[]},{"lineText":"    val url: String,","filePosition":128,"lineItems":[]},{"lineText":"    val sha: String,","filePosition":129,"lineItems":[]},{"lineText":"    val node_id: String,","filePosition":130,"lineItems":[]},{"lineText":"    val html_url: String,","filePosition":131,"lineItems":[]},{"lineText":"    val comments_url: String,","filePosition":132,"lineItems":[]},{"lineText":"    val commit: GithubCommitDetails,","filePosition":133,"lineItems":[]},{"lineText":"    val author: User,","filePosition":134,"lineItems":[]},{"lineText":"    val committer: User,","filePosition":135,"lineItems":[]},{"lineText":"    val parents: List<TreeRef>","filePosition":136,"lineItems":[]},{"lineText":")","filePosition":137,"lineItems":[]},{"lineText":"","filePosition":138,"lineItems":[]},{"lineText":"@Serializable","filePosition":139,"lineItems":[]},{"lineText":"data class GithubCommitDetails(","filePosition":140,"lineItems":[]},{"lineText":"    val url: String,","filePosition":141,"lineItems":[]},{"lineText":"    val author: Map<String, String>,","filePosition":142,"lineItems":[]},{"lineText":"    val committer: Map<String, String>,","filePosition":143,"lineItems":[]},{"lineText":"    val message: String,","filePosition":144,"lineItems":[]},{"lineText":"    val tree: TreeRef,","filePosition":145,"lineItems":[]},{"lineText":"    val comment_count: Long,","filePosition":146,"lineItems":[]},{"lineText":"    val verification: CommitVerificationDetails","filePosition":147,"lineItems":[]},{"lineText":")","filePosition":148,"lineItems":[]},{"lineText":"","filePosition":149,"lineItems":[]},{"lineText":"@Serializable","filePosition":150,"lineItems":[]},{"lineText":"data class PullRequestFileDetails(","filePosition":151,"lineItems":[]},{"lineText":"    val sha: String,","filePosition":152,"lineItems":[]},{"lineText":"    val filename: String,","filePosition":153,"lineItems":[]},{"lineText":"    val status: String, // TODO: convert to enum","filePosition":154,"lineItems":[]},{"lineText":"    val additions: Long,","filePosition":155,"lineItems":[]},{"lineText":"    val deletions: Long,","filePosition":156,"lineItems":[]},{"lineText":"    val changes: Long,","filePosition":157,"lineItems":[]},{"lineText":"    val blob_url: String,","filePosition":158,"lineItems":[]},{"lineText":"    val raw_url: String,","filePosition":159,"lineItems":[]},{"lineText":"    val contents_url: String,","filePosition":160,"lineItems":[]},{"lineText":"    val patch: String","filePosition":161,"lineItems":[]},{"lineText":")","filePosition":162,"lineItems":[]},{"lineText":"","filePosition":163,"lineItems":[]},{"lineText":"@Serializable","filePosition":164,"lineItems":[]},{"lineText":"data class TreeRef(","filePosition":165,"lineItems":[]},{"lineText":"    val url: String,","filePosition":166,"lineItems":[]},{"lineText":"    val sha: String","filePosition":167,"lineItems":[]},{"lineText":")","filePosition":168,"lineItems":[]},{"lineText":"","filePosition":169,"lineItems":[]},{"lineText":"@Serializable","filePosition":170,"lineItems":[]},{"lineText":"data class CommitVerificationDetails(","filePosition":171,"lineItems":[]},{"lineText":"    val verified: Boolean,","filePosition":172,"lineItems":[]},{"lineText":"    val reason: String,","filePosition":173,"lineItems":[]},{"lineText":"    val signature: String? = null,","filePosition":174,"lineItems":[]},{"lineText":"    val payload: String? = null","filePosition":175,"lineItems":[]},{"lineText":")","filePosition":176,"lineItems":[]},{"lineText":"","filePosition":177,"lineItems":[]},{"lineText":"enum class GithubMergeMethod {","filePosition":178,"lineItems":[]},{"lineText":"    merge,","filePosition":179,"lineItems":[]},{"lineText":"    squash,","filePosition":180,"lineItems":[]},{"lineText":"    rebase","filePosition":181,"lineItems":[]},{"lineText":"}","filePosition":182,"lineItems":[]},{"lineText":"","filePosition":183,"lineItems":[]},{"lineText":"@Serializable","filePosition":184,"lineItems":[]},{"lineText":"data class MergePullRequest(","filePosition":185,"lineItems":[]},{"lineText":"    val commit_title: String,","filePosition":186,"lineItems":[]},{"lineText":"    val commit_message: String,","filePosition":187,"lineItems":[]},{"lineText":"    val sha: String,","filePosition":188,"lineItems":[]},{"lineText":"    val merge_method: GithubMergeMethod","filePosition":189,"lineItems":[]},{"lineText":")","filePosition":190,"lineItems":[]},{"lineText":"","filePosition":191,"lineItems":[]},{"lineText":"@Serializable","filePosition":192,"lineItems":[]},{"lineText":"data class GithubTeam(","filePosition":193,"lineItems":[]},{"lineText":"    val id: Long,","filePosition":194,"lineItems":[]},{"lineText":"    val node_id: String,","filePosition":195,"lineItems":[]},{"lineText":"    val url: String,","filePosition":196,"lineItems":[]},{"lineText":"    val html_url: String,","filePosition":197,"lineItems":[]},{"lineText":"    val name: String,","filePosition":198,"lineItems":[]},{"lineText":"    val slug: String,","filePosition":199,"lineItems":[]},{"lineText":"    val description: String,","filePosition":200,"lineItems":[]},{"lineText":"    val privacy: String,","filePosition":201,"lineItems":[]},{"lineText":"    val permission: String,","filePosition":202,"lineItems":[]},{"lineText":"    val members_url: String,","filePosition":203,"lineItems":[]},{"lineText":"    val repositories_url: String,","filePosition":204,"lineItems":[]},{"lineText":"    val parent: String?// TODO: Fix","filePosition":205,"lineItems":[]},{"lineText":")","filePosition":206,"lineItems":[]},{"lineText":"","filePosition":207,"lineItems":[]},{"lineText":"@Serializable","filePosition":208,"lineItems":[]},{"lineText":"data class GithubMilestone(","filePosition":209,"lineItems":[]},{"lineText":"    val url: String,","filePosition":210,"lineItems":[]},{"lineText":"    val html_url: String,","filePosition":211,"lineItems":[]},{"lineText":"    val labels_url: String,","filePosition":212,"lineItems":[]},{"lineText":"    val id: Long,","filePosition":213,"lineItems":[]},{"lineText":"    val node_id: String,","filePosition":214,"lineItems":[]},{"lineText":"    val number: Int,","filePosition":215,"lineItems":[]},{"lineText":"    val state: String,","filePosition":216,"lineItems":[]},{"lineText":"    val description: String,","filePosition":217,"lineItems":[]},{"lineText":"    val creator: User,","filePosition":218,"lineItems":[]},{"lineText":"    val open_issues: Long,","filePosition":219,"lineItems":[]},{"lineText":"    val closed_issues: Long,","filePosition":220,"lineItems":[]},{"lineText":"    val created_at: String,","filePosition":221,"lineItems":[]},{"lineText":"    val updated_at: String,","filePosition":222,"lineItems":[]},{"lineText":"    val closed_at: String?,","filePosition":223,"lineItems":[]},{"lineText":"    val due_on: String","filePosition":224,"lineItems":[]},{"lineText":")","filePosition":225,"lineItems":[]},{"lineText":"","filePosition":226,"lineItems":[]},{"lineText":"@Serializable","filePosition":227,"lineItems":[]},{"lineText":"data class GithubLabel(","filePosition":228,"lineItems":[]},{"lineText":"    val id: Long,","filePosition":229,"lineItems":[]},{"lineText":"    val node_id: String,","filePosition":230,"lineItems":[]},{"lineText":"    val url: String,","filePosition":231,"lineItems":[]},{"lineText":"    val name: String,","filePosition":232,"lineItems":[]},{"lineText":"    val description: String,","filePosition":233,"lineItems":[]},{"lineText":"    val color: String,","filePosition":234,"lineItems":[]},{"lineText":"    val default: Boolean","filePosition":235,"lineItems":[]},{"lineText":")","filePosition":236,"lineItems":[]},{"lineText":"","filePosition":237,"lineItems":[]},{"lineText":"@Serializable","filePosition":238,"lineItems":[]},{"lineText":"data class GithubLink(","filePosition":239,"lineItems":[]},{"lineText":"    val href: String","filePosition":240,"lineItems":[]},{"lineText":") {","filePosition":241,"lineItems":[]},{"lineText":"    override fun toString(): String {","filePosition":242,"lineItems":[]},{"lineText":"        return href","filePosition":243,"lineItems":[]},{"lineText":"    }","filePosition":244,"lineItems":[]},{"lineText":"}","filePosition":245,"lineItems":[]},{"lineText":"","filePosition":246,"lineItems":[]},{"lineText":"@Serializable","filePosition":247,"lineItems":[]},{"lineText":"data class GithubLinkRelations(","filePosition":248,"lineItems":[]},{"lineText":"    val self: GithubLink,","filePosition":249,"lineItems":[]},{"lineText":"    val html: GithubLink,","filePosition":250,"lineItems":[]},{"lineText":"    val issue: GithubLink,","filePosition":251,"lineItems":[]},{"lineText":"    val comments: GithubLink,","filePosition":252,"lineItems":[]},{"lineText":"    val review_comments: GithubLink,","filePosition":253,"lineItems":[]},{"lineText":"    val review_comment: GithubLink,","filePosition":254,"lineItems":[]},{"lineText":"    val commits: GithubLink,","filePosition":255,"lineItems":[]},{"lineText":"    val statuses: GithubLink","filePosition":256,"lineItems":[]},{"lineText":")","filePosition":257,"lineItems":[]},{"lineText":"","filePosition":258,"lineItems":[]},{"lineText":"@Serializable","filePosition":259,"lineItems":[]},{"lineText":"data class GithubGitRef(","filePosition":260,"lineItems":[]},{"lineText":"    val label: String,","filePosition":261,"lineItems":[]},{"lineText":"    val ref: String,","filePosition":262,"lineItems":[]},{"lineText":"    val sha: String,","filePosition":263,"lineItems":[]},{"lineText":"    val user: User,","filePosition":264,"lineItems":[]},{"lineText":"    val repo: Repo","filePosition":265,"lineItems":[]},{"lineText":")","filePosition":266,"lineItems":[]},{"lineText":"","filePosition":267,"lineItems":[]},{"lineText":"@Serializable","filePosition":268,"lineItems":[]},{"lineText":"data class Repo(","filePosition":269,"lineItems":[]},{"lineText":"    val id: Long,","filePosition":270,"lineItems":[]},{"lineText":"    val node_id: String,","filePosition":271,"lineItems":[]},{"lineText":"    val name: String,","filePosition":272,"lineItems":[]},{"lineText":"    val full_name: String,","filePosition":273,"lineItems":[]},{"lineText":"    val private: Boolean,","filePosition":274,"lineItems":[]},{"lineText":"    val owner: User,","filePosition":275,"lineItems":[]},{"lineText":"    val html_url: String,","filePosition":276,"lineItems":[]},{"lineText":"    val description: String,","filePosition":277,"lineItems":[]},{"lineText":"    val fork: Boolean,","filePosition":278,"lineItems":[]},{"lineText":"    val url: String,","filePosition":279,"lineItems":[]},{"lineText":"    val forks_url: String,","filePosition":280,"lineItems":[]},{"lineText":"    val keys_url: String,","filePosition":281,"lineItems":[]},{"lineText":"    val collaborators_url: String,","filePosition":282,"lineItems":[]},{"lineText":"    val teams_url: String,","filePosition":283,"lineItems":[]},{"lineText":"    val hooks_url: String,","filePosition":284,"lineItems":[]},{"lineText":"    val issue_events_url: String,","filePosition":285,"lineItems":[]},{"lineText":"    val events_url: String,","filePosition":286,"lineItems":[]},{"lineText":"    val assignees_url: String,","filePosition":287,"lineItems":[]},{"lineText":"    val branches_url: String,","filePosition":288,"lineItems":[]},{"lineText":"    val tags_url: String,","filePosition":289,"lineItems":[]},{"lineText":"    val blobs_url: String,","filePosition":290,"lineItems":[]},{"lineText":"    val git_tags_url: String,","filePosition":291,"lineItems":[]},{"lineText":"    val git_refs_url: String,","filePosition":292,"lineItems":[]},{"lineText":"    val trees_url: String,","filePosition":293,"lineItems":[]},{"lineText":"    val statuses_url: String,","filePosition":294,"lineItems":[]},{"lineText":"    val languages_url: String,","filePosition":295,"lineItems":[]},{"lineText":"    val stargazers_url: String,","filePosition":296,"lineItems":[]},{"lineText":"    val contributors_url: String,","filePosition":297,"lineItems":[]},{"lineText":"    val subscribers_url: String,","filePosition":298,"lineItems":[]},{"lineText":"    val subscription_url: String,","filePosition":299,"lineItems":[]},{"lineText":"    val commits_url: String,","filePosition":300,"lineItems":[]},{"lineText":"    val git_commits_url: String,","filePosition":301,"lineItems":[]},{"lineText":"    val comments_url: String,","filePosition":302,"lineItems":[]},{"lineText":"    val issue_comment_url: String,","filePosition":303,"lineItems":[]},{"lineText":"    val contents_url: String,","filePosition":304,"lineItems":[]},{"lineText":"    val compare_url: String,","filePosition":305,"lineItems":[]},{"lineText":"    val merges_url: String,","filePosition":306,"lineItems":[]},{"lineText":"    val archive_url: String,","filePosition":307,"lineItems":[]},{"lineText":"    val downloads_url: String,","filePosition":308,"lineItems":[]},{"lineText":"    val issues_url: String,","filePosition":309,"lineItems":[]},{"lineText":"    val pulls_url: String,","filePosition":310,"lineItems":[]},{"lineText":"    val milestones_url: String,","filePosition":311,"lineItems":[]},{"lineText":"    val notifications_url: String,","filePosition":312,"lineItems":[]},{"lineText":"    val labels_url: String,","filePosition":313,"lineItems":[]},{"lineText":"    val releases_url: String,","filePosition":314,"lineItems":[]},{"lineText":"    val deployments_url: String,","filePosition":315,"lineItems":[]},{"lineText":"    val created_at: String,","filePosition":316,"lineItems":[]},{"lineText":"    val updated_at: String,","filePosition":317,"lineItems":[]},{"lineText":"    val pushed_at: String,","filePosition":318,"lineItems":[]},{"lineText":"    val git_url: String,","filePosition":319,"lineItems":[]},{"lineText":"    val ssh_url: String,","filePosition":320,"lineItems":[]},{"lineText":"    val clone_url: String,","filePosition":321,"lineItems":[]},{"lineText":"    val svn_url: String,","filePosition":322,"lineItems":[]},{"lineText":"    val homepage: String?,","filePosition":323,"lineItems":[]},{"lineText":"    val size: Int,","filePosition":324,"lineItems":[]},{"lineText":"    val stargazers_count: Long,","filePosition":325,"lineItems":[]},{"lineText":"    val watchers_count: Long,","filePosition":326,"lineItems":[]},{"lineText":"    val language: String?,","filePosition":327,"lineItems":[]},{"lineText":"    val has_issues: Boolean,","filePosition":328,"lineItems":[]},{"lineText":"    val has_projects: Boolean,","filePosition":329,"lineItems":[]},{"lineText":"    val has_downloads: Boolean,","filePosition":330,"lineItems":[]},{"lineText":"    val has_wiki: Boolean,","filePosition":331,"lineItems":[]},{"lineText":"    val has_pages: Boolean,","filePosition":332,"lineItems":[]},{"lineText":"    val forks_count: Long,","filePosition":333,"lineItems":[]},{"lineText":"    val mirror_url: String?,","filePosition":334,"lineItems":[]},{"lineText":"    val archived: Boolean,","filePosition":335,"lineItems":[]},{"lineText":"    val disabled: Boolean,","filePosition":336,"lineItems":[]},{"lineText":"    val open_issues_count: Long,","filePosition":337,"lineItems":[]},{"lineText":"    val license: String? = null,","filePosition":338,"lineItems":[]},{"lineText":"    val forks: Long? = 0,","filePosition":339,"lineItems":[]},{"lineText":"    val open_issues: Long? = 0,","filePosition":340,"lineItems":[]},{"lineText":"    val watchers: Long? = 0,","filePosition":341,"lineItems":[]},{"lineText":"    val default_branch: String","filePosition":342,"lineItems":[]},{"lineText":")","filePosition":343,"lineItems":[]},{"lineText":"","filePosition":344,"lineItems":[]},{"lineText":"@Serializable","filePosition":345,"lineItems":[]},{"lineText":"data class User(","filePosition":346,"lineItems":[]},{"lineText":"    val login: String,","filePosition":347,"lineItems":[]},{"lineText":"    val id: Long,","filePosition":348,"lineItems":[]},{"lineText":"    val node_id: String,","filePosition":349,"lineItems":[]},{"lineText":"    val avatar_url: String,","filePosition":350,"lineItems":[]},{"lineText":"    val gravatar_id: String,","filePosition":351,"lineItems":[]},{"lineText":"    val url: String,","filePosition":352,"lineItems":[]},{"lineText":"    val html_url: String,","filePosition":353,"lineItems":[]},{"lineText":"    val followers_url: String,","filePosition":354,"lineItems":[]},{"lineText":"    val following_url: String,","filePosition":355,"lineItems":[]},{"lineText":"    val gists_url: String,","filePosition":356,"lineItems":[]},{"lineText":"    val starred_url: String,","filePosition":357,"lineItems":[]},{"lineText":"    val subscriptions_url: String,","filePosition":358,"lineItems":[]},{"lineText":"    val organizations_url: String,","filePosition":359,"lineItems":[]},{"lineText":"    val repos_url: String,","filePosition":360,"lineItems":[]},{"lineText":"    val events_url: String,","filePosition":361,"lineItems":[]},{"lineText":"    val received_events_url: String,","filePosition":362,"lineItems":[]},{"lineText":"    val type: String, //TODO: Convert to enum after reading docs","filePosition":363,"lineItems":[]},{"lineText":"    val site_admin: Boolean","filePosition":364,"lineItems":[]},{"lineText":")","filePosition":365,"lineItems":[]},{"lineText":"","filePosition":366,"lineItems":[]}],"path":"kotlin/src/commonMain/kotlin/git/provider/GithubDtos.kt"},"diffChangeType":"MODIFY","tShirtSize":"S","editList":[{"beginA":43,"beginB":43,"endA":44,"endB":44},{"beginA":89,"beginB":89,"endA":90,"endB":90}]},{"oldFile":{"objectId":"5dd6a378805de5a37d650bb81e5cb0903c2109f9","fileLines":[{"lineText":"import codereview.DiffChangeType","filePosition":0,"lineItems":[]},{"lineText":"import codereview.Edit","filePosition":1,"lineItems":[]},{"lineText":"import codereview.FileDiff","filePosition":2,"lineItems":[]},{"lineText":"import codereview.FileDiffList","filePosition":3,"lineItems":[]},{"lineText":"import codereview.FileHeader","filePosition":4,"lineItems":[]},{"lineText":"import react.dom.render","filePosition":5,"lineItems":[]},{"lineText":"import supercr.css.styles","filePosition":6,"lineItems":[]},{"lineText":"import supercr.views.changeSetScreen","filePosition":7,"lineItems":[]},{"lineText":"import supercr.views.fileView","filePosition":8,"lineItems":[]},{"lineText":"import supercr.views.getStartedScreen","filePosition":9,"lineItems":[]},{"lineText":"import kotlin.browser.document","filePosition":10,"lineItems":[]},{"lineText":"","filePosition":11,"lineItems":[]},{"lineText":"fun main () {","filePosition":12,"lineItems":[]},{"lineText":"    document.head!!.insertAdjacentHTML(\"afterbegin\", \"<style>$styles</style>\")","filePosition":13,"lineItems":[]},{"lineText":"    /**","filePosition":14,"lineItems":[]},{"lineText":"     * The official documentation specifies that we create a <div id = 'root'> in index.html","filePosition":15,"lineItems":[]},{"lineText":"     * Somehow, that prevents tests from executing properly (this was after we introduced react)","filePosition":16,"lineItems":[]},{"lineText":"     * As a workaround, we create the root div element here instead","filePosition":17,"lineItems":[]},{"lineText":"     * See here for more details - https://stackoverflow.com/questions/61839800/unit-testing-in-kotlin-js/62058511#62058511","filePosition":18,"lineItems":[]},{"lineText":"     */","filePosition":19,"lineItems":[]},{"lineText":"    document.body!!.insertAdjacentHTML(\"afterbegin\", \"<div id='root'></div>\" )","filePosition":20,"lineItems":[]},{"lineText":"    renderDiffView()","filePosition":21,"lineItems":[]},{"lineText":"//    renderGettingStarted()","filePosition":22,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"}","filePosition":23,"lineItems":[]},{"lineText":"","filePosition":24,"lineItems":[]},{"lineText":"private fun renderGettingStarted() {","filePosition":25,"lineItems":[]},{"lineText":"    render(document.getElementById(\"root\")) {","filePosition":26,"lineItems":[]},{"lineText":"        getStartedScreen {","filePosition":27,"lineItems":[]},{"lineText":"","filePosition":28,"lineItems":[]},{"lineText":"        }","filePosition":29,"lineItems":[]},{"lineText":"    }","filePosition":30,"lineItems":[]},{"lineText":"}","filePosition":31,"lineItems":[]},{"lineText":"","filePosition":32,"lineItems":[]},{"lineText":"private fun renderDiffView() {","filePosition":33,"lineItems":[]},{"lineText":"    render(document.getElementById(\"root\")) {","filePosition":34,"lineItems":[]},{"lineText":"        changeSetScreen {","filePosition":35,"lineItems":[]},{"lineText":"            fileDiffList = FileDiffList(","filePosition":36,"lineItems":[]},{"lineText":"                fileDiffs =  listOf(","filePosition":37,"lineItems":[]},{"lineText":"                    testModifyDiff,","filePosition":38,"lineItems":[]},{"lineText":"                    testAddFileDifff","filePosition":39,"lineItems":[]},{"lineText":"                )","filePosition":40,"lineItems":[]},{"lineText":"            )","filePosition":41,"lineItems":[]},{"lineText":"        }","filePosition":42,"lineItems":[]},{"lineText":"    }","filePosition":43,"lineItems":[]},{"lineText":"}","filePosition":44,"lineItems":[]},{"lineText":"","filePosition":45,"lineItems":[]},{"lineText":"private val testModifyDiff = FileDiff(","filePosition":46,"lineItems":[]},{"lineText":"    rawTextOld = \"\"\"","filePosition":47,"lineItems":[]},{"lineText":"                public class FooBarBaz {","filePosition":48,"lineItems":[]},{"lineText":"                  public static void main() {","filePosition":49,"lineItems":[]},{"lineText":"                    System.out.println(\"This is a line\");","filePosition":50,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 2nd line\");","filePosition":51,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 3rd line\");","filePosition":52,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 4th line\");","filePosition":53,"lineItems":[]},{"lineText":"                  }","filePosition":54,"lineItems":[]},{"lineText":"                }","filePosition":55,"lineItems":[]},{"lineText":"            ","filePosition":56,"lineItems":[]},{"lineText":"        \"\"\".trimIndent(),","filePosition":57,"lineItems":[]},{"lineText":"    rawTextNew = \"\"\"","filePosition":58,"lineItems":[]},{"lineText":"                public class FooBarBaz {","filePosition":59,"lineItems":[]},{"lineText":"                  // Adding a comment - which will be a completely new line","filePosition":60,"lineItems":[]},{"lineText":"                  public static void main() {","filePosition":61,"lineItems":[]},{"lineText":"                    System.out.println(\"This is a line\");","filePosition":62,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 2nd changed line\");","filePosition":63,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 3rd changed line\");","filePosition":64,"lineItems":[]},{"lineText":"                    System.out.println(\"This is a new line\");","filePosition":65,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 4th line\");","filePosition":66,"lineItems":[]},{"lineText":"","filePosition":67,"lineItems":[]},{"lineText":"                }","filePosition":68,"lineItems":[]},{"lineText":"        \"\"\".trimIndent(),","filePosition":69,"lineItems":[]},{"lineText":"    diffChangeType = DiffChangeType.MODIFY,","filePosition":70,"lineItems":[]},{"lineText":"    fileHeader = FileHeader(","filePosition":71,"lineItems":[]},{"lineText":"        fileNewPath = \"kotlin-js/src/commonMain/kotlin/codereview/ChangesetM.kt\",","filePosition":72,"lineItems":[]},{"lineText":"        fileOldPath = \"kotlin-js/src/commonMain/kotlin/codereview/Changeset.kt\",","filePosition":73,"lineItems":[]},{"lineText":"        description = \"\",","filePosition":74,"lineItems":[]},{"lineText":"        identifier = \"xyz1234\",","filePosition":75,"lineItems":[]},{"lineText":"        editList = listOf(","filePosition":76,"lineItems":[]},{"lineText":"            Edit(beginA = 1, endA = 1, beginB = 1, endB = 2),","filePosition":77,"lineItems":[]},{"lineText":"            Edit(beginA = 3, endA = 5, beginB = 4, endB = 7),","filePosition":78,"lineItems":[]},{"lineText":"            Edit(beginA = 6, endA = 8, beginB = 8, endB = 8),","filePosition":79,"lineItems":[]},{"lineText":"            Edit(beginA = 9, endA = 9, beginB = 9, endB = 10)","filePosition":80,"lineItems":[]},{"lineText":"        )","filePosition":81,"lineItems":[]},{"lineText":"    )","filePosition":82,"lineItems":[]},{"lineText":")","filePosition":83,"lineItems":[]},{"lineText":"","filePosition":84,"lineItems":[]},{"lineText":"private val testRenameDiff = FileDiff(","filePosition":85,"lineItems":[]},{"lineText":"    rawTextOld = \"\"\"","filePosition":86,"lineItems":[]},{"lineText":"                public class FooBarBaz {","filePosition":87,"lineItems":[]},{"lineText":"                  public static void main() {","filePosition":88,"lineItems":[]},{"lineText":"                    System.out.println(\"This is a line\");","filePosition":89,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 2nd line\");","filePosition":90,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 3rd line\");","filePosition":91,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 4th line\");","filePosition":92,"lineItems":[]},{"lineText":"                  }","filePosition":93,"lineItems":[]},{"lineText":"                }","filePosition":94,"lineItems":[]},{"lineText":"            ","filePosition":95,"lineItems":[]},{"lineText":"        \"\"\".trimIndent(),","filePosition":96,"lineItems":[]},{"lineText":"    rawTextNew = \"\"\"","filePosition":97,"lineItems":[]},{"lineText":"                public class FooBarBaz {","filePosition":98,"lineItems":[]},{"lineText":"                  // Adding a comment - which will be a completely new line","filePosition":99,"lineItems":[]},{"lineText":"                  public static void main() {","filePosition":100,"lineItems":[]},{"lineText":"                    System.out.println(\"This is a line\");","filePosition":101,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 2nd changed line\");","filePosition":102,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 3rd changed line\");","filePosition":103,"lineItems":[]},{"lineText":"                    System.out.println(\"This is a new line\");","filePosition":104,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 4th line\");","filePosition":105,"lineItems":[]},{"lineText":"","filePosition":106,"lineItems":[]},{"lineText":"                }","filePosition":107,"lineItems":[]},{"lineText":"        \"\"\".trimIndent(),","filePosition":108,"lineItems":[]},{"lineText":"    diffChangeType = DiffChangeType.RENAME,","filePosition":109,"lineItems":[]},{"lineText":"    fileHeader = FileHeader(","filePosition":110,"lineItems":[]},{"lineText":"        fileNewPath = \"kotlin-js/src/commonMain/kotlin/codereview/Changeset.kt\",","filePosition":111,"lineItems":[]},{"lineText":"        fileOldPath = \"kotlin-js/src/commonMain/kotlin/codereview/Changeset2.kt\",","filePosition":112,"lineItems":[]},{"lineText":"        description = \"\",","filePosition":113,"lineItems":[]},{"lineText":"        identifier = \"abcd1234\",","filePosition":114,"lineItems":[]},{"lineText":"        editList = listOf(","filePosition":115,"lineItems":[]},{"lineText":"            Edit(beginA = 1, endA = 1, beginB = 1, endB = 2),","filePosition":116,"lineItems":[]},{"lineText":"            Edit(beginA = 3, endA = 5, beginB = 4, endB = 7),","filePosition":117,"lineItems":[]},{"lineText":"            Edit(beginA = 6, endA = 8, beginB = 8, endB = 8),","filePosition":118,"lineItems":[]},{"lineText":"            Edit(beginA = 9, endA = 9, beginB = 9, endB = 10)","filePosition":119,"lineItems":[]},{"lineText":"        )","filePosition":120,"lineItems":[]},{"lineText":"    )","filePosition":121,"lineItems":[]},{"lineText":")","filePosition":122,"lineItems":[]},{"lineText":"","filePosition":123,"lineItems":[]},{"lineText":"val testAddFileDifff = FileDiff (","filePosition":124,"lineItems":[]},{"lineText":"    rawTextOld = null,","filePosition":125,"lineItems":[]},{"lineText":"    rawTextNew = \"\"\"","filePosition":126,"lineItems":[]},{"lineText":"                public class FooBarBaz {","filePosition":127,"lineItems":[]},{"lineText":"                  // Adding a comment - which will be a completely new line","filePosition":128,"lineItems":[]},{"lineText":"                  public static void main() {","filePosition":129,"lineItems":[]},{"lineText":"                    System.out.println(\"This is a line\");","filePosition":130,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 2nd changed line\");","filePosition":131,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 3rd changed line\");","filePosition":132,"lineItems":[]},{"lineText":"                    System.out.println(\"This is a new line\");","filePosition":133,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 4th line\");","filePosition":134,"lineItems":[]},{"lineText":"","filePosition":135,"lineItems":[]},{"lineText":"                }","filePosition":136,"lineItems":[]},{"lineText":"        \"\"\".trimIndent(),","filePosition":137,"lineItems":[]},{"lineText":"    diffChangeType = DiffChangeType.ADD,","filePosition":138,"lineItems":[]},{"lineText":"    fileHeader = FileHeader(","filePosition":139,"lineItems":[]},{"lineText":"        fileNewPath = \"kotlin-js/src/commonMain/kotlin/codereview/ChangesetA.kt\",","filePosition":140,"lineItems":[]},{"lineText":"        fileOldPath = \"\",","filePosition":141,"lineItems":[]},{"lineText":"        description = \"\",","filePosition":142,"lineItems":[]},{"lineText":"        identifier = \"newFile1234\",","filePosition":143,"lineItems":[]},{"lineText":"        editList = emptyList()","filePosition":144,"lineItems":[]},{"lineText":"    )","filePosition":145,"lineItems":[]},{"lineText":")","filePosition":146,"lineItems":[]},{"lineText":"","filePosition":147,"lineItems":[]},{"lineText":"val testRemovedFileDiff = FileDiff (","filePosition":148,"lineItems":[]},{"lineText":"    rawTextNew = null,","filePosition":149,"lineItems":[]},{"lineText":"    rawTextOld = \"\"\"","filePosition":150,"lineItems":[]},{"lineText":"                public class FooBarBaz {","filePosition":151,"lineItems":[]},{"lineText":"                  // Adding a comment - which will be a completely new line","filePosition":152,"lineItems":[]},{"lineText":"                  public static void main() {","filePosition":153,"lineItems":[]},{"lineText":"                    System.out.println(\"This is a line\");","filePosition":154,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 2nd changed line\");","filePosition":155,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 3rd changed line\");","filePosition":156,"lineItems":[]},{"lineText":"                    System.out.println(\"This is a new line\");","filePosition":157,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 4th line\");","filePosition":158,"lineItems":[]},{"lineText":"","filePosition":159,"lineItems":[]},{"lineText":"                }","filePosition":160,"lineItems":[]},{"lineText":"        \"\"\".trimIndent(),","filePosition":161,"lineItems":[]},{"lineText":"    diffChangeType = DiffChangeType.DELETE,","filePosition":162,"lineItems":[]},{"lineText":"    fileHeader = FileHeader(","filePosition":163,"lineItems":[]},{"lineText":"        fileOldPath = \"kotlin-js/src/commonMain/kotlin/codereview/Changeset.kt\",","filePosition":164,"lineItems":[]},{"lineText":"        fileNewPath = \"\",","filePosition":165,"lineItems":[]},{"lineText":"        description = \"\",","filePosition":166,"lineItems":[]},{"lineText":"        identifier = \"oldFile1234\",","filePosition":167,"lineItems":[]},{"lineText":"        editList = emptyList()","filePosition":168,"lineItems":[]},{"lineText":"    )","filePosition":169,"lineItems":[]},{"lineText":")","filePosition":170,"lineItems":[]},{"lineText":"","filePosition":171,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/App.kt"},"newFile":{"objectId":"0fde9b17bc9b808876c0364d90c60878a33071e5","fileLines":[{"lineText":"import codereview.DiffChangeType","filePosition":0,"lineItems":[]},{"lineText":"import codereview.Edit","filePosition":1,"lineItems":[]},{"lineText":"import codereview.FileDiff","filePosition":2,"lineItems":[]},{"lineText":"import codereview.FileDiffList","filePosition":3,"lineItems":[]},{"lineText":"import codereview.FileHeader","filePosition":4,"lineItems":[]},{"lineText":"import react.dom.render","filePosition":5,"lineItems":[]},{"lineText":"import supercr.css.styles","filePosition":6,"lineItems":[]},{"lineText":"import supercr.workflows.codereview.screens.changeSetScreen","filePosition":7,"lineItems":[]},{"lineText":"import supercr.workflows.gettingstarted.screens.getStartedScreen","filePosition":8,"lineItems":[]},{"lineText":"import supercr.workflows.mainScreen","filePosition":9,"lineItems":[]},{"lineText":"import kotlin.browser.document","filePosition":10,"lineItems":[]},{"lineText":"","filePosition":11,"lineItems":[]},{"lineText":"fun main () {","filePosition":12,"lineItems":[]},{"lineText":"    document.head!!.insertAdjacentHTML(\"afterbegin\", \"<style>$styles</style>\")","filePosition":13,"lineItems":[]},{"lineText":"    /**","filePosition":14,"lineItems":[]},{"lineText":"     * The official documentation specifies that we create a <div id = 'root'> in index.html","filePosition":15,"lineItems":[]},{"lineText":"     * Somehow, that prevents tests from executing properly (this was after we introduced react)","filePosition":16,"lineItems":[]},{"lineText":"     * As a workaround, we create the root div element here instead","filePosition":17,"lineItems":[]},{"lineText":"     * See here for more details - https://stackoverflow.com/questions/61839800/unit-testing-in-kotlin-js/62058511#62058511","filePosition":18,"lineItems":[]},{"lineText":"     */","filePosition":19,"lineItems":[]},{"lineText":"    document.body!!.insertAdjacentHTML(\"afterbegin\", \"<div id='root'></div>\" )","filePosition":20,"lineItems":[]},{"lineText":"//    renderDiffView()","filePosition":21,"lineItems":[]},{"lineText":"//    renderGettingStarted()","filePosition":22,"lineItems":[]},{"lineText":"    renderMainScreen()","filePosition":23,"lineItems":[]},{"lineText":"}","filePosition":24,"lineItems":[]},{"lineText":"private fun renderMainScreen() {","filePosition":25,"lineItems":[]},{"lineText":"    render(document.getElementById(\"root\")) {","filePosition":26,"lineItems":[]},{"lineText":"        mainScreen {","filePosition":27,"lineItems":[]},{"lineText":"","filePosition":28,"lineItems":[]},{"lineText":"        }","filePosition":29,"lineItems":[]},{"lineText":"    }","filePosition":30,"lineItems":[]},{"lineText":"}","filePosition":31,"lineItems":[]},{"lineText":"","filePosition":32,"lineItems":[]},{"lineText":"private fun renderGettingStarted() {","filePosition":33,"lineItems":[]},{"lineText":"    render(document.getElementById(\"root\")) {","filePosition":34,"lineItems":[]},{"lineText":"        getStartedScreen {","filePosition":35,"lineItems":[]},{"lineText":"","filePosition":36,"lineItems":[]},{"lineText":"        }","filePosition":37,"lineItems":[]},{"lineText":"    }","filePosition":38,"lineItems":[]},{"lineText":"}","filePosition":39,"lineItems":[]},{"lineText":"","filePosition":40,"lineItems":[]},{"lineText":"private fun renderDiffView() {","filePosition":41,"lineItems":[]},{"lineText":"    render(document.getElementById(\"root\")) {","filePosition":42,"lineItems":[]},{"lineText":"        changeSetScreen {","filePosition":43,"lineItems":[]},{"lineText":"            fileDiffList = FileDiffList(","filePosition":44,"lineItems":[]},{"lineText":"                fileDiffs =  listOf(","filePosition":45,"lineItems":[]},{"lineText":"                    testModifyDiff,","filePosition":46,"lineItems":[]},{"lineText":"                    testAddFileDifff","filePosition":47,"lineItems":[]},{"lineText":"                )","filePosition":48,"lineItems":[]},{"lineText":"            )","filePosition":49,"lineItems":[]},{"lineText":"        }","filePosition":50,"lineItems":[]},{"lineText":"    }","filePosition":51,"lineItems":[]},{"lineText":"}","filePosition":52,"lineItems":[]},{"lineText":"","filePosition":53,"lineItems":[]},{"lineText":"private val testModifyDiff = FileDiff(","filePosition":54,"lineItems":[]},{"lineText":"    rawTextOld = \"\"\"","filePosition":55,"lineItems":[]},{"lineText":"                public class FooBarBaz {","filePosition":56,"lineItems":[]},{"lineText":"                  public static void main() {","filePosition":57,"lineItems":[]},{"lineText":"                    System.out.println(\"This is a line\");","filePosition":58,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 2nd line\");","filePosition":59,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 3rd line\");","filePosition":60,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 4th line\");","filePosition":61,"lineItems":[]},{"lineText":"                  }","filePosition":62,"lineItems":[]},{"lineText":"                }","filePosition":63,"lineItems":[]},{"lineText":"            ","filePosition":64,"lineItems":[]},{"lineText":"        \"\"\".trimIndent(),","filePosition":65,"lineItems":[]},{"lineText":"    rawTextNew = \"\"\"","filePosition":66,"lineItems":[]},{"lineText":"                public class FooBarBaz {","filePosition":67,"lineItems":[]},{"lineText":"                  // Adding a comment - which will be a completely new line","filePosition":68,"lineItems":[]},{"lineText":"                  public static void main() {","filePosition":69,"lineItems":[]},{"lineText":"                    System.out.println(\"This is a line\");","filePosition":70,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 2nd changed line\");","filePosition":71,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 3rd changed line\");","filePosition":72,"lineItems":[]},{"lineText":"                    System.out.println(\"This is a new line\");","filePosition":73,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 4th line\");","filePosition":74,"lineItems":[]},{"lineText":"","filePosition":75,"lineItems":[]},{"lineText":"                }","filePosition":76,"lineItems":[]},{"lineText":"        \"\"\".trimIndent(),","filePosition":77,"lineItems":[]},{"lineText":"    diffChangeType = DiffChangeType.MODIFY,","filePosition":78,"lineItems":[]},{"lineText":"    fileHeader = FileHeader(","filePosition":79,"lineItems":[]},{"lineText":"        fileNewPath = \"kotlin-js/src/commonMain/kotlin/codereview/ChangesetM.kt\",","filePosition":80,"lineItems":[]},{"lineText":"        fileOldPath = \"kotlin-js/src/commonMain/kotlin/codereview/Changeset.kt\",","filePosition":81,"lineItems":[]},{"lineText":"        description = \"\",","filePosition":82,"lineItems":[]},{"lineText":"        identifier = \"xyz1234\",","filePosition":83,"lineItems":[]},{"lineText":"        editList = listOf(","filePosition":84,"lineItems":[]},{"lineText":"            Edit(beginA = 1, endA = 1, beginB = 1, endB = 2),","filePosition":85,"lineItems":[]},{"lineText":"            Edit(beginA = 3, endA = 5, beginB = 4, endB = 7),","filePosition":86,"lineItems":[]},{"lineText":"            Edit(beginA = 6, endA = 8, beginB = 8, endB = 8),","filePosition":87,"lineItems":[]},{"lineText":"            Edit(beginA = 9, endA = 9, beginB = 9, endB = 10)","filePosition":88,"lineItems":[]},{"lineText":"        )","filePosition":89,"lineItems":[]},{"lineText":"    )","filePosition":90,"lineItems":[]},{"lineText":")","filePosition":91,"lineItems":[]},{"lineText":"","filePosition":92,"lineItems":[]},{"lineText":"private val testRenameDiff = FileDiff(","filePosition":93,"lineItems":[]},{"lineText":"    rawTextOld = \"\"\"","filePosition":94,"lineItems":[]},{"lineText":"                public class FooBarBaz {","filePosition":95,"lineItems":[]},{"lineText":"                  public static void main() {","filePosition":96,"lineItems":[]},{"lineText":"                    System.out.println(\"This is a line\");","filePosition":97,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 2nd line\");","filePosition":98,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 3rd line\");","filePosition":99,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 4th line\");","filePosition":100,"lineItems":[]},{"lineText":"                  }","filePosition":101,"lineItems":[]},{"lineText":"                }","filePosition":102,"lineItems":[]},{"lineText":"            ","filePosition":103,"lineItems":[]},{"lineText":"        \"\"\".trimIndent(),","filePosition":104,"lineItems":[]},{"lineText":"    rawTextNew = \"\"\"","filePosition":105,"lineItems":[]},{"lineText":"                public class FooBarBaz {","filePosition":106,"lineItems":[]},{"lineText":"                  // Adding a comment - which will be a completely new line","filePosition":107,"lineItems":[]},{"lineText":"                  public static void main() {","filePosition":108,"lineItems":[]},{"lineText":"                    System.out.println(\"This is a line\");","filePosition":109,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 2nd changed line\");","filePosition":110,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 3rd changed line\");","filePosition":111,"lineItems":[]},{"lineText":"                    System.out.println(\"This is a new line\");","filePosition":112,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 4th line\");","filePosition":113,"lineItems":[]},{"lineText":"","filePosition":114,"lineItems":[]},{"lineText":"                }","filePosition":115,"lineItems":[]},{"lineText":"        \"\"\".trimIndent(),","filePosition":116,"lineItems":[]},{"lineText":"    diffChangeType = DiffChangeType.RENAME,","filePosition":117,"lineItems":[]},{"lineText":"    fileHeader = FileHeader(","filePosition":118,"lineItems":[]},{"lineText":"        fileNewPath = \"kotlin-js/src/commonMain/kotlin/codereview/Changeset.kt\",","filePosition":119,"lineItems":[]},{"lineText":"        fileOldPath = \"kotlin-js/src/commonMain/kotlin/codereview/Changeset2.kt\",","filePosition":120,"lineItems":[]},{"lineText":"        description = \"\",","filePosition":121,"lineItems":[]},{"lineText":"        identifier = \"abcd1234\",","filePosition":122,"lineItems":[]},{"lineText":"        editList = listOf(","filePosition":123,"lineItems":[]},{"lineText":"            Edit(beginA = 1, endA = 1, beginB = 1, endB = 2),","filePosition":124,"lineItems":[]},{"lineText":"            Edit(beginA = 3, endA = 5, beginB = 4, endB = 7),","filePosition":125,"lineItems":[]},{"lineText":"            Edit(beginA = 6, endA = 8, beginB = 8, endB = 8),","filePosition":126,"lineItems":[]},{"lineText":"            Edit(beginA = 9, endA = 9, beginB = 9, endB = 10)","filePosition":127,"lineItems":[]},{"lineText":"        )","filePosition":128,"lineItems":[]},{"lineText":"    )","filePosition":129,"lineItems":[]},{"lineText":")","filePosition":130,"lineItems":[]},{"lineText":"","filePosition":131,"lineItems":[]},{"lineText":"val testAddFileDifff = FileDiff (","filePosition":132,"lineItems":[]},{"lineText":"    rawTextOld = null,","filePosition":133,"lineItems":[]},{"lineText":"    rawTextNew = \"\"\"","filePosition":134,"lineItems":[]},{"lineText":"                public class FooBarBaz {","filePosition":135,"lineItems":[]},{"lineText":"                  // Adding a comment - which will be a completely new line","filePosition":136,"lineItems":[]},{"lineText":"                  public static void main() {","filePosition":137,"lineItems":[]},{"lineText":"                    System.out.println(\"This is a line\");","filePosition":138,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 2nd changed line\");","filePosition":139,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 3rd changed line\");","filePosition":140,"lineItems":[]},{"lineText":"                    System.out.println(\"This is a new line\");","filePosition":141,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 4th line\");","filePosition":142,"lineItems":[]},{"lineText":"","filePosition":143,"lineItems":[]},{"lineText":"                }","filePosition":144,"lineItems":[]},{"lineText":"        \"\"\".trimIndent(),","filePosition":145,"lineItems":[]},{"lineText":"    diffChangeType = DiffChangeType.ADD,","filePosition":146,"lineItems":[]},{"lineText":"    fileHeader = FileHeader(","filePosition":147,"lineItems":[]},{"lineText":"        fileNewPath = \"kotlin-js/src/commonMain/kotlin/codereview/ChangesetA.kt\",","filePosition":148,"lineItems":[]},{"lineText":"        fileOldPath = \"\",","filePosition":149,"lineItems":[]},{"lineText":"        description = \"\",","filePosition":150,"lineItems":[]},{"lineText":"        identifier = \"newFile1234\",","filePosition":151,"lineItems":[]},{"lineText":"        editList = emptyList()","filePosition":152,"lineItems":[]},{"lineText":"    )","filePosition":153,"lineItems":[]},{"lineText":")","filePosition":154,"lineItems":[]},{"lineText":"","filePosition":155,"lineItems":[]},{"lineText":"val testRemovedFileDiff = FileDiff (","filePosition":156,"lineItems":[]},{"lineText":"    rawTextNew = null,","filePosition":157,"lineItems":[]},{"lineText":"    rawTextOld = \"\"\"","filePosition":158,"lineItems":[]},{"lineText":"                public class FooBarBaz {","filePosition":159,"lineItems":[]},{"lineText":"                  // Adding a comment - which will be a completely new line","filePosition":160,"lineItems":[]},{"lineText":"                  public static void main() {","filePosition":161,"lineItems":[]},{"lineText":"                    System.out.println(\"This is a line\");","filePosition":162,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 2nd changed line\");","filePosition":163,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 3rd changed line\");","filePosition":164,"lineItems":[]},{"lineText":"                    System.out.println(\"This is a new line\");","filePosition":165,"lineItems":[]},{"lineText":"                    System.out.println(\"This is 4th line\");","filePosition":166,"lineItems":[]},{"lineText":"","filePosition":167,"lineItems":[]},{"lineText":"                }","filePosition":168,"lineItems":[]},{"lineText":"        \"\"\".trimIndent(),","filePosition":169,"lineItems":[]},{"lineText":"    diffChangeType = DiffChangeType.DELETE,","filePosition":170,"lineItems":[]},{"lineText":"    fileHeader = FileHeader(","filePosition":171,"lineItems":[]},{"lineText":"        fileOldPath = \"kotlin-js/src/commonMain/kotlin/codereview/Changeset.kt\",","filePosition":172,"lineItems":[]},{"lineText":"        fileNewPath = \"\",","filePosition":173,"lineItems":[]},{"lineText":"        description = \"\",","filePosition":174,"lineItems":[]},{"lineText":"        identifier = \"oldFile1234\",","filePosition":175,"lineItems":[]},{"lineText":"        editList = emptyList()","filePosition":176,"lineItems":[]},{"lineText":"    )","filePosition":177,"lineItems":[]},{"lineText":")","filePosition":178,"lineItems":[]},{"lineText":"","filePosition":179,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/App.kt"},"diffChangeType":"MODIFY","tShirtSize":"S","editList":[{"beginA":7,"beginB":7,"endA":10,"endB":10},{"beginA":21,"beginB":21,"endA":22,"endB":22},{"beginA":23,"beginB":23,"endA":23,"endB":31}]},{"oldFile":{"objectId":"ee4c16603c91f4b4e77e44004d5b2760b1adf1da","fileLines":[{"lineText":"package supercr.views","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import Button","filePosition":2,"lineItems":[]},{"lineText":"import Grid","filePosition":3,"lineItems":[]},{"lineText":"import ListItem","filePosition":4,"lineItems":[]},{"lineText":"import MaterialUIList","filePosition":5,"lineItems":[]},{"lineText":"import Paper","filePosition":6,"lineItems":[]},{"lineText":"import auth.DumbOauthClient","filePosition":7,"lineItems":[]},{"lineText":"import git.provider.GithubClient","filePosition":8,"lineItems":[]},{"lineText":"import git.provider.RepoSummary","filePosition":9,"lineItems":[]},{"lineText":"import io.ktor.client.HttpClient","filePosition":10,"lineItems":[]},{"lineText":"import io.ktor.client.features.json.JsonFeature","filePosition":11,"lineItems":[]},{"lineText":"import io.ktor.client.features.json.serializer.KotlinxSerializer","filePosition":12,"lineItems":[]},{"lineText":"import kotlinx.serialization.json.Json","filePosition":13,"lineItems":[]},{"lineText":"import kotlinx.serialization.json.JsonConfiguration","filePosition":14,"lineItems":[]},{"lineText":"import kotlinx.coroutines.GlobalScope","filePosition":15,"lineItems":[]},{"lineText":"import kotlinx.coroutines.async","filePosition":16,"lineItems":[]},{"lineText":"import kotlinx.css.Display","filePosition":17,"lineItems":[]},{"lineText":"import kotlinx.css.display","filePosition":18,"lineItems":[]},{"lineText":"import kotlinx.html.InputType","filePosition":19,"lineItems":[]},{"lineText":"import kotlinx.html.js.onChangeFunction","filePosition":20,"lineItems":[]},{"lineText":"import org.w3c.dom.HTMLInputElement","filePosition":21,"lineItems":[]},{"lineText":"import react.RBuilder","filePosition":22,"lineItems":[]},{"lineText":"import react.RComponent","filePosition":23,"lineItems":[]},{"lineText":"import react.RProps","filePosition":24,"lineItems":[]},{"lineText":"import react.RState","filePosition":25,"lineItems":[]},{"lineText":"import react.ReactElement","filePosition":26,"lineItems":[]},{"lineText":"import react.createRef","filePosition":27,"lineItems":[]},{"lineText":"import react.dom.defaultValue","filePosition":28,"lineItems":[]},{"lineText":"import react.dom.input","filePosition":29,"lineItems":[]},{"lineText":"import react.dom.p","filePosition":30,"lineItems":[]},{"lineText":"import react.setState","filePosition":31,"lineItems":[]},{"lineText":"import styled.css","filePosition":32,"lineItems":[]},{"lineText":"import styled.styledInput","filePosition":33,"lineItems":[]},{"lineText":"","filePosition":34,"lineItems":[]},{"lineText":"external interface GettingStartedScreenState: RState {","filePosition":35,"lineItems":[]},{"lineText":"    var isLoggedIn: Boolean","filePosition":36,"lineItems":[]},{"lineText":"    var accessToken: String","filePosition":37,"lineItems":[]},{"lineText":"}","filePosition":38,"lineItems":[]},{"lineText":"","filePosition":39,"lineItems":[]},{"lineText":"class GetStartedScreen: RComponent<RProps, GettingStartedScreenState>() {","filePosition":40,"lineItems":[]},{"lineText":"","filePosition":41,"lineItems":[]},{"lineText":"    override fun GettingStartedScreenState.init() {","filePosition":42,"lineItems":[]},{"lineText":"        isLoggedIn = false","filePosition":43,"lineItems":[]},{"lineText":"        accessToken = \"\"","filePosition":44,"lineItems":[]},{"lineText":"    }","filePosition":45,"lineItems":[]},{"lineText":"","filePosition":46,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":47,"lineItems":[]},{"lineText":"        if (!state.isLoggedIn) {","filePosition":48,"lineItems":[]},{"lineText":"            loginComponent {","filePosition":49,"lineItems":[]},{"lineText":"                onLoginButtonPressed = { enteredAccessToken ->","filePosition":50,"lineItems":[]},{"lineText":"                    setState {","filePosition":51,"lineItems":[]},{"lineText":"                        isLoggedIn = true","filePosition":52,"lineItems":[]},{"lineText":"                        accessToken = enteredAccessToken","filePosition":53,"lineItems":[]},{"lineText":"                    }","filePosition":54,"lineItems":[]},{"lineText":"                }","filePosition":55,"lineItems":[]},{"lineText":"            }","filePosition":56,"lineItems":[]},{"lineText":"        } else {","filePosition":57,"lineItems":[]},{"lineText":"            repoInit {","filePosition":58,"lineItems":[]},{"lineText":"                githubClient = GithubClient(","filePosition":59,"lineItems":[]},{"lineText":"                    oauthClient = DumbOauthClient(state.accessToken),","filePosition":60,"lineItems":[]},{"lineText":"                    httpClient = HttpClient() {","filePosition":61,"lineItems":[]},{"lineText":"                        install(JsonFeature) {","filePosition":62,"lineItems":[]},{"lineText":"                            serializer = KotlinxSerializer(json = Json(JsonConfiguration.Stable.copy(ignoreUnknownKeys = true)))","filePosition":63,"lineItems":[]},{"lineText":"                        }","filePosition":64,"lineItems":[]},{"lineText":"                    }","filePosition":65,"lineItems":[]},{"lineText":"                )","filePosition":66,"lineItems":[]},{"lineText":"                gotoReviewScreen = {","filePosition":67,"lineItems":[]},{"lineText":"                    console.log(\"Will go to next screen now\")","filePosition":68,"lineItems":[]},{"lineText":"                }","filePosition":69,"lineItems":[]},{"lineText":"            }","filePosition":70,"lineItems":[]},{"lineText":"        }","filePosition":71,"lineItems":[]},{"lineText":"    }","filePosition":72,"lineItems":[]},{"lineText":"","filePosition":73,"lineItems":[]},{"lineText":"}","filePosition":74,"lineItems":[]},{"lineText":"","filePosition":75,"lineItems":[]},{"lineText":"fun RBuilder.getStartedScreen(handler: RProps.() -> Unit): ReactElement {","filePosition":76,"lineItems":[]},{"lineText":"    return child(GetStartedScreen::class) {","filePosition":77,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":78,"lineItems":[]},{"lineText":"    }","filePosition":79,"lineItems":[]},{"lineText":"}","filePosition":80,"lineItems":[]},{"lineText":"","filePosition":81,"lineItems":[]},{"lineText":"interface LoginComponentProps: RProps {","filePosition":82,"lineItems":[]},{"lineText":"    var onLoginButtonPressed: (String) -> Unit","filePosition":83,"lineItems":[]},{"lineText":"}","filePosition":84,"lineItems":[]},{"lineText":"","filePosition":85,"lineItems":[]},{"lineText":"class LoginComponent: RComponent<LoginComponentProps, RState>() {","filePosition":86,"lineItems":[]},{"lineText":"    private val personalAccessTokenInputRef = createRef<HTMLInputElement>()","filePosition":87,"lineItems":[]},{"lineText":"","filePosition":88,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":89,"lineItems":[]},{"lineText":"        Grid {","filePosition":90,"lineItems":[]},{"lineText":"            attrs {","filePosition":91,"lineItems":[]},{"lineText":"                item = false","filePosition":92,"lineItems":[]},{"lineText":"                container = true","filePosition":93,"lineItems":[]},{"lineText":"                alignItems = \"center\"","filePosition":94,"lineItems":[]},{"lineText":"                direction = \"row\"","filePosition":95,"lineItems":[]},{"lineText":"                justify = \"center\"","filePosition":96,"lineItems":[]},{"lineText":"                spacing = 4","filePosition":97,"lineItems":[]},{"lineText":"            }","filePosition":98,"lineItems":[]},{"lineText":"        }","filePosition":99,"lineItems":[]},{"lineText":"        Grid {","filePosition":100,"lineItems":[]},{"lineText":"            attrs {","filePosition":101,"lineItems":[]},{"lineText":"                item = true","filePosition":102,"lineItems":[]},{"lineText":"                container = false","filePosition":103,"lineItems":[]},{"lineText":"            }","filePosition":104,"lineItems":[]},{"lineText":"            Paper {","filePosition":105,"lineItems":[]},{"lineText":"                attrs {","filePosition":106,"lineItems":[]},{"lineText":"                    square = true","filePosition":107,"lineItems":[]},{"lineText":"                    elevation = 3","filePosition":108,"lineItems":[]},{"lineText":"                }","filePosition":109,"lineItems":[]},{"lineText":"                Grid {","filePosition":110,"lineItems":[]},{"lineText":"                    attrs {","filePosition":111,"lineItems":[]},{"lineText":"                        item = false","filePosition":112,"lineItems":[]},{"lineText":"                        container = true","filePosition":113,"lineItems":[]},{"lineText":"                        alignItems = \"center\"","filePosition":114,"lineItems":[]},{"lineText":"                        direction = \"row\"","filePosition":115,"lineItems":[]},{"lineText":"                        justify = \"center\"","filePosition":116,"lineItems":[]},{"lineText":"                        spacing = 2","filePosition":117,"lineItems":[]},{"lineText":"                    }","filePosition":118,"lineItems":[]},{"lineText":"                    Grid {","filePosition":119,"lineItems":[]},{"lineText":"                        attrs {","filePosition":120,"lineItems":[]},{"lineText":"                            item = true","filePosition":121,"lineItems":[]},{"lineText":"                            container = false","filePosition":122,"lineItems":[]},{"lineText":"                            xs = 12","filePosition":123,"lineItems":[]},{"lineText":"                        }","filePosition":124,"lineItems":[]},{"lineText":"                        p {","filePosition":125,"lineItems":[]},{"lineText":"                            + \"Welcome to the fastest CR experience. Lets Get Started\"","filePosition":126,"lineItems":[]},{"lineText":"                        }","filePosition":127,"lineItems":[]},{"lineText":"                        input(type = InputType.password) {","filePosition":128,"lineItems":[]},{"lineText":"                            ref = personalAccessTokenInputRef","filePosition":129,"lineItems":[]},{"lineText":"                            attrs.placeholder = \"Enter your github personal access token\"","filePosition":130,"lineItems":[]},{"lineText":"                            attrs.defaultValue = \"4da05160ff8311a45f31fe8fd6ab374b8a6f9fe9\"","filePosition":131,"lineItems":[]},{"lineText":"                        }","filePosition":132,"lineItems":[]},{"lineText":"                    }","filePosition":133,"lineItems":[]},{"lineText":"                    Grid {","filePosition":134,"lineItems":[]},{"lineText":"                        attrs {","filePosition":135,"lineItems":[]},{"lineText":"                            item = true","filePosition":136,"lineItems":[]},{"lineText":"                            container = false","filePosition":137,"lineItems":[]},{"lineText":"                            xs = 4","filePosition":138,"lineItems":[]},{"lineText":"                        }","filePosition":139,"lineItems":[]},{"lineText":"                    }","filePosition":140,"lineItems":[]},{"lineText":"                    Grid {","filePosition":141,"lineItems":[]},{"lineText":"                        attrs {","filePosition":142,"lineItems":[]},{"lineText":"                            item = true","filePosition":143,"lineItems":[]},{"lineText":"                            container = false","filePosition":144,"lineItems":[]},{"lineText":"                            xs = 4","filePosition":145,"lineItems":[]},{"lineText":"                        }","filePosition":146,"lineItems":[]},{"lineText":"                        Button {","filePosition":147,"lineItems":[]},{"lineText":"                            attrs {","filePosition":148,"lineItems":[]},{"lineText":"                                variant = \"contained\"","filePosition":149,"lineItems":[]},{"lineText":"                                color = \"primary\"","filePosition":150,"lineItems":[]},{"lineText":"                                onClick= {","filePosition":151,"lineItems":[]},{"lineText":"                                    props.onLoginButtonPressed(personalAccessTokenInputRef.current!!.value)","filePosition":152,"lineItems":[]},{"lineText":"                                }","filePosition":153,"lineItems":[]},{"lineText":"                            }","filePosition":154,"lineItems":[]},{"lineText":"                            + \"Login\"","filePosition":155,"lineItems":[]},{"lineText":"                        }","filePosition":156,"lineItems":[]},{"lineText":"                    }","filePosition":157,"lineItems":[]},{"lineText":"                    Grid {","filePosition":158,"lineItems":[]},{"lineText":"                        attrs {","filePosition":159,"lineItems":[]},{"lineText":"                            item = true","filePosition":160,"lineItems":[]},{"lineText":"                            container = false","filePosition":161,"lineItems":[]},{"lineText":"                            xs = 4","filePosition":162,"lineItems":[]},{"lineText":"                        }","filePosition":163,"lineItems":[]},{"lineText":"                    }","filePosition":164,"lineItems":[]},{"lineText":"                }","filePosition":165,"lineItems":[]},{"lineText":"            }","filePosition":166,"lineItems":[]},{"lineText":"        }","filePosition":167,"lineItems":[]},{"lineText":"    }","filePosition":168,"lineItems":[]},{"lineText":"}","filePosition":169,"lineItems":[]},{"lineText":"fun RBuilder.loginComponent(handler: LoginComponentProps.() -> Unit): ReactElement {","filePosition":170,"lineItems":[]},{"lineText":"    return child(LoginComponent::class) {","filePosition":171,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":172,"lineItems":[]},{"lineText":"    }","filePosition":173,"lineItems":[]},{"lineText":"}","filePosition":174,"lineItems":[]},{"lineText":"","filePosition":175,"lineItems":[]},{"lineText":"interface RepoInitProps: RProps {","filePosition":176,"lineItems":[]},{"lineText":"    var githubClient: GithubClient","filePosition":177,"lineItems":[]},{"lineText":"    var gotoReviewScreen: () -> Unit","filePosition":178,"lineItems":[]},{"lineText":"}","filePosition":179,"lineItems":[]},{"lineText":"","filePosition":180,"lineItems":[]},{"lineText":"interface RepoInitState: RState {","filePosition":181,"lineItems":[]},{"lineText":"    var repoList: List<RepoSummary>","filePosition":182,"lineItems":[]},{"lineText":"    var showNextButton: Boolean","filePosition":183,"lineItems":[]},{"lineText":"}","filePosition":184,"lineItems":[]},{"lineText":"","filePosition":185,"lineItems":[]},{"lineText":"class RepoInitComponent: RComponent<RepoInitProps, RepoInitState>() {","filePosition":186,"lineItems":[]},{"lineText":"    override fun RepoInitState.init() {","filePosition":187,"lineItems":[]},{"lineText":"        repoList = emptyList()","filePosition":188,"lineItems":[]},{"lineText":"        showNextButton = false","filePosition":189,"lineItems":[]},{"lineText":"    }","filePosition":190,"lineItems":[]},{"lineText":"","filePosition":191,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":192,"lineItems":[]},{"lineText":"        MaterialUIList {","filePosition":193,"lineItems":[]},{"lineText":"            state.repoList.map {","filePosition":194,"lineItems":[]},{"lineText":"                repoComponent {","filePosition":195,"lineItems":[]},{"lineText":"                    repoSummary = it","filePosition":196,"lineItems":[]},{"lineText":"                    onPathSelect = handleRepoSelection","filePosition":197,"lineItems":[]},{"lineText":"                }","filePosition":198,"lineItems":[]},{"lineText":"            }","filePosition":199,"lineItems":[]},{"lineText":"        }","filePosition":200,"lineItems":[]},{"lineText":"        if (state.showNextButton) {","filePosition":201,"lineItems":[]},{"lineText":"            Button {","filePosition":202,"lineItems":[]},{"lineText":"                attrs {","filePosition":203,"lineItems":[]},{"lineText":"                    variant = \"contained\"","filePosition":204,"lineItems":[]},{"lineText":"                    color = \"primary\"","filePosition":205,"lineItems":[]},{"lineText":"                    onClick= props.gotoReviewScreen","filePosition":206,"lineItems":[]},{"lineText":"                }","filePosition":207,"lineItems":[]},{"lineText":"                + \"Done\"","filePosition":208,"lineItems":[]},{"lineText":"            }","filePosition":209,"lineItems":[]},{"lineText":"        }","filePosition":210,"lineItems":[]},{"lineText":"    }","filePosition":211,"lineItems":[]},{"lineText":"","filePosition":212,"lineItems":[]},{"lineText":"    override fun componentDidMount() {","filePosition":213,"lineItems":[]},{"lineText":"        fetchRepos()","filePosition":214,"lineItems":[]},{"lineText":"    }","filePosition":215,"lineItems":[]},{"lineText":"","filePosition":216,"lineItems":[]},{"lineText":"    /**","filePosition":217,"lineItems":[]},{"lineText":"     * TODO: Add some validations to check if the repo being selected is correct or no","filePosition":218,"lineItems":[]},{"lineText":"     *  ** Selected Path should be a git repo","filePosition":219,"lineItems":[]},{"lineText":"     *  ** Selected Path must point to the same origin (getOriginURL().contains(repoName))","filePosition":220,"lineItems":[]},{"lineText":"     */","filePosition":221,"lineItems":[]},{"lineText":"    private val handleRepoSelection: (String) -> Boolean = { givenPath ->","filePosition":222,"lineItems":[]},{"lineText":"        setState {","filePosition":223,"lineItems":[]},{"lineText":"            showNextButton = true","filePosition":224,"lineItems":[]},{"lineText":"        }","filePosition":225,"lineItems":[]},{"lineText":"        true","filePosition":226,"lineItems":[]},{"lineText":"    }","filePosition":227,"lineItems":[]},{"lineText":"","filePosition":228,"lineItems":[]},{"lineText":"    private fun fetchRepos() {","filePosition":229,"lineItems":[]},{"lineText":"        GlobalScope.async {","filePosition":230,"lineItems":[]},{"lineText":"            props.githubClient.getReposSummary(\"theboringtech\")","filePosition":231,"lineItems":[]},{"lineText":"                .let {","filePosition":232,"lineItems":[]},{"lineText":"                    setState {","filePosition":233,"lineItems":[]},{"lineText":"                        repoList = it","filePosition":234,"lineItems":[]},{"lineText":"                    }","filePosition":235,"lineItems":[]},{"lineText":"                }","filePosition":236,"lineItems":[]},{"lineText":"        }.invokeOnCompletion { throwable ->","filePosition":237,"lineItems":[]},{"lineText":"            if (throwable != null) {","filePosition":238,"lineItems":[]},{"lineText":"                console.error(\"Something bad happened\")","filePosition":239,"lineItems":[]},{"lineText":"                console.error(throwable)","filePosition":240,"lineItems":[]},{"lineText":"            }","filePosition":241,"lineItems":[]},{"lineText":"        }","filePosition":242,"lineItems":[]},{"lineText":"    }","filePosition":243,"lineItems":[]},{"lineText":"}","filePosition":244,"lineItems":[]},{"lineText":"","filePosition":245,"lineItems":[]},{"lineText":"fun RBuilder.repoInit(handler: RepoInitProps.() -> Unit): ReactElement {","filePosition":246,"lineItems":[]},{"lineText":"    return child(RepoInitComponent::class) {","filePosition":247,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":248,"lineItems":[]},{"lineText":"    }","filePosition":249,"lineItems":[]},{"lineText":"}","filePosition":250,"lineItems":[]},{"lineText":"","filePosition":251,"lineItems":[]},{"lineText":"external interface RepoComponentProps: RProps {","filePosition":252,"lineItems":[]},{"lineText":"    var repoSummary: RepoSummary","filePosition":253,"lineItems":[]},{"lineText":"    var onPathSelect: (String) -> Boolean","filePosition":254,"lineItems":[]},{"lineText":"}","filePosition":255,"lineItems":[]},{"lineText":"","filePosition":256,"lineItems":[]},{"lineText":"external interface RepoComponentState: RState {","filePosition":257,"lineItems":[]},{"lineText":"    var isProcessed: Boolean","filePosition":258,"lineItems":[]},{"lineText":"}","filePosition":259,"lineItems":[]},{"lineText":"","filePosition":260,"lineItems":[]},{"lineText":"class RepoComponent: RComponent<RepoComponentProps, RepoComponentState>() {","filePosition":261,"lineItems":[]},{"lineText":"    private val inputFileRef = createRef<HTMLInputElement>()","filePosition":262,"lineItems":[]},{"lineText":"    private val handleSelection =  {","filePosition":263,"lineItems":[]},{"lineText":"        console.log(\"Clicked ${props.repoSummary.full_name}\")","filePosition":264,"lineItems":[]},{"lineText":"//        inputFileRef.current!!.click() TODO See below. Below if condition is just a hack to select the 'right folder'","filePosition":265,"lineItems":[]},{"lineText":"        val markProcessed = if (props.repoSummary.full_name == \"theboringtech/btcmain\") {","filePosition":266,"lineItems":[]},{"lineText":"            props.onPathSelect(\"/home/yogesh/work/btc\")","filePosition":267,"lineItems":[]},{"lineText":"        } else {","filePosition":268,"lineItems":[]},{"lineText":"            props.onPathSelect(\"/home/yogesh/work/theboringtech.github.io\")","filePosition":269,"lineItems":[]},{"lineText":"        }","filePosition":270,"lineItems":[]},{"lineText":"        setState {","filePosition":271,"lineItems":[]},{"lineText":"            isProcessed = markProcessed","filePosition":272,"lineItems":[]},{"lineText":"        }","filePosition":273,"lineItems":[]},{"lineText":"    }","filePosition":274,"lineItems":[]},{"lineText":"","filePosition":275,"lineItems":[]},{"lineText":"    override fun RepoComponentState.init() {","filePosition":276,"lineItems":[]},{"lineText":"        isProcessed = false","filePosition":277,"lineItems":[]},{"lineText":"    }","filePosition":278,"lineItems":[]},{"lineText":"","filePosition":279,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":280,"lineItems":[]},{"lineText":"        ListItem {","filePosition":281,"lineItems":[]},{"lineText":"            attrs {","filePosition":282,"lineItems":[]},{"lineText":"                button = true","filePosition":283,"lineItems":[]},{"lineText":"                alignItems = \"center\"","filePosition":284,"lineItems":[]},{"lineText":"                divider = true","filePosition":285,"lineItems":[]},{"lineText":"                onClick = handleSelection","filePosition":286,"lineItems":[]},{"lineText":"                disabled = state.isProcessed","filePosition":287,"lineItems":[]},{"lineText":"            }","filePosition":288,"lineItems":[]},{"lineText":"            p {","filePosition":289,"lineItems":[]},{"lineText":"                +props.repoSummary.full_name","filePosition":290,"lineItems":[]},{"lineText":"            }","filePosition":291,"lineItems":[]},{"lineText":"            /** TODO: Make this work once we switch to electron or Kvision. Right now it just sits there - never used */","filePosition":292,"lineItems":[]},{"lineText":"            styledInput {","filePosition":293,"lineItems":[]},{"lineText":"                css {","filePosition":294,"lineItems":[]},{"lineText":"                    display = Display.none","filePosition":295,"lineItems":[]},{"lineText":"                }","filePosition":296,"lineItems":[]},{"lineText":"                attrs {","filePosition":297,"lineItems":[]},{"lineText":"                    ref = inputFileRef","filePosition":298,"lineItems":[]},{"lineText":"                }","filePosition":299,"lineItems":[]},{"lineText":"                attrs.onChangeFunction = { event ->","filePosition":300,"lineItems":[]},{"lineText":"                    console.log(\"Got the value as ${inputFileRef.current?.files}\")","filePosition":301,"lineItems":[]},{"lineText":"                }","filePosition":302,"lineItems":[]},{"lineText":"            }","filePosition":303,"lineItems":[]},{"lineText":"        }","filePosition":304,"lineItems":[]},{"lineText":"    }","filePosition":305,"lineItems":[]},{"lineText":"","filePosition":306,"lineItems":[]},{"lineText":"}","filePosition":307,"lineItems":[]},{"lineText":"","filePosition":308,"lineItems":[]},{"lineText":"private fun RBuilder.repoComponent(handler: RepoComponentProps.() -> Unit): ReactElement {","filePosition":309,"lineItems":[]},{"lineText":"    return child(RepoComponent::class) {","filePosition":310,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":311,"lineItems":[]},{"lineText":"    }","filePosition":312,"lineItems":[]},{"lineText":"}","filePosition":313,"lineItems":[]},{"lineText":"","filePosition":314,"lineItems":[]},{"lineText":"","filePosition":315,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/views/GetStartedScreen.kt"},"newFile":{"objectId":"0000000000000000000000000000000000000000","fileLines":[],"path":"/dev/null"},"diffChangeType":"DELETE","tShirtSize":"XS","editList":[{"beginA":0,"beginB":0,"endA":315,"endB":0}]},{"oldFile":{"objectId":"0000000000000000000000000000000000000000","fileLines":[],"path":"/dev/null"},"newFile":{"objectId":"dccd9d596da06db69a0fd782ec092bc87a2523ca","fileLines":[{"lineText":"package supercr.workflows","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import auth.DumbOauthClient","filePosition":2,"lineItems":[]},{"lineText":"import codereview.Project","filePosition":3,"lineItems":[]},{"lineText":"import codereview.SuperCrClient","filePosition":4,"lineItems":[]},{"lineText":"import git.provider.GithubClient","filePosition":5,"lineItems":[]},{"lineText":"import io.ktor.client.HttpClient","filePosition":6,"lineItems":[]},{"lineText":"import io.ktor.client.features.json.JsonFeature","filePosition":7,"lineItems":[]},{"lineText":"import kotlinx.serialization.json.Json","filePosition":8,"lineItems":[]},{"lineText":"import kotlinx.serialization.json.JsonConfiguration","filePosition":9,"lineItems":[]},{"lineText":"import io.ktor.client.features.json.serializer.KotlinxSerializer","filePosition":10,"lineItems":[]},{"lineText":"import kotlinx.coroutines.Dispatchers","filePosition":11,"lineItems":[]},{"lineText":"import kotlinx.coroutines.GlobalScope","filePosition":12,"lineItems":[]},{"lineText":"import kotlinx.coroutines.async","filePosition":13,"lineItems":[]},{"lineText":"import react.RBuilder","filePosition":14,"lineItems":[]},{"lineText":"import react.RComponent","filePosition":15,"lineItems":[]},{"lineText":"import react.RProps","filePosition":16,"lineItems":[]},{"lineText":"import react.RState","filePosition":17,"lineItems":[]},{"lineText":"import react.ReactElement","filePosition":18,"lineItems":[]},{"lineText":"import react.setState","filePosition":19,"lineItems":[]},{"lineText":"import supercr.workflows.gettingstarted.screens.getStartedScreen","filePosition":20,"lineItems":[]},{"lineText":"import supercr.workflows.overview.screens.overviewScreen","filePosition":21,"lineItems":[]},{"lineText":"","filePosition":22,"lineItems":[]},{"lineText":"external interface MainScreenState: RState{","filePosition":23,"lineItems":[]},{"lineText":"    var projects: List<Project>","filePosition":24,"lineItems":[]},{"lineText":"    var accessToken: String","filePosition":25,"lineItems":[]},{"lineText":"}","filePosition":26,"lineItems":[]},{"lineText":"","filePosition":27,"lineItems":[]},{"lineText":"external interface MainScreenProps: RProps {","filePosition":28,"lineItems":[]},{"lineText":"","filePosition":29,"lineItems":[]},{"lineText":"}","filePosition":30,"lineItems":[]},{"lineText":"","filePosition":31,"lineItems":[]},{"lineText":"class MainScreen : RComponent<MainScreenProps, MainScreenState>() {","filePosition":32,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":33,"lineItems":[]},{"lineText":"        if(state.projects.isEmpty()) {","filePosition":34,"lineItems":[]},{"lineText":"            getStartedScreen { ","filePosition":35,"lineItems":[]},{"lineText":"                passAccessToken = receiveGithubAccessToken","filePosition":36,"lineItems":[]},{"lineText":"                passProjects = receiveProjects","filePosition":37,"lineItems":[]},{"lineText":"                superCrClient = this@MainScreen.superCrClient","filePosition":38,"lineItems":[]},{"lineText":"            }","filePosition":39,"lineItems":[]},{"lineText":"        } else {","filePosition":40,"lineItems":[]},{"lineText":"            overviewScreen {","filePosition":41,"lineItems":[]},{"lineText":"                projects = state.projects","filePosition":42,"lineItems":[]},{"lineText":"                getGithubClient = this@MainScreen.getGithubClient","filePosition":43,"lineItems":[]},{"lineText":"            }","filePosition":44,"lineItems":[]},{"lineText":"        }","filePosition":45,"lineItems":[]},{"lineText":"    }","filePosition":46,"lineItems":[]},{"lineText":"","filePosition":47,"lineItems":[]},{"lineText":"    override fun componentDidMount() {","filePosition":48,"lineItems":[]},{"lineText":"        GlobalScope.async(context = Dispatchers.Main) {","filePosition":49,"lineItems":[]},{"lineText":"            superCrClient.getAllProjects()","filePosition":50,"lineItems":[]},{"lineText":"                .let {","filePosition":51,"lineItems":[]},{"lineText":"                    setState {","filePosition":52,"lineItems":[]},{"lineText":"                        projects = it","filePosition":53,"lineItems":[]},{"lineText":"                    }","filePosition":54,"lineItems":[]},{"lineText":"                }","filePosition":55,"lineItems":[]},{"lineText":"        }.invokeOnCompletion { throwable ->","filePosition":56,"lineItems":[]},{"lineText":"            if (throwable != null) {","filePosition":57,"lineItems":[]},{"lineText":"                console.error(\"Something bad happened\")","filePosition":58,"lineItems":[]},{"lineText":"                console.error(throwable)","filePosition":59,"lineItems":[]},{"lineText":"            }","filePosition":60,"lineItems":[]},{"lineText":"        }","filePosition":61,"lineItems":[]},{"lineText":"    }","filePosition":62,"lineItems":[]},{"lineText":"","filePosition":63,"lineItems":[]},{"lineText":"    override fun MainScreenState.init() {","filePosition":64,"lineItems":[]},{"lineText":"        projects = emptyList()","filePosition":65,"lineItems":[]},{"lineText":"        accessToken = \"4da05160ff8311a45f31fe8fd6ab374b8a6f9fe9\"","filePosition":66,"lineItems":[]},{"lineText":"    }","filePosition":67,"lineItems":[]},{"lineText":"","filePosition":68,"lineItems":[]},{"lineText":"    private val receiveGithubAccessToken: (String) -> Unit = { receivedAccessToken ->","filePosition":69,"lineItems":[]},{"lineText":"        setState {","filePosition":70,"lineItems":[]},{"lineText":"            accessToken = receivedAccessToken","filePosition":71,"lineItems":[]},{"lineText":"        }","filePosition":72,"lineItems":[]},{"lineText":"    }","filePosition":73,"lineItems":[]},{"lineText":"","filePosition":74,"lineItems":[]},{"lineText":"    private val getGithubClient: () -> GithubClient = {","filePosition":75,"lineItems":[]},{"lineText":"        GithubClient(","filePosition":76,"lineItems":[]},{"lineText":"            oauthClient = DumbOauthClient(state.accessToken),","filePosition":77,"lineItems":[]},{"lineText":"            httpClient = HttpClient() {","filePosition":78,"lineItems":[]},{"lineText":"                install(JsonFeature) {","filePosition":79,"lineItems":[]},{"lineText":"                    serializer = KotlinxSerializer(json = Json(JsonConfiguration.Stable.copy(ignoreUnknownKeys = true)))","filePosition":80,"lineItems":[]},{"lineText":"                }","filePosition":81,"lineItems":[]},{"lineText":"            }","filePosition":82,"lineItems":[]},{"lineText":"        )","filePosition":83,"lineItems":[]},{"lineText":"    }","filePosition":84,"lineItems":[]},{"lineText":"","filePosition":85,"lineItems":[]},{"lineText":"    private val receiveProjects: (List<Project>) -> Unit = { receivedProjects ->","filePosition":86,"lineItems":[]},{"lineText":"        setState {","filePosition":87,"lineItems":[]},{"lineText":"            projects += receivedProjects","filePosition":88,"lineItems":[]},{"lineText":"        }","filePosition":89,"lineItems":[]},{"lineText":"    }","filePosition":90,"lineItems":[]},{"lineText":"","filePosition":91,"lineItems":[]},{"lineText":"    private val superCrClient = SuperCrClient(","filePosition":92,"lineItems":[]},{"lineText":"        httpClient = HttpClient() {","filePosition":93,"lineItems":[]},{"lineText":"            install(JsonFeature) {","filePosition":94,"lineItems":[]},{"lineText":"                serializer = KotlinxSerializer(json = Json(JsonConfiguration.Stable.copy(ignoreUnknownKeys = true)))","filePosition":95,"lineItems":[]},{"lineText":"            }","filePosition":96,"lineItems":[]},{"lineText":"        }","filePosition":97,"lineItems":[]},{"lineText":"    )","filePosition":98,"lineItems":[]},{"lineText":"","filePosition":99,"lineItems":[]},{"lineText":"}","filePosition":100,"lineItems":[]},{"lineText":"","filePosition":101,"lineItems":[]},{"lineText":"fun RBuilder.mainScreen(handler: MainScreenProps.() -> Unit) : ReactElement {","filePosition":102,"lineItems":[]},{"lineText":"    return child(MainScreen::class) {","filePosition":103,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":104,"lineItems":[]},{"lineText":"    }","filePosition":105,"lineItems":[]},{"lineText":"}","filePosition":106,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/workflows/MainScreen.kt"},"diffChangeType":"ADD","tShirtSize":"L","editList":[{"beginA":0,"beginB":0,"endA":0,"endB":107}]},{"oldFile":{"objectId":"00d4f6b59013af8c7196a84cfeca62ac20c958ac","fileLines":[{"lineText":"package supercr.views","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import AceEditor","filePosition":2,"lineItems":[]},{"lineText":"import react.RBuilder","filePosition":3,"lineItems":[]},{"lineText":"import react.RClass","filePosition":4,"lineItems":[]},{"lineText":"import react.RComponent","filePosition":5,"lineItems":[]},{"lineText":"import react.RProps","filePosition":6,"lineItems":[]},{"lineText":"import react.RState","filePosition":7,"lineItems":[]},{"lineText":"import react.ReactElement","filePosition":8,"lineItems":[]},{"lineText":"","filePosition":9,"lineItems":[]},{"lineText":"external interface CodeViewProps: RProps {","filePosition":10,"lineItems":[]},{"lineText":"    var codeText: String","filePosition":11,"lineItems":[]},{"lineText":"    var id: String","filePosition":12,"lineItems":[]},{"lineText":"    /** If present, will apply the clazzName to the editor */","filePosition":13,"lineItems":[]},{"lineText":"    var className: String","filePosition":14,"lineItems":[]},{"lineText":"}","filePosition":15,"lineItems":[]},{"lineText":"","filePosition":16,"lineItems":[]},{"lineText":"/**","filePosition":17,"lineItems":[]},{"lineText":" * A simple wrapper over [AceEditor] with sensible defaults","filePosition":18,"lineItems":[]},{"lineText":" */","filePosition":19,"lineItems":[]},{"lineText":"class CodeView : RComponent<CodeViewProps, RState>() {","filePosition":20,"lineItems":[]},{"lineText":"    /** These are required to load the editor properly */","filePosition":21,"lineItems":[]},{"lineText":"    val ace = js(\"require('ace-builds/src-noconflict/ace')\")","filePosition":22,"lineItems":[]},{"lineText":"    val webpackResolver = js(\"require('ace-builds/webpack-resolver')\")","filePosition":23,"lineItems":[]},{"lineText":"    val theme = js(\"require('ace-builds/src-noconflict/theme-solarized_light')\")","filePosition":24,"lineItems":[]},{"lineText":"    val split = js(\"require('ace-builds/src-noconflict/ext-split')\")","filePosition":25,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":26,"lineItems":[]},{"lineText":"        AceEditor {","filePosition":27,"lineItems":[]},{"lineText":"            attrs {","filePosition":28,"lineItems":[]},{"lineText":"                mode = \"java\"","filePosition":29,"lineItems":[]},{"lineText":"                theme = \"github\"","filePosition":30,"lineItems":[]},{"lineText":"                name = props.id","filePosition":31,"lineItems":[]},{"lineText":"                readOnly = true","filePosition":32,"lineItems":[]},{"lineText":"                value = props.codeText","filePosition":33,"lineItems":[]},{"lineText":"                width = \"inherit\"","filePosition":34,"lineItems":[]},{"lineText":"                highlightActiveLine = false","filePosition":35,"lineItems":[]},{"lineText":"                className = props.className","filePosition":36,"lineItems":[]},{"lineText":"            }","filePosition":37,"lineItems":[]},{"lineText":"        }","filePosition":38,"lineItems":[]},{"lineText":"    }","filePosition":39,"lineItems":[]},{"lineText":"}","filePosition":40,"lineItems":[]},{"lineText":"","filePosition":41,"lineItems":[]},{"lineText":"fun RBuilder.codeView(handler: CodeViewProps.() -> Unit): ReactElement {","filePosition":42,"lineItems":[]},{"lineText":"    return child(CodeView::class) {","filePosition":43,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":44,"lineItems":[]},{"lineText":"    }","filePosition":45,"lineItems":[]},{"lineText":"}","filePosition":46,"lineItems":[]},{"lineText":"","filePosition":47,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/views/CodeView.kt"},"newFile":{"objectId":"b9e5688f9ce9dcc9a384d392df48d1fa0ec891ed","fileLines":[{"lineText":"package supercr.workflows.codereview.components","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import AceEditor","filePosition":2,"lineItems":[]},{"lineText":"import react.RBuilder","filePosition":3,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"import react.RComponent","filePosition":4,"lineItems":[]},{"lineText":"import react.RProps","filePosition":5,"lineItems":[]},{"lineText":"import react.RState","filePosition":6,"lineItems":[]},{"lineText":"import react.ReactElement","filePosition":7,"lineItems":[]},{"lineText":"","filePosition":8,"lineItems":[]},{"lineText":"external interface CodeViewProps: RProps {","filePosition":9,"lineItems":[]},{"lineText":"    var codeText: String","filePosition":10,"lineItems":[]},{"lineText":"    var id: String","filePosition":11,"lineItems":[]},{"lineText":"    /** If present, will apply the clazzName to the editor */","filePosition":12,"lineItems":[]},{"lineText":"    var className: String","filePosition":13,"lineItems":[]},{"lineText":"}","filePosition":14,"lineItems":[]},{"lineText":"","filePosition":15,"lineItems":[]},{"lineText":"/**","filePosition":16,"lineItems":[]},{"lineText":" * A simple wrapper over [AceEditor] with sensible defaults","filePosition":17,"lineItems":[]},{"lineText":" */","filePosition":18,"lineItems":[]},{"lineText":"class CodeView : RComponent<CodeViewProps, RState>() {","filePosition":19,"lineItems":[]},{"lineText":"    /** These are required to load the editor properly */","filePosition":20,"lineItems":[]},{"lineText":"    val ace = js(\"require('ace-builds/src-noconflict/ace')\")","filePosition":21,"lineItems":[]},{"lineText":"    val webpackResolver = js(\"require('ace-builds/webpack-resolver')\")","filePosition":22,"lineItems":[]},{"lineText":"    val theme = js(\"require('ace-builds/src-noconflict/theme-solarized_light')\")","filePosition":23,"lineItems":[]},{"lineText":"    val split = js(\"require('ace-builds/src-noconflict/ext-split')\")","filePosition":24,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":25,"lineItems":[]},{"lineText":"        AceEditor {","filePosition":26,"lineItems":[]},{"lineText":"            attrs {","filePosition":27,"lineItems":[]},{"lineText":"                mode = \"java\"","filePosition":28,"lineItems":[]},{"lineText":"                theme = \"github\"","filePosition":29,"lineItems":[]},{"lineText":"                name = props.id","filePosition":30,"lineItems":[]},{"lineText":"                readOnly = true","filePosition":31,"lineItems":[]},{"lineText":"                value = props.codeText","filePosition":32,"lineItems":[]},{"lineText":"                width = \"inherit\"","filePosition":33,"lineItems":[]},{"lineText":"                highlightActiveLine = false","filePosition":34,"lineItems":[]},{"lineText":"                className = props.className","filePosition":35,"lineItems":[]},{"lineText":"            }","filePosition":36,"lineItems":[]},{"lineText":"        }","filePosition":37,"lineItems":[]},{"lineText":"    }","filePosition":38,"lineItems":[]},{"lineText":"}","filePosition":39,"lineItems":[]},{"lineText":"","filePosition":40,"lineItems":[]},{"lineText":"fun RBuilder.codeView(handler: CodeViewProps.() -> Unit): ReactElement {","filePosition":41,"lineItems":[]},{"lineText":"    return child(CodeView::class) {","filePosition":42,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":43,"lineItems":[]},{"lineText":"    }","filePosition":44,"lineItems":[]},{"lineText":"}","filePosition":45,"lineItems":[]},{"lineText":"","filePosition":46,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/workflows/codereview/components/CodeView.kt"},"diffChangeType":"RENAME","tShirtSize":"XS","editList":[{"beginA":0,"beginB":0,"endA":1,"endB":1},{"beginA":4,"beginB":4,"endA":5,"endB":4}]},{"oldFile":{"objectId":"10052a4294e8000083e708566ec77f51f98894ec","fileLines":[{"lineText":"package supercr.views","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import AceEditor","filePosition":2,"lineItems":[]},{"lineText":"import Grid","filePosition":3,"lineItems":[]},{"lineText":"import Paper","filePosition":4,"lineItems":[]},{"lineText":"import codereview.DiffEditType","filePosition":5,"lineItems":[]},{"lineText":"import codereview.Edit","filePosition":6,"lineItems":[]},{"lineText":"import react.RBuilder","filePosition":7,"lineItems":[]},{"lineText":"import react.RComponent","filePosition":8,"lineItems":[]},{"lineText":"import react.RProps","filePosition":9,"lineItems":[]},{"lineText":"import react.RState","filePosition":10,"lineItems":[]},{"lineText":"import react.ReactElement","filePosition":11,"lineItems":[]},{"lineText":"import react.dom.p","filePosition":12,"lineItems":[]},{"lineText":"import supercr.css.TextStyles","filePosition":13,"lineItems":[]},{"lineText":"import supercr.processor.TextDiffProcessor","filePosition":14,"lineItems":[]},{"lineText":"","filePosition":15,"lineItems":[]},{"lineText":"external interface DiffViewProps: RProps {","filePosition":16,"lineItems":[]},{"lineText":"    var branchName: String","filePosition":17,"lineItems":[]},{"lineText":"    var oldText: String","filePosition":18,"lineItems":[]},{"lineText":"    var newText: String","filePosition":19,"lineItems":[]},{"lineText":"    var editList: List<Edit>","filePosition":20,"lineItems":[]},{"lineText":"    var identifier: String","filePosition":21,"lineItems":[]},{"lineText":"}","filePosition":22,"lineItems":[]},{"lineText":"external interface DiffViewState: RState {","filePosition":23,"lineItems":[]},{"lineText":"    var currentFileName: String","filePosition":24,"lineItems":[]},{"lineText":"}","filePosition":25,"lineItems":[]},{"lineText":"","filePosition":26,"lineItems":[]},{"lineText":"class DiffView: RComponent<DiffViewProps, DiffViewState>() {","filePosition":27,"lineItems":[]},{"lineText":"    val ace = js(\"require('ace-builds/src-noconflict/ace')\")","filePosition":28,"lineItems":[]},{"lineText":"    private var leftEditor: dynamic = null","filePosition":29,"lineItems":[]},{"lineText":"    private var rightEditor: dynamic = null","filePosition":30,"lineItems":[]},{"lineText":"","filePosition":31,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":32,"lineItems":[]},{"lineText":"        Grid {","filePosition":33,"lineItems":[]},{"lineText":"            attrs {","filePosition":34,"lineItems":[]},{"lineText":"                item = false","filePosition":35,"lineItems":[]},{"lineText":"                container = true","filePosition":36,"lineItems":[]},{"lineText":"                alignItems = \"center\"","filePosition":37,"lineItems":[]},{"lineText":"                direction = \"row\"","filePosition":38,"lineItems":[]},{"lineText":"                justify = \"center\"","filePosition":39,"lineItems":[]},{"lineText":"                spacing = 0","filePosition":40,"lineItems":[]},{"lineText":"            }","filePosition":41,"lineItems":[]},{"lineText":"            Grid {","filePosition":42,"lineItems":[]},{"lineText":"                attrs {","filePosition":43,"lineItems":[]},{"lineText":"                    item = true","filePosition":44,"lineItems":[]},{"lineText":"                    container = false","filePosition":45,"lineItems":[]},{"lineText":"                    xs = 6","filePosition":46,"lineItems":[]},{"lineText":"                }","filePosition":47,"lineItems":[]},{"lineText":"                codeView {","filePosition":48,"lineItems":[]},{"lineText":"                    id = leftEditorId()","filePosition":49,"lineItems":[]},{"lineText":"                    codeText = props.oldText","filePosition":50,"lineItems":[]},{"lineText":"                }","filePosition":51,"lineItems":[]},{"lineText":"            }","filePosition":52,"lineItems":[]},{"lineText":"            Grid {","filePosition":53,"lineItems":[]},{"lineText":"                attrs {","filePosition":54,"lineItems":[]},{"lineText":"                    item = true","filePosition":55,"lineItems":[]},{"lineText":"                    container = false","filePosition":56,"lineItems":[]},{"lineText":"                    xs = 6","filePosition":57,"lineItems":[]},{"lineText":"                }","filePosition":58,"lineItems":[]},{"lineText":"                codeView {","filePosition":59,"lineItems":[]},{"lineText":"                    id = rightEditorId()","filePosition":60,"lineItems":[]},{"lineText":"                    codeText = props.newText","filePosition":61,"lineItems":[]},{"lineText":"                }","filePosition":62,"lineItems":[]},{"lineText":"            }","filePosition":63,"lineItems":[]},{"lineText":"        }","filePosition":64,"lineItems":[]},{"lineText":"    }","filePosition":65,"lineItems":[]},{"lineText":"","filePosition":66,"lineItems":[]},{"lineText":"    override fun componentDidMount() {","filePosition":67,"lineItems":[]},{"lineText":"        leftEditor = ace.edit(leftEditorId())","filePosition":68,"lineItems":[]},{"lineText":"        rightEditor = ace.edit(rightEditorId())","filePosition":69,"lineItems":[]},{"lineText":"        TextDiffProcessor(leftEditor, rightEditor).processEditList(props.editList)","filePosition":70,"lineItems":[]},{"lineText":"//        Split(document.getElementById(\"main-editor\")!!, \"ace/theme/solarized_light\", 2)","filePosition":71,"lineItems":[]},{"lineText":"    }","filePosition":72,"lineItems":[]},{"lineText":"","filePosition":73,"lineItems":[]},{"lineText":"    private fun leftEditorId(): String {","filePosition":74,"lineItems":[]},{"lineText":"        return \"left-${props.identifier}\"","filePosition":75,"lineItems":[]},{"lineText":"    }","filePosition":76,"lineItems":[]},{"lineText":"","filePosition":77,"lineItems":[]},{"lineText":"    private fun rightEditorId(): String {","filePosition":78,"lineItems":[]},{"lineText":"        return \"right-${props.identifier}\"","filePosition":79,"lineItems":[]},{"lineText":"    }","filePosition":80,"lineItems":[]},{"lineText":"}","filePosition":81,"lineItems":[]},{"lineText":"","filePosition":82,"lineItems":[]},{"lineText":"fun RBuilder.diffView(handler: DiffViewProps.() -> Unit): ReactElement {","filePosition":83,"lineItems":[]},{"lineText":"    return child(DiffView::class) {","filePosition":84,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":85,"lineItems":[]},{"lineText":"    }","filePosition":86,"lineItems":[]},{"lineText":"}","filePosition":87,"lineItems":[]},{"lineText":"","filePosition":88,"lineItems":[]},{"lineText":"","filePosition":89,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/views/DiffView.kt"},"newFile":{"objectId":"4bc0d725a5592c41bde98518fb4ae72f5cf83f24","fileLines":[{"lineText":"package supercr.workflows.codereview.components","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"import Grid","filePosition":2,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"import codereview.Edit","filePosition":3,"lineItems":[]},{"lineText":"import react.RBuilder","filePosition":4,"lineItems":[]},{"lineText":"import react.RComponent","filePosition":5,"lineItems":[]},{"lineText":"import react.RProps","filePosition":6,"lineItems":[]},{"lineText":"import react.RState","filePosition":7,"lineItems":[]},{"lineText":"import react.ReactElement","filePosition":8,"lineItems":[]},{"lineText":"import supercr.workflows.codereview.processor.TextDiffProcessor","filePosition":9,"lineItems":[]},{"lineText":"","filePosition":10,"lineItems":[]},{"lineText":"external interface DiffViewProps: RProps {","filePosition":11,"lineItems":[]},{"lineText":"    var branchName: String","filePosition":12,"lineItems":[]},{"lineText":"    var oldText: String","filePosition":13,"lineItems":[]},{"lineText":"    var newText: String","filePosition":14,"lineItems":[]},{"lineText":"    var editList: List<Edit>","filePosition":15,"lineItems":[]},{"lineText":"    var identifier: String","filePosition":16,"lineItems":[]},{"lineText":"}","filePosition":17,"lineItems":[]},{"lineText":"external interface DiffViewState: RState {","filePosition":18,"lineItems":[]},{"lineText":"    var currentFileName: String","filePosition":19,"lineItems":[]},{"lineText":"}","filePosition":20,"lineItems":[]},{"lineText":"","filePosition":21,"lineItems":[]},{"lineText":"class DiffView: RComponent<DiffViewProps, DiffViewState>() {","filePosition":22,"lineItems":[]},{"lineText":"    val ace = js(\"require('ace-builds/src-noconflict/ace')\")","filePosition":23,"lineItems":[]},{"lineText":"    private var leftEditor: dynamic = null","filePosition":24,"lineItems":[]},{"lineText":"    private var rightEditor: dynamic = null","filePosition":25,"lineItems":[]},{"lineText":"","filePosition":26,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":27,"lineItems":[]},{"lineText":"        Grid {","filePosition":28,"lineItems":[]},{"lineText":"            attrs {","filePosition":29,"lineItems":[]},{"lineText":"                item = false","filePosition":30,"lineItems":[]},{"lineText":"                container = true","filePosition":31,"lineItems":[]},{"lineText":"                alignItems = \"center\"","filePosition":32,"lineItems":[]},{"lineText":"                direction = \"row\"","filePosition":33,"lineItems":[]},{"lineText":"                justify = \"center\"","filePosition":34,"lineItems":[]},{"lineText":"                spacing = 0","filePosition":35,"lineItems":[]},{"lineText":"            }","filePosition":36,"lineItems":[]},{"lineText":"            Grid {","filePosition":37,"lineItems":[]},{"lineText":"                attrs {","filePosition":38,"lineItems":[]},{"lineText":"                    item = true","filePosition":39,"lineItems":[]},{"lineText":"                    container = false","filePosition":40,"lineItems":[]},{"lineText":"                    xs = 6","filePosition":41,"lineItems":[]},{"lineText":"                }","filePosition":42,"lineItems":[]},{"lineText":"                codeView {","filePosition":43,"lineItems":[]},{"lineText":"                    id = leftEditorId()","filePosition":44,"lineItems":[]},{"lineText":"                    codeText = props.oldText","filePosition":45,"lineItems":[]},{"lineText":"                }","filePosition":46,"lineItems":[]},{"lineText":"            }","filePosition":47,"lineItems":[]},{"lineText":"            Grid {","filePosition":48,"lineItems":[]},{"lineText":"                attrs {","filePosition":49,"lineItems":[]},{"lineText":"                    item = true","filePosition":50,"lineItems":[]},{"lineText":"                    container = false","filePosition":51,"lineItems":[]},{"lineText":"                    xs = 6","filePosition":52,"lineItems":[]},{"lineText":"                }","filePosition":53,"lineItems":[]},{"lineText":"                codeView {","filePosition":54,"lineItems":[]},{"lineText":"                    id = rightEditorId()","filePosition":55,"lineItems":[]},{"lineText":"                    codeText = props.newText","filePosition":56,"lineItems":[]},{"lineText":"                }","filePosition":57,"lineItems":[]},{"lineText":"            }","filePosition":58,"lineItems":[]},{"lineText":"        }","filePosition":59,"lineItems":[]},{"lineText":"    }","filePosition":60,"lineItems":[]},{"lineText":"","filePosition":61,"lineItems":[]},{"lineText":"    override fun componentDidMount() {","filePosition":62,"lineItems":[]},{"lineText":"        leftEditor = ace.edit(leftEditorId())","filePosition":63,"lineItems":[]},{"lineText":"        rightEditor = ace.edit(rightEditorId())","filePosition":64,"lineItems":[]},{"lineText":"        TextDiffProcessor(leftEditor, rightEditor).processEditList(props.editList)","filePosition":65,"lineItems":[]},{"lineText":"//        Split(document.getElementById(\"main-editor\")!!, \"ace/theme/solarized_light\", 2)","filePosition":66,"lineItems":[]},{"lineText":"    }","filePosition":67,"lineItems":[]},{"lineText":"","filePosition":68,"lineItems":[]},{"lineText":"    private fun leftEditorId(): String {","filePosition":69,"lineItems":[]},{"lineText":"        return \"left-${props.identifier}\"","filePosition":70,"lineItems":[]},{"lineText":"    }","filePosition":71,"lineItems":[]},{"lineText":"","filePosition":72,"lineItems":[]},{"lineText":"    private fun rightEditorId(): String {","filePosition":73,"lineItems":[]},{"lineText":"        return \"right-${props.identifier}\"","filePosition":74,"lineItems":[]},{"lineText":"    }","filePosition":75,"lineItems":[]},{"lineText":"}","filePosition":76,"lineItems":[]},{"lineText":"","filePosition":77,"lineItems":[]},{"lineText":"fun RBuilder.diffView(handler: DiffViewProps.() -> Unit): ReactElement {","filePosition":78,"lineItems":[]},{"lineText":"    return child(DiffView::class) {","filePosition":79,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":80,"lineItems":[]},{"lineText":"    }","filePosition":81,"lineItems":[]},{"lineText":"}","filePosition":82,"lineItems":[]},{"lineText":"","filePosition":83,"lineItems":[]},{"lineText":"","filePosition":84,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/workflows/codereview/components/DiffView.kt"},"diffChangeType":"RENAME","tShirtSize":"S","editList":[{"beginA":0,"beginB":0,"endA":1,"endB":1},{"beginA":2,"beginB":2,"endA":3,"endB":2},{"beginA":4,"beginB":3,"endA":6,"endB":3},{"beginA":12,"beginB":9,"endA":15,"endB":10}]},{"oldFile":{"objectId":"f63509e01eeab487801dec2bbb85fee3d2c96036","fileLines":[{"lineText":"package supercr.views","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import Avatar","filePosition":2,"lineItems":[]},{"lineText":"import Grid","filePosition":3,"lineItems":[]},{"lineText":"import ListItem","filePosition":4,"lineItems":[]},{"lineText":"import ListSubHeader","filePosition":5,"lineItems":[]},{"lineText":"import MaterialUIList","filePosition":6,"lineItems":[]},{"lineText":"import codereview.FileDiff","filePosition":7,"lineItems":[]},{"lineText":"import codereview.FileDiffList","filePosition":8,"lineItems":[]},{"lineText":"import react.RBuilder","filePosition":9,"lineItems":[]},{"lineText":"import react.RComponent","filePosition":10,"lineItems":[]},{"lineText":"import react.RProps","filePosition":11,"lineItems":[]},{"lineText":"import react.RState","filePosition":12,"lineItems":[]},{"lineText":"import react.ReactElement","filePosition":13,"lineItems":[]},{"lineText":"import react.setState","filePosition":14,"lineItems":[]},{"lineText":"","filePosition":15,"lineItems":[]},{"lineText":"enum class FileDiffListMode {","filePosition":16,"lineItems":[]},{"lineText":"    compact,","filePosition":17,"lineItems":[]},{"lineText":"    expanded","filePosition":18,"lineItems":[]},{"lineText":"}","filePosition":19,"lineItems":[]},{"lineText":"","filePosition":20,"lineItems":[]},{"lineText":"external interface FileListViewProps : RProps{","filePosition":21,"lineItems":[]},{"lineText":"    var fileList: FileDiffList","filePosition":22,"lineItems":[]},{"lineText":"    var mode: FileDiffListMode","filePosition":23,"lineItems":[]},{"lineText":"    var onFileSelect: (FileDiff?) -> Unit","filePosition":24,"lineItems":[]},{"lineText":"}","filePosition":25,"lineItems":[]},{"lineText":"","filePosition":26,"lineItems":[]},{"lineText":"external interface FileListViewState: RState {","filePosition":27,"lineItems":[]},{"lineText":"    var selectedIndex: Int?","filePosition":28,"lineItems":[]},{"lineText":"}","filePosition":29,"lineItems":[]},{"lineText":"","filePosition":30,"lineItems":[]},{"lineText":"class FileListView: RComponent<FileListViewProps, FileListViewState>() {","filePosition":31,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":32,"lineItems":[]},{"lineText":"        MaterialUIList {","filePosition":33,"lineItems":[]},{"lineText":"            ListSubHeader {","filePosition":34,"lineItems":[]},{"lineText":"                + \"Files\"","filePosition":35,"lineItems":[]},{"lineText":"            }","filePosition":36,"lineItems":[]},{"lineText":"            props.fileList.fileDiffs.mapIndexed { index, currentFileDiff ->","filePosition":37,"lineItems":[]},{"lineText":"                ListItem {","filePosition":38,"lineItems":[]},{"lineText":"                    attrs {","filePosition":39,"lineItems":[]},{"lineText":"                        button = true","filePosition":40,"lineItems":[]},{"lineText":"                        divider = true","filePosition":41,"lineItems":[]},{"lineText":"                        onClick = handleClick(index)","filePosition":42,"lineItems":[]},{"lineText":"                        selected","filePosition":43,"lineItems":[]},{"lineText":"                    }","filePosition":44,"lineItems":[]},{"lineText":"                    fileItem {","filePosition":45,"lineItems":[]},{"lineText":"                        fileDiff = currentFileDiff","filePosition":46,"lineItems":[]},{"lineText":"                    }","filePosition":47,"lineItems":[]},{"lineText":"                }","filePosition":48,"lineItems":[]},{"lineText":"            }","filePosition":49,"lineItems":[]},{"lineText":"        }","filePosition":50,"lineItems":[]},{"lineText":"    }","filePosition":51,"lineItems":[]},{"lineText":"","filePosition":52,"lineItems":[]},{"lineText":"    private fun handleClick(index: Int): () -> Unit {","filePosition":53,"lineItems":[]},{"lineText":"        return {","filePosition":54,"lineItems":[]},{"lineText":"            val (currentIndex, currentFileDiff) = if (state.selectedIndex != null && state.selectedIndex == index) {","filePosition":55,"lineItems":[]},{"lineText":"                /** Basically toggling */","filePosition":56,"lineItems":[]},{"lineText":"                Pair(null, null)","filePosition":57,"lineItems":[]},{"lineText":"            } else {","filePosition":58,"lineItems":[]},{"lineText":"                Pair(index, props.fileList.fileDiffs[index])","filePosition":59,"lineItems":[]},{"lineText":"            }","filePosition":60,"lineItems":[]},{"lineText":"            setState {","filePosition":61,"lineItems":[]},{"lineText":"                selectedIndex = currentIndex","filePosition":62,"lineItems":[]},{"lineText":"            }","filePosition":63,"lineItems":[]},{"lineText":"            props.onFileSelect(currentFileDiff)","filePosition":64,"lineItems":[]},{"lineText":"        }","filePosition":65,"lineItems":[]},{"lineText":"    }","filePosition":66,"lineItems":[]},{"lineText":"","filePosition":67,"lineItems":[]},{"lineText":"}","filePosition":68,"lineItems":[]},{"lineText":"fun RBuilder.fileList(handler: FileListViewProps.() -> Unit): ReactElement {","filePosition":69,"lineItems":[]},{"lineText":"    return child(FileListView::class) {","filePosition":70,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":71,"lineItems":[]},{"lineText":"    }","filePosition":72,"lineItems":[]},{"lineText":"}","filePosition":73,"lineItems":[]},{"lineText":"","filePosition":74,"lineItems":[]},{"lineText":"","filePosition":75,"lineItems":[]},{"lineText":"external interface FileItemProps: RProps {","filePosition":76,"lineItems":[]},{"lineText":"    var fileDiff: FileDiff","filePosition":77,"lineItems":[]},{"lineText":"}","filePosition":78,"lineItems":[]},{"lineText":"","filePosition":79,"lineItems":[]},{"lineText":"private class FileItem: RComponent<FileItemProps, RState>() {","filePosition":80,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":81,"lineItems":[]},{"lineText":"        Grid {","filePosition":82,"lineItems":[]},{"lineText":"            attrs {","filePosition":83,"lineItems":[]},{"lineText":"                item = false","filePosition":84,"lineItems":[]},{"lineText":"                container = true","filePosition":85,"lineItems":[]},{"lineText":"                direction = \"row\"","filePosition":86,"lineItems":[]},{"lineText":"                justify = \"space-between\"","filePosition":87,"lineItems":[]},{"lineText":"                alignItems = \"center\"","filePosition":88,"lineItems":[]},{"lineText":"            }","filePosition":89,"lineItems":[]},{"lineText":"            Grid {","filePosition":90,"lineItems":[]},{"lineText":"                attrs {","filePosition":91,"lineItems":[]},{"lineText":"                    item = true","filePosition":92,"lineItems":[]},{"lineText":"                    container = false","filePosition":93,"lineItems":[]},{"lineText":"                    xs = 10","filePosition":94,"lineItems":[]},{"lineText":"                }","filePosition":95,"lineItems":[]},{"lineText":"//                    Paper {","filePosition":96,"lineItems":[]},{"lineText":"//                    p {","filePosition":97,"lineItems":[]},{"lineText":"                + props.fileDiff.fileHeader.fileNewPath.split(\"/\").last()","filePosition":98,"lineItems":[]},{"lineText":"//                    }","filePosition":99,"lineItems":[]},{"lineText":"//                    }","filePosition":100,"lineItems":[]},{"lineText":"            }","filePosition":101,"lineItems":[]},{"lineText":"            Grid {","filePosition":102,"lineItems":[]},{"lineText":"                attrs {","filePosition":103,"lineItems":[]},{"lineText":"                    item = true","filePosition":104,"lineItems":[]},{"lineText":"                    container = false","filePosition":105,"lineItems":[]},{"lineText":"                    xs = 2","filePosition":106,"lineItems":[]},{"lineText":"                }","filePosition":107,"lineItems":[]},{"lineText":"                Avatar {","filePosition":108,"lineItems":[]},{"lineText":"                    + \"XS\"","filePosition":109,"lineItems":[]},{"lineText":"                }","filePosition":110,"lineItems":[]},{"lineText":"            }","filePosition":111,"lineItems":[]},{"lineText":"        }","filePosition":112,"lineItems":[]},{"lineText":"    }","filePosition":113,"lineItems":[]},{"lineText":"","filePosition":114,"lineItems":[]},{"lineText":"}","filePosition":115,"lineItems":[]},{"lineText":"","filePosition":116,"lineItems":[]},{"lineText":"private fun RBuilder.fileItem(handler: FileItemProps.() -> Unit): ReactElement {","filePosition":117,"lineItems":[]},{"lineText":"    return child(FileItem::class) {","filePosition":118,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":119,"lineItems":[]},{"lineText":"    }","filePosition":120,"lineItems":[]},{"lineText":"}","filePosition":121,"lineItems":[]},{"lineText":"","filePosition":122,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/views/FileListView.kt"},"newFile":{"objectId":"1c27dcb9ec8f471775544e4b2a2ef439af1b5bb7","fileLines":[{"lineText":"package supercr.workflows.codereview.components","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import Avatar","filePosition":2,"lineItems":[]},{"lineText":"import Grid","filePosition":3,"lineItems":[]},{"lineText":"import ListItem","filePosition":4,"lineItems":[]},{"lineText":"import ListSubHeader","filePosition":5,"lineItems":[]},{"lineText":"import MaterialUIList","filePosition":6,"lineItems":[]},{"lineText":"import codereview.FileDiff","filePosition":7,"lineItems":[]},{"lineText":"import codereview.FileDiffList","filePosition":8,"lineItems":[]},{"lineText":"import react.RBuilder","filePosition":9,"lineItems":[]},{"lineText":"import react.RComponent","filePosition":10,"lineItems":[]},{"lineText":"import react.RProps","filePosition":11,"lineItems":[]},{"lineText":"import react.RState","filePosition":12,"lineItems":[]},{"lineText":"import react.ReactElement","filePosition":13,"lineItems":[]},{"lineText":"import react.setState","filePosition":14,"lineItems":[]},{"lineText":"","filePosition":15,"lineItems":[]},{"lineText":"enum class FileDiffListMode {","filePosition":16,"lineItems":[]},{"lineText":"    compact,","filePosition":17,"lineItems":[]},{"lineText":"    expanded","filePosition":18,"lineItems":[]},{"lineText":"}","filePosition":19,"lineItems":[]},{"lineText":"","filePosition":20,"lineItems":[]},{"lineText":"external interface FileListViewProps : RProps{","filePosition":21,"lineItems":[]},{"lineText":"    var fileList: FileDiffList","filePosition":22,"lineItems":[]},{"lineText":"    var mode: FileDiffListMode","filePosition":23,"lineItems":[]},{"lineText":"    var onFileSelect: (FileDiff?) -> Unit","filePosition":24,"lineItems":[]},{"lineText":"}","filePosition":25,"lineItems":[]},{"lineText":"","filePosition":26,"lineItems":[]},{"lineText":"external interface FileListViewState: RState {","filePosition":27,"lineItems":[]},{"lineText":"    var selectedIndex: Int?","filePosition":28,"lineItems":[]},{"lineText":"}","filePosition":29,"lineItems":[]},{"lineText":"","filePosition":30,"lineItems":[]},{"lineText":"class FileListView: RComponent<FileListViewProps, FileListViewState>() {","filePosition":31,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":32,"lineItems":[]},{"lineText":"        MaterialUIList {","filePosition":33,"lineItems":[]},{"lineText":"            ListSubHeader {","filePosition":34,"lineItems":[]},{"lineText":"                + \"Files\"","filePosition":35,"lineItems":[]},{"lineText":"            }","filePosition":36,"lineItems":[]},{"lineText":"            props.fileList.fileDiffs.mapIndexed { index, currentFileDiff ->","filePosition":37,"lineItems":[]},{"lineText":"                ListItem {","filePosition":38,"lineItems":[]},{"lineText":"                    attrs {","filePosition":39,"lineItems":[]},{"lineText":"                        button = true","filePosition":40,"lineItems":[]},{"lineText":"                        divider = true","filePosition":41,"lineItems":[]},{"lineText":"                        onClick = handleClick(index)","filePosition":42,"lineItems":[]},{"lineText":"                        selected","filePosition":43,"lineItems":[]},{"lineText":"                    }","filePosition":44,"lineItems":[]},{"lineText":"                    fileItem {","filePosition":45,"lineItems":[]},{"lineText":"                        fileDiff = currentFileDiff","filePosition":46,"lineItems":[]},{"lineText":"                    }","filePosition":47,"lineItems":[]},{"lineText":"                }","filePosition":48,"lineItems":[]},{"lineText":"            }","filePosition":49,"lineItems":[]},{"lineText":"        }","filePosition":50,"lineItems":[]},{"lineText":"    }","filePosition":51,"lineItems":[]},{"lineText":"","filePosition":52,"lineItems":[]},{"lineText":"    private fun handleClick(index: Int): () -> Unit {","filePosition":53,"lineItems":[]},{"lineText":"        return {","filePosition":54,"lineItems":[]},{"lineText":"            val (currentIndex, currentFileDiff) = if (state.selectedIndex != null && state.selectedIndex == index) {","filePosition":55,"lineItems":[]},{"lineText":"                /** Basically toggling */","filePosition":56,"lineItems":[]},{"lineText":"                Pair(null, null)","filePosition":57,"lineItems":[]},{"lineText":"            } else {","filePosition":58,"lineItems":[]},{"lineText":"                Pair(index, props.fileList.fileDiffs[index])","filePosition":59,"lineItems":[]},{"lineText":"            }","filePosition":60,"lineItems":[]},{"lineText":"            setState {","filePosition":61,"lineItems":[]},{"lineText":"                selectedIndex = currentIndex","filePosition":62,"lineItems":[]},{"lineText":"            }","filePosition":63,"lineItems":[]},{"lineText":"            props.onFileSelect(currentFileDiff)","filePosition":64,"lineItems":[]},{"lineText":"        }","filePosition":65,"lineItems":[]},{"lineText":"    }","filePosition":66,"lineItems":[]},{"lineText":"","filePosition":67,"lineItems":[]},{"lineText":"}","filePosition":68,"lineItems":[]},{"lineText":"fun RBuilder.fileList(handler: FileListViewProps.() -> Unit): ReactElement {","filePosition":69,"lineItems":[]},{"lineText":"    return child(FileListView::class) {","filePosition":70,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":71,"lineItems":[]},{"lineText":"    }","filePosition":72,"lineItems":[]},{"lineText":"}","filePosition":73,"lineItems":[]},{"lineText":"","filePosition":74,"lineItems":[]},{"lineText":"","filePosition":75,"lineItems":[]},{"lineText":"external interface FileItemProps: RProps {","filePosition":76,"lineItems":[]},{"lineText":"    var fileDiff: FileDiff","filePosition":77,"lineItems":[]},{"lineText":"}","filePosition":78,"lineItems":[]},{"lineText":"","filePosition":79,"lineItems":[]},{"lineText":"private class FileItem: RComponent<FileItemProps, RState>() {","filePosition":80,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":81,"lineItems":[]},{"lineText":"        Grid {","filePosition":82,"lineItems":[]},{"lineText":"            attrs {","filePosition":83,"lineItems":[]},{"lineText":"                item = false","filePosition":84,"lineItems":[]},{"lineText":"                container = true","filePosition":85,"lineItems":[]},{"lineText":"                direction = \"row\"","filePosition":86,"lineItems":[]},{"lineText":"                justify = \"space-between\"","filePosition":87,"lineItems":[]},{"lineText":"                alignItems = \"center\"","filePosition":88,"lineItems":[]},{"lineText":"            }","filePosition":89,"lineItems":[]},{"lineText":"            Grid {","filePosition":90,"lineItems":[]},{"lineText":"                attrs {","filePosition":91,"lineItems":[]},{"lineText":"                    item = true","filePosition":92,"lineItems":[]},{"lineText":"                    container = false","filePosition":93,"lineItems":[]},{"lineText":"                    xs = 10","filePosition":94,"lineItems":[]},{"lineText":"                }","filePosition":95,"lineItems":[]},{"lineText":"//                    Paper {","filePosition":96,"lineItems":[]},{"lineText":"//                    p {","filePosition":97,"lineItems":[]},{"lineText":"                + props.fileDiff.fileHeader.fileNewPath.split(\"/\").last()","filePosition":98,"lineItems":[]},{"lineText":"//                    }","filePosition":99,"lineItems":[]},{"lineText":"//                    }","filePosition":100,"lineItems":[]},{"lineText":"            }","filePosition":101,"lineItems":[]},{"lineText":"            Grid {","filePosition":102,"lineItems":[]},{"lineText":"                attrs {","filePosition":103,"lineItems":[]},{"lineText":"                    item = true","filePosition":104,"lineItems":[]},{"lineText":"                    container = false","filePosition":105,"lineItems":[]},{"lineText":"                    xs = 2","filePosition":106,"lineItems":[]},{"lineText":"                }","filePosition":107,"lineItems":[]},{"lineText":"                Avatar {","filePosition":108,"lineItems":[]},{"lineText":"                    + \"XS\"","filePosition":109,"lineItems":[]},{"lineText":"                }","filePosition":110,"lineItems":[]},{"lineText":"            }","filePosition":111,"lineItems":[]},{"lineText":"        }","filePosition":112,"lineItems":[]},{"lineText":"    }","filePosition":113,"lineItems":[]},{"lineText":"","filePosition":114,"lineItems":[]},{"lineText":"}","filePosition":115,"lineItems":[]},{"lineText":"","filePosition":116,"lineItems":[]},{"lineText":"private fun RBuilder.fileItem(handler: FileItemProps.() -> Unit): ReactElement {","filePosition":117,"lineItems":[]},{"lineText":"    return child(FileItem::class) {","filePosition":118,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":119,"lineItems":[]},{"lineText":"    }","filePosition":120,"lineItems":[]},{"lineText":"}","filePosition":121,"lineItems":[]},{"lineText":"","filePosition":122,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/workflows/codereview/components/FileListView.kt"},"diffChangeType":"RENAME","tShirtSize":"XS","editList":[{"beginA":0,"beginB":0,"endA":1,"endB":1}]},{"oldFile":{"objectId":"520c91f49886e0f1f081ac9d4079f4d7188e93c0","fileLines":[{"lineText":"package supercr.views","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import Grid","filePosition":2,"lineItems":[]},{"lineText":"import Paper","filePosition":3,"lineItems":[]},{"lineText":"import codereview.DiffChangeType","filePosition":4,"lineItems":[]},{"lineText":"import codereview.FileDiff","filePosition":5,"lineItems":[]},{"lineText":"import react.RBuilder","filePosition":6,"lineItems":[]},{"lineText":"import react.RComponent","filePosition":7,"lineItems":[]},{"lineText":"import react.RProps","filePosition":8,"lineItems":[]},{"lineText":"import react.RState","filePosition":9,"lineItems":[]},{"lineText":"import react.ReactElement","filePosition":10,"lineItems":[]},{"lineText":"import react.dom.p","filePosition":11,"lineItems":[]},{"lineText":"import supercr.css.TextStyles","filePosition":12,"lineItems":[]},{"lineText":"","filePosition":13,"lineItems":[]},{"lineText":"/**","filePosition":14,"lineItems":[]},{"lineText":" * Show the diff/details for a file.","filePosition":15,"lineItems":[]},{"lineText":" * Depending on whether the file is new/modified/deleted, we can show it in a different way","filePosition":16,"lineItems":[]},{"lineText":" */","filePosition":17,"lineItems":[]},{"lineText":"external interface FileViewProps: RProps {","filePosition":18,"lineItems":[]},{"lineText":"    var fileDiff: FileDiff","filePosition":19,"lineItems":[]},{"lineText":"}","filePosition":20,"lineItems":[]},{"lineText":"","filePosition":21,"lineItems":[]},{"lineText":"external interface FileViewState: RState {","filePosition":22,"lineItems":[]},{"lineText":"","filePosition":23,"lineItems":[]},{"lineText":"}","filePosition":24,"lineItems":[]},{"lineText":"","filePosition":25,"lineItems":[]},{"lineText":"class FileView : RComponent<FileViewProps, FileViewState>() {","filePosition":26,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":27,"lineItems":[]},{"lineText":"        Grid {","filePosition":28,"lineItems":[]},{"lineText":"            attrs {","filePosition":29,"lineItems":[]},{"lineText":"                item = false","filePosition":30,"lineItems":[]},{"lineText":"                container = true","filePosition":31,"lineItems":[]},{"lineText":"                alignItems = \"center\"","filePosition":32,"lineItems":[]},{"lineText":"                direction = \"row\"","filePosition":33,"lineItems":[]},{"lineText":"                justify = \"center\"","filePosition":34,"lineItems":[]},{"lineText":"                spacing = 0","filePosition":35,"lineItems":[]},{"lineText":"            }","filePosition":36,"lineItems":[]},{"lineText":"            renderDiffView()","filePosition":37,"lineItems":[]},{"lineText":"        }","filePosition":38,"lineItems":[]},{"lineText":"    }","filePosition":39,"lineItems":[]},{"lineText":"","filePosition":40,"lineItems":[]},{"lineText":"    private fun RBuilder.renderDiffView() : ReactElement {","filePosition":41,"lineItems":[]},{"lineText":"        return when(props.fileDiff.diffChangeType) {","filePosition":42,"lineItems":[]},{"lineText":"            DiffChangeType.MODIFY -> renderDiffViewForModifiedFile()","filePosition":43,"lineItems":[]},{"lineText":"            DiffChangeType.COPY -> TODO()","filePosition":44,"lineItems":[]},{"lineText":"            DiffChangeType.RENAME -> renderDiffViewForRenamedFile()","filePosition":45,"lineItems":[]},{"lineText":"            DiffChangeType.DELETE -> renderViewForRemovedFile()","filePosition":46,"lineItems":[]},{"lineText":"            DiffChangeType.ADD -> renderViewForNewFile()","filePosition":47,"lineItems":[]},{"lineText":"        }","filePosition":48,"lineItems":[]},{"lineText":"    }","filePosition":49,"lineItems":[]},{"lineText":"","filePosition":50,"lineItems":[]},{"lineText":"    private fun RBuilder.renderViewForNewFile(): ReactElement {","filePosition":51,"lineItems":[]},{"lineText":"        return Grid {","filePosition":52,"lineItems":[]},{"lineText":"            attrs {","filePosition":53,"lineItems":[]},{"lineText":"                item = true","filePosition":54,"lineItems":[]},{"lineText":"                container = false","filePosition":55,"lineItems":[]},{"lineText":"                xs = 12","filePosition":56,"lineItems":[]},{"lineText":"            }","filePosition":57,"lineItems":[]},{"lineText":"            Paper {","filePosition":58,"lineItems":[]},{"lineText":"                attrs {","filePosition":59,"lineItems":[]},{"lineText":"                    square = true","filePosition":60,"lineItems":[]},{"lineText":"                    variant = \"outlined\"","filePosition":61,"lineItems":[]},{"lineText":"                }","filePosition":62,"lineItems":[]},{"lineText":"                p {","filePosition":63,"lineItems":[]},{"lineText":"                    +props.fileDiff.fileHeader.fileNewPath","filePosition":64,"lineItems":[]},{"lineText":"                }","filePosition":65,"lineItems":[]},{"lineText":"            }","filePosition":66,"lineItems":[]},{"lineText":"            Grid {","filePosition":67,"lineItems":[]},{"lineText":"                attrs {","filePosition":68,"lineItems":[]},{"lineText":"                    container = true","filePosition":69,"lineItems":[]},{"lineText":"                    item = false","filePosition":70,"lineItems":[]},{"lineText":"                    justify = \"space-evenly\"","filePosition":71,"lineItems":[]},{"lineText":"                    spacing = 2","filePosition":72,"lineItems":[]},{"lineText":"                }","filePosition":73,"lineItems":[]},{"lineText":"                Grid {","filePosition":74,"lineItems":[]},{"lineText":"                    attrs {","filePosition":75,"lineItems":[]},{"lineText":"                        item = true","filePosition":76,"lineItems":[]},{"lineText":"                        container = false","filePosition":77,"lineItems":[]},{"lineText":"                        xs = 2","filePosition":78,"lineItems":[]},{"lineText":"                    }","filePosition":79,"lineItems":[]},{"lineText":"                    Paper {","filePosition":80,"lineItems":[]},{"lineText":"","filePosition":81,"lineItems":[]},{"lineText":"                    }","filePosition":82,"lineItems":[]},{"lineText":"                }","filePosition":83,"lineItems":[]},{"lineText":"                renderAceEditorForSingleFiles(props.fileDiff.rawTextNew ?: \"\", xsValToUse = 10, classNameToUse = TextStyles.insertedTextNew)","filePosition":84,"lineItems":[]},{"lineText":"            }","filePosition":85,"lineItems":[]},{"lineText":"        }","filePosition":86,"lineItems":[]},{"lineText":"    }","filePosition":87,"lineItems":[]},{"lineText":"","filePosition":88,"lineItems":[]},{"lineText":"    private fun RBuilder.renderViewForRemovedFile(): ReactElement {","filePosition":89,"lineItems":[]},{"lineText":"        return Grid {","filePosition":90,"lineItems":[]},{"lineText":"            attrs {","filePosition":91,"lineItems":[]},{"lineText":"                item = true","filePosition":92,"lineItems":[]},{"lineText":"                container = false","filePosition":93,"lineItems":[]},{"lineText":"                xs = 12","filePosition":94,"lineItems":[]},{"lineText":"            }","filePosition":95,"lineItems":[]},{"lineText":"            Paper {","filePosition":96,"lineItems":[]},{"lineText":"                attrs {","filePosition":97,"lineItems":[]},{"lineText":"                    square = true","filePosition":98,"lineItems":[]},{"lineText":"                    variant = \"outlined\"","filePosition":99,"lineItems":[]},{"lineText":"                }","filePosition":100,"lineItems":[]},{"lineText":"                p {","filePosition":101,"lineItems":[]},{"lineText":"                    +props.fileDiff.fileHeader.fileOldPath","filePosition":102,"lineItems":[]},{"lineText":"                }","filePosition":103,"lineItems":[]},{"lineText":"            }","filePosition":104,"lineItems":[]},{"lineText":"            Grid {","filePosition":105,"lineItems":[]},{"lineText":"                attrs {","filePosition":106,"lineItems":[]},{"lineText":"                    container = true","filePosition":107,"lineItems":[]},{"lineText":"                    item = false","filePosition":108,"lineItems":[]},{"lineText":"                    justify = \"space-evenly\"","filePosition":109,"lineItems":[]},{"lineText":"                    spacing = 2","filePosition":110,"lineItems":[]},{"lineText":"                }","filePosition":111,"lineItems":[]},{"lineText":"                renderAceEditorForSingleFiles(props.fileDiff.rawTextOld ?: \"\", xsValToUse = 10, classNameToUse = TextStyles.removedText)","filePosition":112,"lineItems":[]},{"lineText":"                Grid {","filePosition":113,"lineItems":[]},{"lineText":"                    attrs {","filePosition":114,"lineItems":[]},{"lineText":"                        item = true","filePosition":115,"lineItems":[]},{"lineText":"                        container = false","filePosition":116,"lineItems":[]},{"lineText":"                        xs = 2","filePosition":117,"lineItems":[]},{"lineText":"                    }","filePosition":118,"lineItems":[]},{"lineText":"                    Paper {","filePosition":119,"lineItems":[]},{"lineText":"","filePosition":120,"lineItems":[]},{"lineText":"                    }","filePosition":121,"lineItems":[]},{"lineText":"                }","filePosition":122,"lineItems":[]},{"lineText":"            }","filePosition":123,"lineItems":[]},{"lineText":"        }","filePosition":124,"lineItems":[]},{"lineText":"    }","filePosition":125,"lineItems":[]},{"lineText":"","filePosition":126,"lineItems":[]},{"lineText":"    private fun RBuilder.renderAceEditorForSingleFiles(text: String, xsValToUse: Number, classNameToUse: String): ReactElement {","filePosition":127,"lineItems":[]},{"lineText":"        return Grid {","filePosition":128,"lineItems":[]},{"lineText":"            attrs {","filePosition":129,"lineItems":[]},{"lineText":"                item = true","filePosition":130,"lineItems":[]},{"lineText":"                container = false","filePosition":131,"lineItems":[]},{"lineText":"                xs = xsValToUse","filePosition":132,"lineItems":[]},{"lineText":"            }","filePosition":133,"lineItems":[]},{"lineText":"            codeView {","filePosition":134,"lineItems":[]},{"lineText":"                id = props.fileDiff.fileHeader.identifier","filePosition":135,"lineItems":[]},{"lineText":"                codeText = text","filePosition":136,"lineItems":[]},{"lineText":"                className = classNameToUse","filePosition":137,"lineItems":[]},{"lineText":"            }","filePosition":138,"lineItems":[]},{"lineText":"        }","filePosition":139,"lineItems":[]},{"lineText":"    }","filePosition":140,"lineItems":[]},{"lineText":"","filePosition":141,"lineItems":[]},{"lineText":"    private fun RBuilder.renderDiffViewForRenamedFile(): ReactElement {","filePosition":142,"lineItems":[]},{"lineText":"        return Grid {","filePosition":143,"lineItems":[]},{"lineText":"            attrs {","filePosition":144,"lineItems":[]},{"lineText":"                container = true","filePosition":145,"lineItems":[]},{"lineText":"                xs = 12","filePosition":146,"lineItems":[]},{"lineText":"                spacing = 0","filePosition":147,"lineItems":[]},{"lineText":"                direction = \"row\"","filePosition":148,"lineItems":[]},{"lineText":"                alignItems = \"center\"","filePosition":149,"lineItems":[]},{"lineText":"                justify = \"space-evenly\"","filePosition":150,"lineItems":[]},{"lineText":"            }","filePosition":151,"lineItems":[]},{"lineText":"            Grid {","filePosition":152,"lineItems":[]},{"lineText":"                attrs {","filePosition":153,"lineItems":[]},{"lineText":"                    xs = 6","filePosition":154,"lineItems":[]},{"lineText":"                }","filePosition":155,"lineItems":[]},{"lineText":"                Paper {","filePosition":156,"lineItems":[]},{"lineText":"                    attrs {","filePosition":157,"lineItems":[]},{"lineText":"                        square = true","filePosition":158,"lineItems":[]},{"lineText":"                        variant = \"outlined\"","filePosition":159,"lineItems":[]},{"lineText":"                    }","filePosition":160,"lineItems":[]},{"lineText":"                    p {","filePosition":161,"lineItems":[]},{"lineText":"                        + \"${ props.fileDiff.fileHeader.fileOldPath } -> \"","filePosition":162,"lineItems":[]},{"lineText":"                    }","filePosition":163,"lineItems":[]},{"lineText":"                }","filePosition":164,"lineItems":[]},{"lineText":"            }","filePosition":165,"lineItems":[]},{"lineText":"            Grid {","filePosition":166,"lineItems":[]},{"lineText":"                attrs {","filePosition":167,"lineItems":[]},{"lineText":"                    xs = 6","filePosition":168,"lineItems":[]},{"lineText":"                }","filePosition":169,"lineItems":[]},{"lineText":"                Paper {","filePosition":170,"lineItems":[]},{"lineText":"                    attrs {","filePosition":171,"lineItems":[]},{"lineText":"                        square = true","filePosition":172,"lineItems":[]},{"lineText":"                        variant = \"outlined\"","filePosition":173,"lineItems":[]},{"lineText":"                    }","filePosition":174,"lineItems":[]},{"lineText":"                    p {","filePosition":175,"lineItems":[]},{"lineText":"                        + props.fileDiff.fileHeader.fileNewPath","filePosition":176,"lineItems":[]},{"lineText":"                    }","filePosition":177,"lineItems":[]},{"lineText":"                }","filePosition":178,"lineItems":[]},{"lineText":"            }","filePosition":179,"lineItems":[]},{"lineText":"            renderDiffPane()","filePosition":180,"lineItems":[]},{"lineText":"        }","filePosition":181,"lineItems":[]},{"lineText":"    }","filePosition":182,"lineItems":[]},{"lineText":"","filePosition":183,"lineItems":[]},{"lineText":"    private fun RBuilder.renderDiffViewForModifiedFile(): ReactElement {","filePosition":184,"lineItems":[]},{"lineText":"        return Grid {","filePosition":185,"lineItems":[]},{"lineText":"            attrs {","filePosition":186,"lineItems":[]},{"lineText":"                item = true","filePosition":187,"lineItems":[]},{"lineText":"                container = false","filePosition":188,"lineItems":[]},{"lineText":"                xs = 12","filePosition":189,"lineItems":[]},{"lineText":"            }","filePosition":190,"lineItems":[]},{"lineText":"            Paper {","filePosition":191,"lineItems":[]},{"lineText":"                attrs {","filePosition":192,"lineItems":[]},{"lineText":"                    square = true","filePosition":193,"lineItems":[]},{"lineText":"                    variant = \"outlined\"","filePosition":194,"lineItems":[]},{"lineText":"                }","filePosition":195,"lineItems":[]},{"lineText":"                p {","filePosition":196,"lineItems":[]},{"lineText":"                    + props.fileDiff.fileHeader.fileNewPath","filePosition":197,"lineItems":[]},{"lineText":"                }","filePosition":198,"lineItems":[]},{"lineText":"            }","filePosition":199,"lineItems":[]},{"lineText":"            renderDiffPane()","filePosition":200,"lineItems":[]},{"lineText":"        }","filePosition":201,"lineItems":[]},{"lineText":"    }","filePosition":202,"lineItems":[]},{"lineText":"","filePosition":203,"lineItems":[]},{"lineText":"    /**","filePosition":204,"lineItems":[]},{"lineText":"     * Renders a [DiffView] in a [Grid] item with the given xs value","filePosition":205,"lineItems":[]},{"lineText":"      */","filePosition":206,"lineItems":[]},{"lineText":"    private fun RBuilder.renderDiffPane(xsValToUse: Number = 12) : ReactElement {","filePosition":207,"lineItems":[]},{"lineText":"        return Grid {","filePosition":208,"lineItems":[]},{"lineText":"            attrs {","filePosition":209,"lineItems":[]},{"lineText":"                item = true","filePosition":210,"lineItems":[]},{"lineText":"                container = false","filePosition":211,"lineItems":[]},{"lineText":"                xs = xsValToUse","filePosition":212,"lineItems":[]},{"lineText":"            }","filePosition":213,"lineItems":[]},{"lineText":"            diffView {","filePosition":214,"lineItems":[]},{"lineText":"                oldText = props.fileDiff.rawTextOld?:\"\"","filePosition":215,"lineItems":[]},{"lineText":"                newText = props.fileDiff.rawTextNew?:\"\"","filePosition":216,"lineItems":[]},{"lineText":"                editList = props.fileDiff.fileHeader.editList","filePosition":217,"lineItems":[]},{"lineText":"                identifier = props.fileDiff.fileHeader.identifier","filePosition":218,"lineItems":[]},{"lineText":"            }","filePosition":219,"lineItems":[]},{"lineText":"        }","filePosition":220,"lineItems":[]},{"lineText":"    }","filePosition":221,"lineItems":[]},{"lineText":"}","filePosition":222,"lineItems":[]},{"lineText":"fun RBuilder.fileView(handler: FileViewProps.() -> Unit): ReactElement {","filePosition":223,"lineItems":[]},{"lineText":"    return child(FileView::class) {","filePosition":224,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":225,"lineItems":[]},{"lineText":"    }","filePosition":226,"lineItems":[]},{"lineText":"}","filePosition":227,"lineItems":[]},{"lineText":"","filePosition":228,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/views/FileView.kt"},"newFile":{"objectId":"edb58a344074c6da76f9c766682f445ce138b3c0","fileLines":[{"lineText":"package supercr.workflows.codereview.components","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import Grid","filePosition":2,"lineItems":[]},{"lineText":"import Paper","filePosition":3,"lineItems":[]},{"lineText":"import codereview.DiffChangeType","filePosition":4,"lineItems":[]},{"lineText":"import codereview.FileDiff","filePosition":5,"lineItems":[]},{"lineText":"import react.RBuilder","filePosition":6,"lineItems":[]},{"lineText":"import react.RComponent","filePosition":7,"lineItems":[]},{"lineText":"import react.RProps","filePosition":8,"lineItems":[]},{"lineText":"import react.RState","filePosition":9,"lineItems":[]},{"lineText":"import react.ReactElement","filePosition":10,"lineItems":[]},{"lineText":"import react.dom.p","filePosition":11,"lineItems":[]},{"lineText":"import supercr.css.TextStyles","filePosition":12,"lineItems":[]},{"lineText":"","filePosition":13,"lineItems":[]},{"lineText":"/**","filePosition":14,"lineItems":[]},{"lineText":" * Show the diff/details for a file.","filePosition":15,"lineItems":[]},{"lineText":" * Depending on whether the file is new/modified/deleted, we can show it in a different way","filePosition":16,"lineItems":[]},{"lineText":" */","filePosition":17,"lineItems":[]},{"lineText":"external interface FileViewProps: RProps {","filePosition":18,"lineItems":[]},{"lineText":"    var fileDiff: FileDiff","filePosition":19,"lineItems":[]},{"lineText":"}","filePosition":20,"lineItems":[]},{"lineText":"","filePosition":21,"lineItems":[]},{"lineText":"external interface FileViewState: RState {","filePosition":22,"lineItems":[]},{"lineText":"","filePosition":23,"lineItems":[]},{"lineText":"}","filePosition":24,"lineItems":[]},{"lineText":"","filePosition":25,"lineItems":[]},{"lineText":"class FileView : RComponent<FileViewProps, FileViewState>() {","filePosition":26,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":27,"lineItems":[]},{"lineText":"        Grid {","filePosition":28,"lineItems":[]},{"lineText":"            attrs {","filePosition":29,"lineItems":[]},{"lineText":"                item = false","filePosition":30,"lineItems":[]},{"lineText":"                container = true","filePosition":31,"lineItems":[]},{"lineText":"                alignItems = \"center\"","filePosition":32,"lineItems":[]},{"lineText":"                direction = \"row\"","filePosition":33,"lineItems":[]},{"lineText":"                justify = \"center\"","filePosition":34,"lineItems":[]},{"lineText":"                spacing = 0","filePosition":35,"lineItems":[]},{"lineText":"            }","filePosition":36,"lineItems":[]},{"lineText":"            renderDiffView()","filePosition":37,"lineItems":[]},{"lineText":"        }","filePosition":38,"lineItems":[]},{"lineText":"    }","filePosition":39,"lineItems":[]},{"lineText":"","filePosition":40,"lineItems":[]},{"lineText":"    private fun RBuilder.renderDiffView() : ReactElement {","filePosition":41,"lineItems":[]},{"lineText":"        return when(props.fileDiff.diffChangeType) {","filePosition":42,"lineItems":[]},{"lineText":"            DiffChangeType.MODIFY -> renderDiffViewForModifiedFile()","filePosition":43,"lineItems":[]},{"lineText":"            DiffChangeType.COPY -> TODO()","filePosition":44,"lineItems":[]},{"lineText":"            DiffChangeType.RENAME -> renderDiffViewForRenamedFile()","filePosition":45,"lineItems":[]},{"lineText":"            DiffChangeType.DELETE -> renderViewForRemovedFile()","filePosition":46,"lineItems":[]},{"lineText":"            DiffChangeType.ADD -> renderViewForNewFile()","filePosition":47,"lineItems":[]},{"lineText":"        }","filePosition":48,"lineItems":[]},{"lineText":"    }","filePosition":49,"lineItems":[]},{"lineText":"","filePosition":50,"lineItems":[]},{"lineText":"    private fun RBuilder.renderViewForNewFile(): ReactElement {","filePosition":51,"lineItems":[]},{"lineText":"        return Grid {","filePosition":52,"lineItems":[]},{"lineText":"            attrs {","filePosition":53,"lineItems":[]},{"lineText":"                item = true","filePosition":54,"lineItems":[]},{"lineText":"                container = false","filePosition":55,"lineItems":[]},{"lineText":"                xs = 12","filePosition":56,"lineItems":[]},{"lineText":"            }","filePosition":57,"lineItems":[]},{"lineText":"            Paper {","filePosition":58,"lineItems":[]},{"lineText":"                attrs {","filePosition":59,"lineItems":[]},{"lineText":"                    square = true","filePosition":60,"lineItems":[]},{"lineText":"                    variant = \"outlined\"","filePosition":61,"lineItems":[]},{"lineText":"                }","filePosition":62,"lineItems":[]},{"lineText":"                p {","filePosition":63,"lineItems":[]},{"lineText":"                    +props.fileDiff.fileHeader.fileNewPath","filePosition":64,"lineItems":[]},{"lineText":"                }","filePosition":65,"lineItems":[]},{"lineText":"            }","filePosition":66,"lineItems":[]},{"lineText":"            Grid {","filePosition":67,"lineItems":[]},{"lineText":"                attrs {","filePosition":68,"lineItems":[]},{"lineText":"                    container = true","filePosition":69,"lineItems":[]},{"lineText":"                    item = false","filePosition":70,"lineItems":[]},{"lineText":"                    justify = \"space-evenly\"","filePosition":71,"lineItems":[]},{"lineText":"                    spacing = 2","filePosition":72,"lineItems":[]},{"lineText":"                }","filePosition":73,"lineItems":[]},{"lineText":"                Grid {","filePosition":74,"lineItems":[]},{"lineText":"                    attrs {","filePosition":75,"lineItems":[]},{"lineText":"                        item = true","filePosition":76,"lineItems":[]},{"lineText":"                        container = false","filePosition":77,"lineItems":[]},{"lineText":"                        xs = 2","filePosition":78,"lineItems":[]},{"lineText":"                    }","filePosition":79,"lineItems":[]},{"lineText":"                    Paper {","filePosition":80,"lineItems":[]},{"lineText":"","filePosition":81,"lineItems":[]},{"lineText":"                    }","filePosition":82,"lineItems":[]},{"lineText":"                }","filePosition":83,"lineItems":[]},{"lineText":"                renderAceEditorForSingleFiles(props.fileDiff.rawTextNew ?: \"\", xsValToUse = 10, classNameToUse = TextStyles.insertedTextNew)","filePosition":84,"lineItems":[]},{"lineText":"            }","filePosition":85,"lineItems":[]},{"lineText":"        }","filePosition":86,"lineItems":[]},{"lineText":"    }","filePosition":87,"lineItems":[]},{"lineText":"","filePosition":88,"lineItems":[]},{"lineText":"    private fun RBuilder.renderViewForRemovedFile(): ReactElement {","filePosition":89,"lineItems":[]},{"lineText":"        return Grid {","filePosition":90,"lineItems":[]},{"lineText":"            attrs {","filePosition":91,"lineItems":[]},{"lineText":"                item = true","filePosition":92,"lineItems":[]},{"lineText":"                container = false","filePosition":93,"lineItems":[]},{"lineText":"                xs = 12","filePosition":94,"lineItems":[]},{"lineText":"            }","filePosition":95,"lineItems":[]},{"lineText":"            Paper {","filePosition":96,"lineItems":[]},{"lineText":"                attrs {","filePosition":97,"lineItems":[]},{"lineText":"                    square = true","filePosition":98,"lineItems":[]},{"lineText":"                    variant = \"outlined\"","filePosition":99,"lineItems":[]},{"lineText":"                }","filePosition":100,"lineItems":[]},{"lineText":"                p {","filePosition":101,"lineItems":[]},{"lineText":"                    +props.fileDiff.fileHeader.fileOldPath","filePosition":102,"lineItems":[]},{"lineText":"                }","filePosition":103,"lineItems":[]},{"lineText":"            }","filePosition":104,"lineItems":[]},{"lineText":"            Grid {","filePosition":105,"lineItems":[]},{"lineText":"                attrs {","filePosition":106,"lineItems":[]},{"lineText":"                    container = true","filePosition":107,"lineItems":[]},{"lineText":"                    item = false","filePosition":108,"lineItems":[]},{"lineText":"                    justify = \"space-evenly\"","filePosition":109,"lineItems":[]},{"lineText":"                    spacing = 2","filePosition":110,"lineItems":[]},{"lineText":"                }","filePosition":111,"lineItems":[]},{"lineText":"                renderAceEditorForSingleFiles(props.fileDiff.rawTextOld ?: \"\", xsValToUse = 10, classNameToUse = TextStyles.removedText)","filePosition":112,"lineItems":[]},{"lineText":"                Grid {","filePosition":113,"lineItems":[]},{"lineText":"                    attrs {","filePosition":114,"lineItems":[]},{"lineText":"                        item = true","filePosition":115,"lineItems":[]},{"lineText":"                        container = false","filePosition":116,"lineItems":[]},{"lineText":"                        xs = 2","filePosition":117,"lineItems":[]},{"lineText":"                    }","filePosition":118,"lineItems":[]},{"lineText":"                    Paper {","filePosition":119,"lineItems":[]},{"lineText":"","filePosition":120,"lineItems":[]},{"lineText":"                    }","filePosition":121,"lineItems":[]},{"lineText":"                }","filePosition":122,"lineItems":[]},{"lineText":"            }","filePosition":123,"lineItems":[]},{"lineText":"        }","filePosition":124,"lineItems":[]},{"lineText":"    }","filePosition":125,"lineItems":[]},{"lineText":"","filePosition":126,"lineItems":[]},{"lineText":"    private fun RBuilder.renderAceEditorForSingleFiles(text: String, xsValToUse: Number, classNameToUse: String): ReactElement {","filePosition":127,"lineItems":[]},{"lineText":"        return Grid {","filePosition":128,"lineItems":[]},{"lineText":"            attrs {","filePosition":129,"lineItems":[]},{"lineText":"                item = true","filePosition":130,"lineItems":[]},{"lineText":"                container = false","filePosition":131,"lineItems":[]},{"lineText":"                xs = xsValToUse","filePosition":132,"lineItems":[]},{"lineText":"            }","filePosition":133,"lineItems":[]},{"lineText":"            codeView {","filePosition":134,"lineItems":[]},{"lineText":"                id = props.fileDiff.fileHeader.identifier","filePosition":135,"lineItems":[]},{"lineText":"                codeText = text","filePosition":136,"lineItems":[]},{"lineText":"                className = classNameToUse","filePosition":137,"lineItems":[]},{"lineText":"            }","filePosition":138,"lineItems":[]},{"lineText":"        }","filePosition":139,"lineItems":[]},{"lineText":"    }","filePosition":140,"lineItems":[]},{"lineText":"","filePosition":141,"lineItems":[]},{"lineText":"    private fun RBuilder.renderDiffViewForRenamedFile(): ReactElement {","filePosition":142,"lineItems":[]},{"lineText":"        return Grid {","filePosition":143,"lineItems":[]},{"lineText":"            attrs {","filePosition":144,"lineItems":[]},{"lineText":"                container = true","filePosition":145,"lineItems":[]},{"lineText":"                xs = 12","filePosition":146,"lineItems":[]},{"lineText":"                spacing = 0","filePosition":147,"lineItems":[]},{"lineText":"                direction = \"row\"","filePosition":148,"lineItems":[]},{"lineText":"                alignItems = \"center\"","filePosition":149,"lineItems":[]},{"lineText":"                justify = \"space-evenly\"","filePosition":150,"lineItems":[]},{"lineText":"            }","filePosition":151,"lineItems":[]},{"lineText":"            Grid {","filePosition":152,"lineItems":[]},{"lineText":"                attrs {","filePosition":153,"lineItems":[]},{"lineText":"                    xs = 6","filePosition":154,"lineItems":[]},{"lineText":"                }","filePosition":155,"lineItems":[]},{"lineText":"                Paper {","filePosition":156,"lineItems":[]},{"lineText":"                    attrs {","filePosition":157,"lineItems":[]},{"lineText":"                        square = true","filePosition":158,"lineItems":[]},{"lineText":"                        variant = \"outlined\"","filePosition":159,"lineItems":[]},{"lineText":"                    }","filePosition":160,"lineItems":[]},{"lineText":"                    p {","filePosition":161,"lineItems":[]},{"lineText":"                        + \"${ props.fileDiff.fileHeader.fileOldPath } -> \"","filePosition":162,"lineItems":[]},{"lineText":"                    }","filePosition":163,"lineItems":[]},{"lineText":"                }","filePosition":164,"lineItems":[]},{"lineText":"            }","filePosition":165,"lineItems":[]},{"lineText":"            Grid {","filePosition":166,"lineItems":[]},{"lineText":"                attrs {","filePosition":167,"lineItems":[]},{"lineText":"                    xs = 6","filePosition":168,"lineItems":[]},{"lineText":"                }","filePosition":169,"lineItems":[]},{"lineText":"                Paper {","filePosition":170,"lineItems":[]},{"lineText":"                    attrs {","filePosition":171,"lineItems":[]},{"lineText":"                        square = true","filePosition":172,"lineItems":[]},{"lineText":"                        variant = \"outlined\"","filePosition":173,"lineItems":[]},{"lineText":"                    }","filePosition":174,"lineItems":[]},{"lineText":"                    p {","filePosition":175,"lineItems":[]},{"lineText":"                        + props.fileDiff.fileHeader.fileNewPath","filePosition":176,"lineItems":[]},{"lineText":"                    }","filePosition":177,"lineItems":[]},{"lineText":"                }","filePosition":178,"lineItems":[]},{"lineText":"            }","filePosition":179,"lineItems":[]},{"lineText":"            renderDiffPane()","filePosition":180,"lineItems":[]},{"lineText":"        }","filePosition":181,"lineItems":[]},{"lineText":"    }","filePosition":182,"lineItems":[]},{"lineText":"","filePosition":183,"lineItems":[]},{"lineText":"    private fun RBuilder.renderDiffViewForModifiedFile(): ReactElement {","filePosition":184,"lineItems":[]},{"lineText":"        return Grid {","filePosition":185,"lineItems":[]},{"lineText":"            attrs {","filePosition":186,"lineItems":[]},{"lineText":"                item = true","filePosition":187,"lineItems":[]},{"lineText":"                container = false","filePosition":188,"lineItems":[]},{"lineText":"                xs = 12","filePosition":189,"lineItems":[]},{"lineText":"            }","filePosition":190,"lineItems":[]},{"lineText":"            Paper {","filePosition":191,"lineItems":[]},{"lineText":"                attrs {","filePosition":192,"lineItems":[]},{"lineText":"                    square = true","filePosition":193,"lineItems":[]},{"lineText":"                    variant = \"outlined\"","filePosition":194,"lineItems":[]},{"lineText":"                }","filePosition":195,"lineItems":[]},{"lineText":"                p {","filePosition":196,"lineItems":[]},{"lineText":"                    + props.fileDiff.fileHeader.fileNewPath","filePosition":197,"lineItems":[]},{"lineText":"                }","filePosition":198,"lineItems":[]},{"lineText":"            }","filePosition":199,"lineItems":[]},{"lineText":"            renderDiffPane()","filePosition":200,"lineItems":[]},{"lineText":"        }","filePosition":201,"lineItems":[]},{"lineText":"    }","filePosition":202,"lineItems":[]},{"lineText":"","filePosition":203,"lineItems":[]},{"lineText":"    /**","filePosition":204,"lineItems":[]},{"lineText":"     * Renders a [DiffView] in a [Grid] item with the given xs value","filePosition":205,"lineItems":[]},{"lineText":"      */","filePosition":206,"lineItems":[]},{"lineText":"    private fun RBuilder.renderDiffPane(xsValToUse: Number = 12) : ReactElement {","filePosition":207,"lineItems":[]},{"lineText":"        return Grid {","filePosition":208,"lineItems":[]},{"lineText":"            attrs {","filePosition":209,"lineItems":[]},{"lineText":"                item = true","filePosition":210,"lineItems":[]},{"lineText":"                container = false","filePosition":211,"lineItems":[]},{"lineText":"                xs = xsValToUse","filePosition":212,"lineItems":[]},{"lineText":"            }","filePosition":213,"lineItems":[]},{"lineText":"            diffView {","filePosition":214,"lineItems":[]},{"lineText":"                oldText = props.fileDiff.rawTextOld?:\"\"","filePosition":215,"lineItems":[]},{"lineText":"                newText = props.fileDiff.rawTextNew?:\"\"","filePosition":216,"lineItems":[]},{"lineText":"                editList = props.fileDiff.fileHeader.editList","filePosition":217,"lineItems":[]},{"lineText":"                identifier = props.fileDiff.fileHeader.identifier","filePosition":218,"lineItems":[]},{"lineText":"            }","filePosition":219,"lineItems":[]},{"lineText":"        }","filePosition":220,"lineItems":[]},{"lineText":"    }","filePosition":221,"lineItems":[]},{"lineText":"}","filePosition":222,"lineItems":[]},{"lineText":"fun RBuilder.fileView(handler: FileViewProps.() -> Unit): ReactElement {","filePosition":223,"lineItems":[]},{"lineText":"    return child(FileView::class) {","filePosition":224,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":225,"lineItems":[]},{"lineText":"    }","filePosition":226,"lineItems":[]},{"lineText":"}","filePosition":227,"lineItems":[]},{"lineText":"","filePosition":228,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/workflows/codereview/components/FileView.kt"},"diffChangeType":"RENAME","tShirtSize":"XS","editList":[{"beginA":0,"beginB":0,"endA":1,"endB":1}]},{"oldFile":{"objectId":"a849ade3aa858905a7ed60c0d61540bbb16a7f5d","fileLines":[{"lineText":"package supercr.processor","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import JsDiffResult","filePosition":2,"lineItems":[]},{"lineText":"import diffWords","filePosition":3,"lineItems":[]},{"lineText":"","filePosition":4,"lineItems":[]},{"lineText":"enum class HighlightType {","filePosition":5,"lineItems":[]},{"lineText":"    TextAdded,","filePosition":6,"lineItems":[]},{"lineText":"    TextRemoved","filePosition":7,"lineItems":[]},{"lineText":"}","filePosition":8,"lineItems":[]},{"lineText":"","filePosition":9,"lineItems":[]},{"lineText":"/**","filePosition":10,"lineItems":[]},{"lineText":" * Essentially stores 'marker' information to word/character level differences between two lines of text","filePosition":11,"lineItems":[]},{"lineText":" * The range [fromColumn] and [toColumn] is inclusive","filePosition":12,"lineItems":[]},{"lineText":" */","filePosition":13,"lineItems":[]},{"lineText":"data class VimDiffRowMarker(","filePosition":14,"lineItems":[]},{"lineText":"    val fromColumn: Long,","filePosition":15,"lineItems":[]},{"lineText":"    val toColumn: Long,","filePosition":16,"lineItems":[]},{"lineText":"    val highlightType: HighlightType","filePosition":17,"lineItems":[]},{"lineText":")","filePosition":18,"lineItems":[]},{"lineText":"","filePosition":19,"lineItems":[]},{"lineText":"private enum class JsDiffType {","filePosition":20,"lineItems":[]},{"lineText":"    Added,","filePosition":21,"lineItems":[]},{"lineText":"    Removed,","filePosition":22,"lineItems":[]},{"lineText":"    Same","filePosition":23,"lineItems":[]},{"lineText":"}","filePosition":24,"lineItems":[]},{"lineText":"","filePosition":25,"lineItems":[]},{"lineText":"class LineDiffProcessor {","filePosition":26,"lineItems":[]},{"lineText":"    companion object {","filePosition":27,"lineItems":[]},{"lineText":"        /**","filePosition":28,"lineItems":[]},{"lineText":"         * For given two lines of text, this method returns a Pair of lists of [VimDiffRowMarker]","filePosition":29,"lineItems":[]},{"lineText":"         * First part of the Pair is a list of markers to be applied to the editor displaying the [oldLine]","filePosition":30,"lineItems":[]},{"lineText":"         * Second part of the Pair is a list of markers to be applied to the editor displaying the [newLine]","filePosition":31,"lineItems":[]},{"lineText":"         * We could have returned a single list of markers as well, considering a [HighlightType.TextAdded] would never appear in the first part of the result pair","filePosition":32,"lineItems":[]},{"lineText":"         * Similarly, a [HighlightType.TextRemoved] would never appear in the 2nd part of the pair.","filePosition":33,"lineItems":[]},{"lineText":"         */","filePosition":34,"lineItems":[]},{"lineText":"        fun getDiffMarkers(oldLine: String, newLine: String): Pair<List<VimDiffRowMarker>, List<VimDiffRowMarker>> {","filePosition":35,"lineItems":[]},{"lineText":"            val diff = diffWords(oldLine, newLine)","filePosition":36,"lineItems":[]},{"lineText":"            val initialAccumulator = Triple(0L, 0L, listOf<VimDiffRowMarker>())","filePosition":37,"lineItems":[]},{"lineText":"            return diff.fold(initialAccumulator) { (oldTextIndex, newTextIndex, accumulatedMarkers), currentDiff ->","filePosition":38,"lineItems":[]},{"lineText":"                when(currentDiff.getType()) {","filePosition":39,"lineItems":[]},{"lineText":"                    JsDiffType.Added -> {","filePosition":40,"lineItems":[]},{"lineText":"                        /** Move the index only newText and create a marker */","filePosition":41,"lineItems":[]},{"lineText":"                        val newMarker = VimDiffRowMarker(fromColumn = newTextIndex, toColumn = newTextIndex + currentDiff.value.length - 1, highlightType = HighlightType.TextAdded)","filePosition":42,"lineItems":[]},{"lineText":"                        Triple(oldTextIndex, newTextIndex + currentDiff.value.length, accumulatedMarkers.plus(newMarker))","filePosition":43,"lineItems":[]},{"lineText":"                    }","filePosition":44,"lineItems":[]},{"lineText":"                    JsDiffType.Removed -> {","filePosition":45,"lineItems":[]},{"lineText":"                        /** Move the index only for oldText and create a marker */","filePosition":46,"lineItems":[]},{"lineText":"                        val marker = VimDiffRowMarker(fromColumn = oldTextIndex, toColumn = oldTextIndex + currentDiff.value.length - 1, highlightType = HighlightType.TextRemoved)","filePosition":47,"lineItems":[]},{"lineText":"                        Triple(oldTextIndex + currentDiff.value.length, newTextIndex, accumulatedMarkers.plus(marker))","filePosition":48,"lineItems":[]},{"lineText":"                    }","filePosition":49,"lineItems":[]},{"lineText":"                    JsDiffType.Same -> {","filePosition":50,"lineItems":[]},{"lineText":"                        /** There won't be a new Marker - we just forward the indexes */","filePosition":51,"lineItems":[]},{"lineText":"                        Triple(oldTextIndex + currentDiff.value.length, newTextIndex + currentDiff.value.length , accumulatedMarkers)","filePosition":52,"lineItems":[]},{"lineText":"                    }","filePosition":53,"lineItems":[]},{"lineText":"                }","filePosition":54,"lineItems":[]},{"lineText":"            }.let { (oldTextIndex, newTextIndex, accumulatedMarkers) ->","filePosition":55,"lineItems":[]},{"lineText":"                require(oldTextIndex.toInt() == oldLine.length) {","filePosition":56,"lineItems":[]},{"lineText":"                    \"For some reason, for the oldLine, We got only up to $oldTextIndex whereas we should have got up till ${oldLine.length}\"","filePosition":57,"lineItems":[]},{"lineText":"                }","filePosition":58,"lineItems":[]},{"lineText":"                require(newTextIndex.toInt() == newLine.length) {","filePosition":59,"lineItems":[]},{"lineText":"                    \"For some reason, for the newLine, We got only up to $newTextIndex whereas we should have got up till ${newLine.length}\"","filePosition":60,"lineItems":[]},{"lineText":"                }","filePosition":61,"lineItems":[]},{"lineText":"                Pair(","filePosition":62,"lineItems":[]},{"lineText":"                    first = accumulatedMarkers.filter { it.highlightType == HighlightType.TextRemoved },","filePosition":63,"lineItems":[]},{"lineText":"                    second = accumulatedMarkers.filter { it.highlightType == HighlightType.TextAdded }","filePosition":64,"lineItems":[]},{"lineText":"                )","filePosition":65,"lineItems":[]},{"lineText":"            }","filePosition":66,"lineItems":[]},{"lineText":"        }","filePosition":67,"lineItems":[]},{"lineText":"","filePosition":68,"lineItems":[]},{"lineText":"        private fun JsDiffResult.getType(): JsDiffType {","filePosition":69,"lineItems":[]},{"lineText":"            return if(this.added == null && this.removed == null) {","filePosition":70,"lineItems":[]},{"lineText":"                JsDiffType.Same","filePosition":71,"lineItems":[]},{"lineText":"            } else if (this.added == true) {","filePosition":72,"lineItems":[]},{"lineText":"                JsDiffType.Added","filePosition":73,"lineItems":[]},{"lineText":"            } else {","filePosition":74,"lineItems":[]},{"lineText":"                JsDiffType.Removed","filePosition":75,"lineItems":[]},{"lineText":"            }","filePosition":76,"lineItems":[]},{"lineText":"        }","filePosition":77,"lineItems":[]},{"lineText":"    }","filePosition":78,"lineItems":[]},{"lineText":"}","filePosition":79,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/processor/LineDiffProcessor.kt"},"newFile":{"objectId":"77502800b82be22c0ffe8b321c9d435df1adbeae","fileLines":[{"lineText":"package supercr.workflows.codereview.processor","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import JsDiffResult","filePosition":2,"lineItems":[]},{"lineText":"import diffWords","filePosition":3,"lineItems":[]},{"lineText":"","filePosition":4,"lineItems":[]},{"lineText":"enum class HighlightType {","filePosition":5,"lineItems":[]},{"lineText":"    TextAdded,","filePosition":6,"lineItems":[]},{"lineText":"    TextRemoved","filePosition":7,"lineItems":[]},{"lineText":"}","filePosition":8,"lineItems":[]},{"lineText":"","filePosition":9,"lineItems":[]},{"lineText":"/**","filePosition":10,"lineItems":[]},{"lineText":" * Essentially stores 'marker' information to word/character level differences between two lines of text","filePosition":11,"lineItems":[]},{"lineText":" * The range [fromColumn] and [toColumn] is inclusive","filePosition":12,"lineItems":[]},{"lineText":" */","filePosition":13,"lineItems":[]},{"lineText":"data class VimDiffRowMarker(","filePosition":14,"lineItems":[]},{"lineText":"    val fromColumn: Long,","filePosition":15,"lineItems":[]},{"lineText":"    val toColumn: Long,","filePosition":16,"lineItems":[]},{"lineText":"    val highlightType: HighlightType","filePosition":17,"lineItems":[]},{"lineText":")","filePosition":18,"lineItems":[]},{"lineText":"","filePosition":19,"lineItems":[]},{"lineText":"private enum class JsDiffType {","filePosition":20,"lineItems":[]},{"lineText":"    Added,","filePosition":21,"lineItems":[]},{"lineText":"    Removed,","filePosition":22,"lineItems":[]},{"lineText":"    Same","filePosition":23,"lineItems":[]},{"lineText":"}","filePosition":24,"lineItems":[]},{"lineText":"","filePosition":25,"lineItems":[]},{"lineText":"class LineDiffProcessor {","filePosition":26,"lineItems":[]},{"lineText":"    companion object {","filePosition":27,"lineItems":[]},{"lineText":"        /**","filePosition":28,"lineItems":[]},{"lineText":"         * For given two lines of text, this method returns a Pair of lists of [VimDiffRowMarker]","filePosition":29,"lineItems":[]},{"lineText":"         * First part of the Pair is a list of markers to be applied to the editor displaying the [oldLine]","filePosition":30,"lineItems":[]},{"lineText":"         * Second part of the Pair is a list of markers to be applied to the editor displaying the [newLine]","filePosition":31,"lineItems":[]},{"lineText":"         * We could have returned a single list of markers as well, considering a [HighlightType.TextAdded] would never appear in the first part of the result pair","filePosition":32,"lineItems":[]},{"lineText":"         * Similarly, a [HighlightType.TextRemoved] would never appear in the 2nd part of the pair.","filePosition":33,"lineItems":[]},{"lineText":"         */","filePosition":34,"lineItems":[]},{"lineText":"        fun getDiffMarkers(oldLine: String, newLine: String): Pair<List<VimDiffRowMarker>, List<VimDiffRowMarker>> {","filePosition":35,"lineItems":[]},{"lineText":"            val diff = diffWords(oldLine, newLine)","filePosition":36,"lineItems":[]},{"lineText":"            val initialAccumulator = Triple(0L, 0L, listOf<VimDiffRowMarker>())","filePosition":37,"lineItems":[]},{"lineText":"            return diff.fold(initialAccumulator) { (oldTextIndex, newTextIndex, accumulatedMarkers), currentDiff ->","filePosition":38,"lineItems":[]},{"lineText":"                when(currentDiff.getType()) {","filePosition":39,"lineItems":[]},{"lineText":"                    JsDiffType.Added -> {","filePosition":40,"lineItems":[]},{"lineText":"                        /** Move the index only newText and create a marker */","filePosition":41,"lineItems":[]},{"lineText":"                        val newMarker = VimDiffRowMarker(fromColumn = newTextIndex, toColumn = newTextIndex + currentDiff.value.length - 1, highlightType = HighlightType.TextAdded)","filePosition":42,"lineItems":[]},{"lineText":"                        Triple(oldTextIndex, newTextIndex + currentDiff.value.length, accumulatedMarkers.plus(newMarker))","filePosition":43,"lineItems":[]},{"lineText":"                    }","filePosition":44,"lineItems":[]},{"lineText":"                    JsDiffType.Removed -> {","filePosition":45,"lineItems":[]},{"lineText":"                        /** Move the index only for oldText and create a marker */","filePosition":46,"lineItems":[]},{"lineText":"                        val marker = VimDiffRowMarker(fromColumn = oldTextIndex, toColumn = oldTextIndex + currentDiff.value.length - 1, highlightType = HighlightType.TextRemoved)","filePosition":47,"lineItems":[]},{"lineText":"                        Triple(oldTextIndex + currentDiff.value.length, newTextIndex, accumulatedMarkers.plus(marker))","filePosition":48,"lineItems":[]},{"lineText":"                    }","filePosition":49,"lineItems":[]},{"lineText":"                    JsDiffType.Same -> {","filePosition":50,"lineItems":[]},{"lineText":"                        /** There won't be a new Marker - we just forward the indexes */","filePosition":51,"lineItems":[]},{"lineText":"                        Triple(oldTextIndex + currentDiff.value.length, newTextIndex + currentDiff.value.length , accumulatedMarkers)","filePosition":52,"lineItems":[]},{"lineText":"                    }","filePosition":53,"lineItems":[]},{"lineText":"                }","filePosition":54,"lineItems":[]},{"lineText":"            }.let { (oldTextIndex, newTextIndex, accumulatedMarkers) ->","filePosition":55,"lineItems":[]},{"lineText":"                require(oldTextIndex.toInt() == oldLine.length) {","filePosition":56,"lineItems":[]},{"lineText":"                    \"For some reason, for the oldLine, We got only up to $oldTextIndex whereas we should have got up till ${oldLine.length}\"","filePosition":57,"lineItems":[]},{"lineText":"                }","filePosition":58,"lineItems":[]},{"lineText":"                require(newTextIndex.toInt() == newLine.length) {","filePosition":59,"lineItems":[]},{"lineText":"                    \"For some reason, for the newLine, We got only up to $newTextIndex whereas we should have got up till ${newLine.length}\"","filePosition":60,"lineItems":[]},{"lineText":"                }","filePosition":61,"lineItems":[]},{"lineText":"                Pair(","filePosition":62,"lineItems":[]},{"lineText":"                    first = accumulatedMarkers.filter { it.highlightType == HighlightType.TextRemoved },","filePosition":63,"lineItems":[]},{"lineText":"                    second = accumulatedMarkers.filter { it.highlightType == HighlightType.TextAdded }","filePosition":64,"lineItems":[]},{"lineText":"                )","filePosition":65,"lineItems":[]},{"lineText":"            }","filePosition":66,"lineItems":[]},{"lineText":"        }","filePosition":67,"lineItems":[]},{"lineText":"","filePosition":68,"lineItems":[]},{"lineText":"        private fun JsDiffResult.getType(): JsDiffType {","filePosition":69,"lineItems":[]},{"lineText":"            return if(this.added == null && this.removed == null) {","filePosition":70,"lineItems":[]},{"lineText":"                JsDiffType.Same","filePosition":71,"lineItems":[]},{"lineText":"            } else if (this.added == true) {","filePosition":72,"lineItems":[]},{"lineText":"                JsDiffType.Added","filePosition":73,"lineItems":[]},{"lineText":"            } else {","filePosition":74,"lineItems":[]},{"lineText":"                JsDiffType.Removed","filePosition":75,"lineItems":[]},{"lineText":"            }","filePosition":76,"lineItems":[]},{"lineText":"        }","filePosition":77,"lineItems":[]},{"lineText":"    }","filePosition":78,"lineItems":[]},{"lineText":"}","filePosition":79,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/workflows/codereview/processor/LineDiffProcessor.kt"},"diffChangeType":"RENAME","tShirtSize":"XS","editList":[{"beginA":0,"beginB":0,"endA":1,"endB":1}]},{"oldFile":{"objectId":"6037945e2c3591d645c18d5f354b906a08b386a9","fileLines":[{"lineText":"package supercr.processor","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import Range","filePosition":2,"lineItems":[]},{"lineText":"import codereview.DiffEditType","filePosition":3,"lineItems":[]},{"lineText":"import codereview.Edit","filePosition":4,"lineItems":[]},{"lineText":"import supercr.css.TextStyles","filePosition":5,"lineItems":[]},{"lineText":"","filePosition":6,"lineItems":[]},{"lineText":"/**","filePosition":7,"lineItems":[]},{"lineText":" * Basically used to create appropriate decorations in our text editors","filePosition":8,"lineItems":[]},{"lineText":" */","filePosition":9,"lineItems":[]},{"lineText":"class TextDiffProcessor constructor(","filePosition":10,"lineItems":[]},{"lineText":"    private val editorWithOldText: dynamic,","filePosition":11,"lineItems":[]},{"lineText":"    private val editorWithNewText: dynamic","filePosition":12,"lineItems":[]},{"lineText":") {","filePosition":13,"lineItems":[]},{"lineText":"    /**","filePosition":14,"lineItems":[]},{"lineText":"     * Process the [editList] to highlight the diff in oth the editors","filePosition":15,"lineItems":[]},{"lineText":"     */","filePosition":16,"lineItems":[]},{"lineText":"    fun processEditList(editList: List<Edit>) {","filePosition":17,"lineItems":[]},{"lineText":"        editList.fold(initial = 0L) { numLinesAddedToRightEditor, currentEdit ->","filePosition":18,"lineItems":[]},{"lineText":"            /**","filePosition":19,"lineItems":[]},{"lineText":"             * Basically, we base all our highlights with the 'right hand side' offsets.","filePosition":20,"lineItems":[]},{"lineText":"             * Which means that if we want to highlight the 'changed' lines on the left hand side of the diff,","filePosition":21,"lineItems":[]},{"lineText":"             * we derive the line numbers using the 'right hand side' - [Edit.beginB] as the offset.","filePosition":22,"lineItems":[]},{"lineText":"             * Of course, the [Edit] list line numbers are of the original source.","filePosition":23,"lineItems":[]},{"lineText":"             * While showing the diff, we may insert some lines on the right hand side as well (in the case of deleted lines, for eg)","filePosition":24,"lineItems":[]},{"lineText":"             * Which means we need to keep a track of how many lines we've inserted in the right side, which is captured in the accumulator here","filePosition":25,"lineItems":[]},{"lineText":"             *","filePosition":26,"lineItems":[]},{"lineText":"             * Note: Given the logic explained above, it is important that we _always_ process [editorWithOldText] and then [editorWithNewText]","filePosition":27,"lineItems":[]},{"lineText":"             */","filePosition":28,"lineItems":[]},{"lineText":"            val numLinesAddedForCurrentEdit = currentEdit.processEdit(numLinesAddedToRightEditor)","filePosition":29,"lineItems":[]},{"lineText":"//            currentEdit.processForOldEditor(numLinesAddedToRightEditor, editorWithOldText)","filePosition":30,"lineItems":[]},{"lineText":"//            val numLinesAddedForCurrentEdit = currentEdit.processForNewEditor(numLinesAddedToRightEditor, editorWithNewText)","filePosition":31,"lineItems":[]},{"lineText":"            numLinesAddedToRightEditor + numLinesAddedForCurrentEdit","filePosition":32,"lineItems":[]},{"lineText":"        }","filePosition":33,"lineItems":[]},{"lineText":"    }","filePosition":34,"lineItems":[]},{"lineText":"","filePosition":35,"lineItems":[]},{"lineText":"    private fun Edit.processEdit(offset: Long): Long {","filePosition":36,"lineItems":[]},{"lineText":"        /**","filePosition":37,"lineItems":[]},{"lineText":"         * The region highlighted by [Edit.beginA] to [Edit.endA] has been 'replaced' _in the original \"text\" document","filePosition":38,"lineItems":[]},{"lineText":"         * Note that if there were any INSERTS or REPLACES in the [editorWithOldText] before this, then those would have","filePosition":39,"lineItems":[]},{"lineText":"         * brought the 'document' lines in the [editorWithOldText] at par with lines in [editorWithNewText]","filePosition":40,"lineItems":[]},{"lineText":"         * Thus, we always use [Edit.beginB] as the starting point of the region to highlight in all of the following methods","filePosition":41,"lineItems":[]},{"lineText":"         *","filePosition":42,"lineItems":[]},{"lineText":"         */","filePosition":43,"lineItems":[]},{"lineText":"        return when(editType) {","filePosition":44,"lineItems":[]},{"lineText":"            DiffEditType.INSERT -> {","filePosition":45,"lineItems":[]},{"lineText":"                processInsertForOldEditor(offset)","filePosition":46,"lineItems":[]},{"lineText":"                processInsertForNewEditor(offset)","filePosition":47,"lineItems":[]},{"lineText":"                0L","filePosition":48,"lineItems":[]},{"lineText":"            }","filePosition":49,"lineItems":[]},{"lineText":"            DiffEditType.DELETE -> {","filePosition":50,"lineItems":[]},{"lineText":"                processDeleteForOldEditor(offset)","filePosition":51,"lineItems":[]},{"lineText":"                processDeleteForNewEditor(offset)","filePosition":52,"lineItems":[]},{"lineText":"            }","filePosition":53,"lineItems":[]},{"lineText":"            DiffEditType.REPLACE -> {","filePosition":54,"lineItems":[]},{"lineText":"                /** If there is new text on the right hand side, that means we have to fill empty lines */","filePosition":55,"lineItems":[]},{"lineText":"                if (lengthB > lengthA) {","filePosition":56,"lineItems":[]},{"lineText":"                    val numLines = lengthB - lengthA","filePosition":57,"lineItems":[]},{"lineText":"                    insertEmptyLinesAt(editor = editorWithOldText, rowNumber = beginB + offset + lengthA, numLines = numLines)","filePosition":58,"lineItems":[]},{"lineText":"                    highlighLinesWithGutter(editorWithOldText, beginB + offset + lengthA, numLines, TextStyles.textInsertedForBalance)","filePosition":59,"lineItems":[]},{"lineText":"                }","filePosition":60,"lineItems":[]},{"lineText":"                /** At this point, we have the same number or rows to process in both [editorWithOldText] and [editorWithNewText] */","filePosition":61,"lineItems":[]},{"lineText":"                val fromRow = beginB + offset","filePosition":62,"lineItems":[]},{"lineText":"                val upTillRow = fromRow + lengthB","filePosition":63,"lineItems":[]},{"lineText":"                (fromRow until upTillRow).map { rowIndex ->","filePosition":64,"lineItems":[]},{"lineText":"                    val oldText = getLineAt(rowIndex, editorWithOldText)","filePosition":65,"lineItems":[]},{"lineText":"                    val newText = getLineAt(rowIndex, editorWithNewText)","filePosition":66,"lineItems":[]},{"lineText":"                    LineDiffProcessor.getDiffMarkers(oldText, newText)","filePosition":67,"lineItems":[]},{"lineText":"                        .let { (markersForOldTextEditor, markersForNewTextEditor) ->","filePosition":68,"lineItems":[]},{"lineText":"                            // TODO : If the diff marker starts at column '0', then we highlight the section starting with column 0. This leaves a small gap between the gutter and the starting of the highlight. Fix that","filePosition":69,"lineItems":[]},{"lineText":"                            markersForOldTextEditor.map { marker ->","filePosition":70,"lineItems":[]},{"lineText":"                                highlightLineSection(","filePosition":71,"lineItems":[]},{"lineText":"                                    rowIndex = rowIndex,","filePosition":72,"lineItems":[]},{"lineText":"                                    fromColumn = marker.fromColumn,","filePosition":73,"lineItems":[]},{"lineText":"                                    toColumn = marker.toColumn,","filePosition":74,"lineItems":[]},{"lineText":"                                    editor = editorWithOldText,","filePosition":75,"lineItems":[]},{"lineText":"                                    cssClazz = when(marker.highlightType) {","filePosition":76,"lineItems":[]},{"lineText":"                                        HighlightType.TextAdded -> TextStyles.insertedTextNew","filePosition":77,"lineItems":[]},{"lineText":"                                        HighlightType.TextRemoved -> TextStyles.removedText","filePosition":78,"lineItems":[]},{"lineText":"                                    }","filePosition":79,"lineItems":[]},{"lineText":"                                )","filePosition":80,"lineItems":[]},{"lineText":"                            }","filePosition":81,"lineItems":[]},{"lineText":"                            markersForNewTextEditor.map { marker ->","filePosition":82,"lineItems":[]},{"lineText":"                                highlightLineSection(","filePosition":83,"lineItems":[]},{"lineText":"                                    rowIndex = rowIndex,","filePosition":84,"lineItems":[]},{"lineText":"                                    fromColumn = marker.fromColumn,","filePosition":85,"lineItems":[]},{"lineText":"                                    toColumn = marker.toColumn,","filePosition":86,"lineItems":[]},{"lineText":"                                    editor = editorWithNewText,","filePosition":87,"lineItems":[]},{"lineText":"                                    cssClazz = when(marker.highlightType) {","filePosition":88,"lineItems":[]},{"lineText":"                                        HighlightType.TextAdded -> TextStyles.insertedTextNew","filePosition":89,"lineItems":[]},{"lineText":"                                        HighlightType.TextRemoved -> TextStyles.removedText","filePosition":90,"lineItems":[]},{"lineText":"                                    }","filePosition":91,"lineItems":[]},{"lineText":"                                )","filePosition":92,"lineItems":[]},{"lineText":"                            }","filePosition":93,"lineItems":[]},{"lineText":"                        }","filePosition":94,"lineItems":[]},{"lineText":"","filePosition":95,"lineItems":[]},{"lineText":"                }","filePosition":96,"lineItems":[]},{"lineText":"                /** Finally, highlight the gutters */","filePosition":97,"lineItems":[]},{"lineText":"                highlightGutter(editor = editorWithNewText, fromRow = beginB + offset, numLines = lengthB, cssClazz = TextStyles.insertedTextNew)","filePosition":98,"lineItems":[]},{"lineText":"                highlightGutter(editor = editorWithOldText, fromRow = beginB + offset, numLines = lengthA, cssClazz = TextStyles.removedText)","filePosition":99,"lineItems":[]},{"lineText":"                0L","filePosition":100,"lineItems":[]},{"lineText":"            }","filePosition":101,"lineItems":[]},{"lineText":"            DiffEditType.EMPTY -> TODO()","filePosition":102,"lineItems":[]},{"lineText":"        }","filePosition":103,"lineItems":[]},{"lineText":"    }","filePosition":104,"lineItems":[]},{"lineText":"","filePosition":105,"lineItems":[]},{"lineText":"    private fun getLineAt(rowIndex: Long, editor: dynamic): String {","filePosition":106,"lineItems":[]},{"lineText":"        return ( editor.getSession().getLine(rowIndex.toDouble()) as String )","filePosition":107,"lineItems":[]},{"lineText":"    }","filePosition":108,"lineItems":[]},{"lineText":"","filePosition":109,"lineItems":[]},{"lineText":"    private fun highlightLineSection(rowIndex: Long, fromColumn: Long, toColumn: Long, editor: dynamic, cssClazz: String) {","filePosition":110,"lineItems":[]},{"lineText":"        editor.getSession().addMarker(","filePosition":111,"lineItems":[]},{"lineText":"            Range(rowIndex.toDouble(), fromColumn.toDouble(), rowIndex.toDouble(), toColumn.toDouble()),","filePosition":112,"lineItems":[]},{"lineText":"            cssClazz,","filePosition":113,"lineItems":[]},{"lineText":"            \"text\",","filePosition":114,"lineItems":[]},{"lineText":"            false","filePosition":115,"lineItems":[]},{"lineText":"        )","filePosition":116,"lineItems":[]},{"lineText":"    }","filePosition":117,"lineItems":[]},{"lineText":"","filePosition":118,"lineItems":[]},{"lineText":"    private fun Edit.processInsertForOldEditor(offset: Long) {","filePosition":119,"lineItems":[]},{"lineText":"        val numLines = lengthB - lengthA","filePosition":120,"lineItems":[]},{"lineText":"        insertEmptyLinesAt(editor = editorWithOldText, rowNumber = beginB + offset, numLines = numLines)","filePosition":121,"lineItems":[]},{"lineText":"        highlighLinesWithGutter(editorWithOldText, beginB + offset, numLines, TextStyles.textInsertedForBalance)","filePosition":122,"lineItems":[]},{"lineText":"    }","filePosition":123,"lineItems":[]},{"lineText":"","filePosition":124,"lineItems":[]},{"lineText":"    private fun Edit.processInsertForNewEditor(offset: Long) {","filePosition":125,"lineItems":[]},{"lineText":"        highlighLinesWithGutter(editor = editorWithNewText, fromRow = beginB + offset, numLines = lengthB, cssClazz = TextStyles.insertedTextNew)","filePosition":126,"lineItems":[]},{"lineText":"    }","filePosition":127,"lineItems":[]},{"lineText":"","filePosition":128,"lineItems":[]},{"lineText":"    private fun Edit.processDeleteForNewEditor(offset: Long): Long {","filePosition":129,"lineItems":[]},{"lineText":"        val numLinesInDocument = editorWithNewText.getSession().getLength() as Number","filePosition":130,"lineItems":[]},{"lineText":"        return if (numLinesInDocument.toLong() - 1 <= endB  )  {","filePosition":131,"lineItems":[]},{"lineText":"            /** Handle deletions at end of file */","filePosition":132,"lineItems":[]},{"lineText":"            insertEmptyLinesAt(editor = editorWithNewText ,rowNumber = numLinesInDocument.toLong(),  numLines = lengthB + 1)","filePosition":133,"lineItems":[]},{"lineText":"            highlighLinesWithGutter(editorWithNewText, numLinesInDocument.toLong(), lengthB + 1, TextStyles.textInsertedForBalance)","filePosition":134,"lineItems":[]},{"lineText":"            0L","filePosition":135,"lineItems":[]},{"lineText":"        } else {","filePosition":136,"lineItems":[]},{"lineText":"            /** We are not at the end of file */","filePosition":137,"lineItems":[]},{"lineText":"            insertEmptyLinesAt(editor = editorWithNewText ,rowNumber = beginB + offset,  numLines = lengthA)","filePosition":138,"lineItems":[]},{"lineText":"            highlighLinesWithGutter(editorWithNewText, beginB + offset, lengthA, TextStyles.textInsertedForBalance)","filePosition":139,"lineItems":[]},{"lineText":"            lengthA","filePosition":140,"lineItems":[]},{"lineText":"        }","filePosition":141,"lineItems":[]},{"lineText":"    }","filePosition":142,"lineItems":[]},{"lineText":"","filePosition":143,"lineItems":[]},{"lineText":"    private fun Edit.processDeleteForOldEditor(offset: Long) {","filePosition":144,"lineItems":[]},{"lineText":"        /** [Edit.beginA] and [Edit.endA] denote the line numbers of the _old_ text","filePosition":145,"lineItems":[]},{"lineText":"         * We must use the line numbers of the new text - denoted by [Edit.beginB] and [Edit.endB] to","filePosition":146,"lineItems":[]},{"lineText":"         * highlight the part that was _removed_ from old text","filePosition":147,"lineItems":[]},{"lineText":"         */","filePosition":148,"lineItems":[]},{"lineText":"        highlighLinesWithGutter(editorWithOldText, beginB + offset, lengthA, TextStyles.removedText)","filePosition":149,"lineItems":[]},{"lineText":"    }","filePosition":150,"lineItems":[]},{"lineText":"","filePosition":151,"lineItems":[]},{"lineText":"    private fun highlighLinesWithGutter(editor: dynamic, fromRow: Long, numLines: Long, cssClazz: String) {","filePosition":152,"lineItems":[]},{"lineText":"        highlightLines(editor, fromRow, numLines, cssClazz)","filePosition":153,"lineItems":[]},{"lineText":"        highlightGutter(editor, fromRow, numLines, cssClazz)","filePosition":154,"lineItems":[]},{"lineText":"    }","filePosition":155,"lineItems":[]},{"lineText":"","filePosition":156,"lineItems":[]},{"lineText":"    private fun highlightLines(editor: dynamic, fromRow: Long, numLines: Long, cssClazz: String) {","filePosition":157,"lineItems":[]},{"lineText":"        editor.getSession().highlightLines(fromRow.toDouble(), ( fromRow + numLines - 1 ) .toDouble(), cssClazz)","filePosition":158,"lineItems":[]},{"lineText":"    }","filePosition":159,"lineItems":[]},{"lineText":"","filePosition":160,"lineItems":[]},{"lineText":"    private fun highlightGutter(editor: dynamic ,fromRow: Long, numLines: Long, cssClazz: String) {","filePosition":161,"lineItems":[]},{"lineText":"        (fromRow until (fromRow + numLines)).map { rowNumber ->","filePosition":162,"lineItems":[]},{"lineText":"            editor.getSession().addGutterDecoration(rowNumber.toDouble() , cssClazz)","filePosition":163,"lineItems":[]},{"lineText":"        }","filePosition":164,"lineItems":[]},{"lineText":"    }","filePosition":165,"lineItems":[]},{"lineText":"","filePosition":166,"lineItems":[]},{"lineText":"    private fun insertEmptyLinesAt(editor: dynamic, rowNumber: Long,numLines: Long) {","filePosition":167,"lineItems":[]},{"lineText":"        val emptyLinesArray = generateEmptyLineArray(numLines)","filePosition":168,"lineItems":[]},{"lineText":"        editor.getSession().getDocument().insertFullLines(rowNumber, emptyLinesArray)","filePosition":169,"lineItems":[]},{"lineText":"    }","filePosition":170,"lineItems":[]},{"lineText":"","filePosition":171,"lineItems":[]},{"lineText":"    private fun generateEmptyLineArray(numLines: Long) = Array(numLines.toInt()) { \"\" }","filePosition":172,"lineItems":[]},{"lineText":"","filePosition":173,"lineItems":[]},{"lineText":"}","filePosition":174,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/processor/TextDiffProcessor.kt"},"newFile":{"objectId":"30c3eeffd844f8648e3f65a3fe9d6fcd534217d9","fileLines":[{"lineText":"package supercr.workflows.codereview.processor","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import Range","filePosition":2,"lineItems":[]},{"lineText":"import codereview.DiffEditType","filePosition":3,"lineItems":[]},{"lineText":"import codereview.Edit","filePosition":4,"lineItems":[]},{"lineText":"import supercr.css.TextStyles","filePosition":5,"lineItems":[]},{"lineText":"","filePosition":6,"lineItems":[]},{"lineText":"/**","filePosition":7,"lineItems":[]},{"lineText":" * Basically used to create appropriate decorations in our text editors","filePosition":8,"lineItems":[]},{"lineText":" */","filePosition":9,"lineItems":[]},{"lineText":"class TextDiffProcessor constructor(","filePosition":10,"lineItems":[]},{"lineText":"    private val editorWithOldText: dynamic,","filePosition":11,"lineItems":[]},{"lineText":"    private val editorWithNewText: dynamic","filePosition":12,"lineItems":[]},{"lineText":") {","filePosition":13,"lineItems":[]},{"lineText":"    /**","filePosition":14,"lineItems":[]},{"lineText":"     * Process the [editList] to highlight the diff in oth the editors","filePosition":15,"lineItems":[]},{"lineText":"     */","filePosition":16,"lineItems":[]},{"lineText":"    fun processEditList(editList: List<Edit>) {","filePosition":17,"lineItems":[]},{"lineText":"        editList.fold(initial = 0L) { numLinesAddedToRightEditor, currentEdit ->","filePosition":18,"lineItems":[]},{"lineText":"            /**","filePosition":19,"lineItems":[]},{"lineText":"             * Basically, we base all our highlights with the 'right hand side' offsets.","filePosition":20,"lineItems":[]},{"lineText":"             * Which means that if we want to highlight the 'changed' lines on the left hand side of the diff,","filePosition":21,"lineItems":[]},{"lineText":"             * we derive the line numbers using the 'right hand side' - [Edit.beginB] as the offset.","filePosition":22,"lineItems":[]},{"lineText":"             * Of course, the [Edit] list line numbers are of the original source.","filePosition":23,"lineItems":[]},{"lineText":"             * While showing the diff, we may insert some lines on the right hand side as well (in the case of deleted lines, for eg)","filePosition":24,"lineItems":[]},{"lineText":"             * Which means we need to keep a track of how many lines we've inserted in the right side, which is captured in the accumulator here","filePosition":25,"lineItems":[]},{"lineText":"             *","filePosition":26,"lineItems":[]},{"lineText":"             * Note: Given the logic explained above, it is important that we _always_ process [editorWithOldText] and then [editorWithNewText]","filePosition":27,"lineItems":[]},{"lineText":"             */","filePosition":28,"lineItems":[]},{"lineText":"            val numLinesAddedForCurrentEdit = currentEdit.processEdit(numLinesAddedToRightEditor)","filePosition":29,"lineItems":[]},{"lineText":"//            currentEdit.processForOldEditor(numLinesAddedToRightEditor, editorWithOldText)","filePosition":30,"lineItems":[]},{"lineText":"//            val numLinesAddedForCurrentEdit = currentEdit.processForNewEditor(numLinesAddedToRightEditor, editorWithNewText)","filePosition":31,"lineItems":[]},{"lineText":"            numLinesAddedToRightEditor + numLinesAddedForCurrentEdit","filePosition":32,"lineItems":[]},{"lineText":"        }","filePosition":33,"lineItems":[]},{"lineText":"    }","filePosition":34,"lineItems":[]},{"lineText":"","filePosition":35,"lineItems":[]},{"lineText":"    private fun Edit.processEdit(offset: Long): Long {","filePosition":36,"lineItems":[]},{"lineText":"        /**","filePosition":37,"lineItems":[]},{"lineText":"         * The region highlighted by [Edit.beginA] to [Edit.endA] has been 'replaced' _in the original \"text\" document","filePosition":38,"lineItems":[]},{"lineText":"         * Note that if there were any INSERTS or REPLACES in the [editorWithOldText] before this, then those would have","filePosition":39,"lineItems":[]},{"lineText":"         * brought the 'document' lines in the [editorWithOldText] at par with lines in [editorWithNewText]","filePosition":40,"lineItems":[]},{"lineText":"         * Thus, we always use [Edit.beginB] as the starting point of the region to highlight in all of the following methods","filePosition":41,"lineItems":[]},{"lineText":"         *","filePosition":42,"lineItems":[]},{"lineText":"         */","filePosition":43,"lineItems":[]},{"lineText":"        return when(editType) {","filePosition":44,"lineItems":[]},{"lineText":"            DiffEditType.INSERT -> {","filePosition":45,"lineItems":[]},{"lineText":"                processInsertForOldEditor(offset)","filePosition":46,"lineItems":[]},{"lineText":"                processInsertForNewEditor(offset)","filePosition":47,"lineItems":[]},{"lineText":"                0L","filePosition":48,"lineItems":[]},{"lineText":"            }","filePosition":49,"lineItems":[]},{"lineText":"            DiffEditType.DELETE -> {","filePosition":50,"lineItems":[]},{"lineText":"                processDeleteForOldEditor(offset)","filePosition":51,"lineItems":[]},{"lineText":"                processDeleteForNewEditor(offset)","filePosition":52,"lineItems":[]},{"lineText":"            }","filePosition":53,"lineItems":[]},{"lineText":"            DiffEditType.REPLACE -> {","filePosition":54,"lineItems":[]},{"lineText":"                /** If there is new text on the right hand side, that means we have to fill empty lines */","filePosition":55,"lineItems":[]},{"lineText":"                if (lengthB > lengthA) {","filePosition":56,"lineItems":[]},{"lineText":"                    val numLines = lengthB - lengthA","filePosition":57,"lineItems":[]},{"lineText":"                    insertEmptyLinesAt(editor = editorWithOldText, rowNumber = beginB + offset + lengthA, numLines = numLines)","filePosition":58,"lineItems":[]},{"lineText":"                    highlighLinesWithGutter(editorWithOldText, beginB + offset + lengthA, numLines, TextStyles.textInsertedForBalance)","filePosition":59,"lineItems":[]},{"lineText":"                }","filePosition":60,"lineItems":[]},{"lineText":"                /** At this point, we have the same number or rows to process in both [editorWithOldText] and [editorWithNewText] */","filePosition":61,"lineItems":[]},{"lineText":"                val fromRow = beginB + offset","filePosition":62,"lineItems":[]},{"lineText":"                val upTillRow = fromRow + lengthB","filePosition":63,"lineItems":[]},{"lineText":"                (fromRow until upTillRow).map { rowIndex ->","filePosition":64,"lineItems":[]},{"lineText":"                    val oldText = getLineAt(rowIndex, editorWithOldText)","filePosition":65,"lineItems":[]},{"lineText":"                    val newText = getLineAt(rowIndex, editorWithNewText)","filePosition":66,"lineItems":[]},{"lineText":"                    LineDiffProcessor.getDiffMarkers(oldText, newText)","filePosition":67,"lineItems":[]},{"lineText":"                        .let { (markersForOldTextEditor, markersForNewTextEditor) ->","filePosition":68,"lineItems":[]},{"lineText":"                            // TODO : If the diff marker starts at column '0', then we highlight the section starting with column 0. This leaves a small gap between the gutter and the starting of the highlight. Fix that","filePosition":69,"lineItems":[]},{"lineText":"                            markersForOldTextEditor.map { marker ->","filePosition":70,"lineItems":[]},{"lineText":"                                highlightLineSection(","filePosition":71,"lineItems":[]},{"lineText":"                                    rowIndex = rowIndex,","filePosition":72,"lineItems":[]},{"lineText":"                                    fromColumn = marker.fromColumn,","filePosition":73,"lineItems":[]},{"lineText":"                                    toColumn = marker.toColumn,","filePosition":74,"lineItems":[]},{"lineText":"                                    editor = editorWithOldText,","filePosition":75,"lineItems":[]},{"lineText":"                                    cssClazz = when(marker.highlightType) {","filePosition":76,"lineItems":[]},{"lineText":"                                        HighlightType.TextAdded -> TextStyles.insertedTextNew","filePosition":77,"lineItems":[]},{"lineText":"                                        HighlightType.TextRemoved -> TextStyles.removedText","filePosition":78,"lineItems":[]},{"lineText":"                                    }","filePosition":79,"lineItems":[]},{"lineText":"                                )","filePosition":80,"lineItems":[]},{"lineText":"                            }","filePosition":81,"lineItems":[]},{"lineText":"                            markersForNewTextEditor.map { marker ->","filePosition":82,"lineItems":[]},{"lineText":"                                highlightLineSection(","filePosition":83,"lineItems":[]},{"lineText":"                                    rowIndex = rowIndex,","filePosition":84,"lineItems":[]},{"lineText":"                                    fromColumn = marker.fromColumn,","filePosition":85,"lineItems":[]},{"lineText":"                                    toColumn = marker.toColumn,","filePosition":86,"lineItems":[]},{"lineText":"                                    editor = editorWithNewText,","filePosition":87,"lineItems":[]},{"lineText":"                                    cssClazz = when(marker.highlightType) {","filePosition":88,"lineItems":[]},{"lineText":"                                        HighlightType.TextAdded -> TextStyles.insertedTextNew","filePosition":89,"lineItems":[]},{"lineText":"                                        HighlightType.TextRemoved -> TextStyles.removedText","filePosition":90,"lineItems":[]},{"lineText":"                                    }","filePosition":91,"lineItems":[]},{"lineText":"                                )","filePosition":92,"lineItems":[]},{"lineText":"                            }","filePosition":93,"lineItems":[]},{"lineText":"                        }","filePosition":94,"lineItems":[]},{"lineText":"","filePosition":95,"lineItems":[]},{"lineText":"                }","filePosition":96,"lineItems":[]},{"lineText":"                /** Finally, highlight the gutters */","filePosition":97,"lineItems":[]},{"lineText":"                highlightGutter(editor = editorWithNewText, fromRow = beginB + offset, numLines = lengthB, cssClazz = TextStyles.insertedTextNew)","filePosition":98,"lineItems":[]},{"lineText":"                highlightGutter(editor = editorWithOldText, fromRow = beginB + offset, numLines = lengthA, cssClazz = TextStyles.removedText)","filePosition":99,"lineItems":[]},{"lineText":"                0L","filePosition":100,"lineItems":[]},{"lineText":"            }","filePosition":101,"lineItems":[]},{"lineText":"            DiffEditType.EMPTY -> TODO()","filePosition":102,"lineItems":[]},{"lineText":"        }","filePosition":103,"lineItems":[]},{"lineText":"    }","filePosition":104,"lineItems":[]},{"lineText":"","filePosition":105,"lineItems":[]},{"lineText":"    private fun getLineAt(rowIndex: Long, editor: dynamic): String {","filePosition":106,"lineItems":[]},{"lineText":"        return ( editor.getSession().getLine(rowIndex.toDouble()) as String )","filePosition":107,"lineItems":[]},{"lineText":"    }","filePosition":108,"lineItems":[]},{"lineText":"","filePosition":109,"lineItems":[]},{"lineText":"    private fun highlightLineSection(rowIndex: Long, fromColumn: Long, toColumn: Long, editor: dynamic, cssClazz: String) {","filePosition":110,"lineItems":[]},{"lineText":"        editor.getSession().addMarker(","filePosition":111,"lineItems":[]},{"lineText":"            Range(rowIndex.toDouble(), fromColumn.toDouble(), rowIndex.toDouble(), toColumn.toDouble()),","filePosition":112,"lineItems":[]},{"lineText":"            cssClazz,","filePosition":113,"lineItems":[]},{"lineText":"            \"text\",","filePosition":114,"lineItems":[]},{"lineText":"            false","filePosition":115,"lineItems":[]},{"lineText":"        )","filePosition":116,"lineItems":[]},{"lineText":"    }","filePosition":117,"lineItems":[]},{"lineText":"","filePosition":118,"lineItems":[]},{"lineText":"    private fun Edit.processInsertForOldEditor(offset: Long) {","filePosition":119,"lineItems":[]},{"lineText":"        val numLines = lengthB - lengthA","filePosition":120,"lineItems":[]},{"lineText":"        insertEmptyLinesAt(editor = editorWithOldText, rowNumber = beginB + offset, numLines = numLines)","filePosition":121,"lineItems":[]},{"lineText":"        highlighLinesWithGutter(editorWithOldText, beginB + offset, numLines, TextStyles.textInsertedForBalance)","filePosition":122,"lineItems":[]},{"lineText":"    }","filePosition":123,"lineItems":[]},{"lineText":"","filePosition":124,"lineItems":[]},{"lineText":"    private fun Edit.processInsertForNewEditor(offset: Long) {","filePosition":125,"lineItems":[]},{"lineText":"        highlighLinesWithGutter(editor = editorWithNewText, fromRow = beginB + offset, numLines = lengthB, cssClazz = TextStyles.insertedTextNew)","filePosition":126,"lineItems":[]},{"lineText":"    }","filePosition":127,"lineItems":[]},{"lineText":"","filePosition":128,"lineItems":[]},{"lineText":"    private fun Edit.processDeleteForNewEditor(offset: Long): Long {","filePosition":129,"lineItems":[]},{"lineText":"        val numLinesInDocument = editorWithNewText.getSession().getLength() as Number","filePosition":130,"lineItems":[]},{"lineText":"        return if (numLinesInDocument.toLong() - 1 <= endB  )  {","filePosition":131,"lineItems":[]},{"lineText":"            /** Handle deletions at end of file */","filePosition":132,"lineItems":[]},{"lineText":"            insertEmptyLinesAt(editor = editorWithNewText ,rowNumber = numLinesInDocument.toLong(),  numLines = lengthB + 1)","filePosition":133,"lineItems":[]},{"lineText":"            highlighLinesWithGutter(editorWithNewText, numLinesInDocument.toLong(), lengthB + 1, TextStyles.textInsertedForBalance)","filePosition":134,"lineItems":[]},{"lineText":"            0L","filePosition":135,"lineItems":[]},{"lineText":"        } else {","filePosition":136,"lineItems":[]},{"lineText":"            /** We are not at the end of file */","filePosition":137,"lineItems":[]},{"lineText":"            insertEmptyLinesAt(editor = editorWithNewText ,rowNumber = beginB + offset,  numLines = lengthA)","filePosition":138,"lineItems":[]},{"lineText":"            highlighLinesWithGutter(editorWithNewText, beginB + offset, lengthA, TextStyles.textInsertedForBalance)","filePosition":139,"lineItems":[]},{"lineText":"            lengthA","filePosition":140,"lineItems":[]},{"lineText":"        }","filePosition":141,"lineItems":[]},{"lineText":"    }","filePosition":142,"lineItems":[]},{"lineText":"","filePosition":143,"lineItems":[]},{"lineText":"    private fun Edit.processDeleteForOldEditor(offset: Long) {","filePosition":144,"lineItems":[]},{"lineText":"        /** [Edit.beginA] and [Edit.endA] denote the line numbers of the _old_ text","filePosition":145,"lineItems":[]},{"lineText":"         * We must use the line numbers of the new text - denoted by [Edit.beginB] and [Edit.endB] to","filePosition":146,"lineItems":[]},{"lineText":"         * highlight the part that was _removed_ from old text","filePosition":147,"lineItems":[]},{"lineText":"         */","filePosition":148,"lineItems":[]},{"lineText":"        highlighLinesWithGutter(editorWithOldText, beginB + offset, lengthA, TextStyles.removedText)","filePosition":149,"lineItems":[]},{"lineText":"    }","filePosition":150,"lineItems":[]},{"lineText":"","filePosition":151,"lineItems":[]},{"lineText":"    private fun highlighLinesWithGutter(editor: dynamic, fromRow: Long, numLines: Long, cssClazz: String) {","filePosition":152,"lineItems":[]},{"lineText":"        highlightLines(editor, fromRow, numLines, cssClazz)","filePosition":153,"lineItems":[]},{"lineText":"        highlightGutter(editor, fromRow, numLines, cssClazz)","filePosition":154,"lineItems":[]},{"lineText":"    }","filePosition":155,"lineItems":[]},{"lineText":"","filePosition":156,"lineItems":[]},{"lineText":"    private fun highlightLines(editor: dynamic, fromRow: Long, numLines: Long, cssClazz: String) {","filePosition":157,"lineItems":[]},{"lineText":"        editor.getSession().highlightLines(fromRow.toDouble(), ( fromRow + numLines - 1 ) .toDouble(), cssClazz)","filePosition":158,"lineItems":[]},{"lineText":"    }","filePosition":159,"lineItems":[]},{"lineText":"","filePosition":160,"lineItems":[]},{"lineText":"    private fun highlightGutter(editor: dynamic ,fromRow: Long, numLines: Long, cssClazz: String) {","filePosition":161,"lineItems":[]},{"lineText":"        (fromRow until (fromRow + numLines)).map { rowNumber ->","filePosition":162,"lineItems":[]},{"lineText":"            editor.getSession().addGutterDecoration(rowNumber.toDouble() , cssClazz)","filePosition":163,"lineItems":[]},{"lineText":"        }","filePosition":164,"lineItems":[]},{"lineText":"    }","filePosition":165,"lineItems":[]},{"lineText":"","filePosition":166,"lineItems":[]},{"lineText":"    private fun insertEmptyLinesAt(editor: dynamic, rowNumber: Long,numLines: Long) {","filePosition":167,"lineItems":[]},{"lineText":"        val emptyLinesArray = generateEmptyLineArray(numLines)","filePosition":168,"lineItems":[]},{"lineText":"        editor.getSession().getDocument().insertFullLines(rowNumber, emptyLinesArray)","filePosition":169,"lineItems":[]},{"lineText":"    }","filePosition":170,"lineItems":[]},{"lineText":"","filePosition":171,"lineItems":[]},{"lineText":"    private fun generateEmptyLineArray(numLines: Long) = Array(numLines.toInt()) { \"\" }","filePosition":172,"lineItems":[]},{"lineText":"","filePosition":173,"lineItems":[]},{"lineText":"}","filePosition":174,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/workflows/codereview/processor/TextDiffProcessor.kt"},"diffChangeType":"RENAME","tShirtSize":"XS","editList":[{"beginA":0,"beginB":0,"endA":1,"endB":1}]},{"oldFile":{"objectId":"eea7021135f1ba1d39b664b2263c73f39d54acef","fileLines":[{"lineText":"package supercr.views","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import Grid","filePosition":2,"lineItems":[]},{"lineText":"import codereview.FileDiff","filePosition":3,"lineItems":[]},{"lineText":"import codereview.FileDiffList","filePosition":4,"lineItems":[]},{"lineText":"import react.RBuilder","filePosition":5,"lineItems":[]},{"lineText":"import react.RComponent","filePosition":6,"lineItems":[]},{"lineText":"import react.RProps","filePosition":7,"lineItems":[]},{"lineText":"import react.RState","filePosition":8,"lineItems":[]},{"lineText":"import react.ReactElement","filePosition":9,"lineItems":[]},{"lineText":"import react.setState","filePosition":10,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":11,"lineItems":[]},{"lineText":"external interface ChangesetScreenProps: RProps {","filePosition":12,"lineItems":[]},{"lineText":"    var fileDiffList: FileDiffList","filePosition":13,"lineItems":[]},{"lineText":"}","filePosition":14,"lineItems":[]},{"lineText":"","filePosition":15,"lineItems":[]},{"lineText":"external interface ChangeSetScreenState: RState {","filePosition":16,"lineItems":[]},{"lineText":"    var selectedFile: FileDiff?","filePosition":17,"lineItems":[]},{"lineText":"}","filePosition":18,"lineItems":[]},{"lineText":"","filePosition":19,"lineItems":[]},{"lineText":"/**","filePosition":20,"lineItems":[]},{"lineText":" * Main Screen to start off reviews with.","filePosition":21,"lineItems":[]},{"lineText":" * Should aim to show","filePosition":22,"lineItems":[]},{"lineText":" * (a) Summary of the PR","filePosition":23,"lineItems":[]},{"lineText":" * (b) Files changed etc","filePosition":24,"lineItems":[]},{"lineText":" * (c) Stats","filePosition":25,"lineItems":[]},{"lineText":" * (d) Comments","filePosition":26,"lineItems":[]},{"lineText":" */","filePosition":27,"lineItems":[]},{"lineText":"class ChangesetScreen : RComponent<ChangesetScreenProps, ChangeSetScreenState>() {","filePosition":28,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":29,"lineItems":[]},{"lineText":"        Grid {","filePosition":30,"lineItems":[]},{"lineText":"            attrs {","filePosition":31,"lineItems":[]},{"lineText":"                container = true","filePosition":32,"lineItems":[]},{"lineText":"                item = false","filePosition":33,"lineItems":[]},{"lineText":"                justify = \"flex-start\"","filePosition":34,"lineItems":[]},{"lineText":"                spacing = 1","filePosition":35,"lineItems":[]},{"lineText":"            }","filePosition":36,"lineItems":[]},{"lineText":"            Grid {","filePosition":37,"lineItems":[]},{"lineText":"                attrs {","filePosition":38,"lineItems":[]},{"lineText":"                    xs = 3","filePosition":39,"lineItems":[]},{"lineText":"                    item = true","filePosition":40,"lineItems":[]},{"lineText":"                    container = false","filePosition":41,"lineItems":[]},{"lineText":"                }","filePosition":42,"lineItems":[]},{"lineText":"                fileList {","filePosition":43,"lineItems":[]},{"lineText":"                    fileList = props.fileDiffList","filePosition":44,"lineItems":[]},{"lineText":"                    onFileSelect = handleFileSelect","filePosition":45,"lineItems":[]},{"lineText":"                }","filePosition":46,"lineItems":[]},{"lineText":"            }","filePosition":47,"lineItems":[]},{"lineText":"            Grid {","filePosition":48,"lineItems":[]},{"lineText":"                attrs {","filePosition":49,"lineItems":[]},{"lineText":"                    xs = 9","filePosition":50,"lineItems":[]},{"lineText":"                    item = true","filePosition":51,"lineItems":[]},{"lineText":"                    container = false","filePosition":52,"lineItems":[]},{"lineText":"                }","filePosition":53,"lineItems":[]},{"lineText":"                if (state.selectedFile != null) {","filePosition":54,"lineItems":[]},{"lineText":"                    fileView {","filePosition":55,"lineItems":[]},{"lineText":"                        fileDiff = props.fileDiffList.fileDiffs.find { it == state.selectedFile }!!","filePosition":56,"lineItems":[]},{"lineText":"                    }","filePosition":57,"lineItems":[]},{"lineText":"                }","filePosition":58,"lineItems":[]},{"lineText":"            }","filePosition":59,"lineItems":[]},{"lineText":"        }","filePosition":60,"lineItems":[]},{"lineText":"    }","filePosition":61,"lineItems":[]},{"lineText":"","filePosition":62,"lineItems":[]},{"lineText":"    private val handleFileSelect: (FileDiff?) -> Unit = { userSelectedFile ->","filePosition":63,"lineItems":[]},{"lineText":"        setState {","filePosition":64,"lineItems":[]},{"lineText":"            selectedFile = userSelectedFile","filePosition":65,"lineItems":[]},{"lineText":"        }","filePosition":66,"lineItems":[]},{"lineText":"    }","filePosition":67,"lineItems":[]},{"lineText":"}","filePosition":68,"lineItems":[]},{"lineText":"","filePosition":69,"lineItems":[]},{"lineText":"fun RBuilder.changeSetScreen(handler: ChangesetScreenProps.() -> Unit): ReactElement {","filePosition":70,"lineItems":[]},{"lineText":"    return child(ChangesetScreen::class) {","filePosition":71,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":72,"lineItems":[]},{"lineText":"    }","filePosition":73,"lineItems":[]},{"lineText":"}","filePosition":74,"lineItems":[]},{"lineText":"","filePosition":75,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/views/ChangesetScreen.kt"},"newFile":{"objectId":"38ca8dea01fb15581e3c7e1871a39513b773edc4","fileLines":[{"lineText":"package supercr.workflows.codereview.screens","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import Grid","filePosition":2,"lineItems":[]},{"lineText":"import codereview.FileDiff","filePosition":3,"lineItems":[]},{"lineText":"import codereview.FileDiffList","filePosition":4,"lineItems":[]},{"lineText":"import react.RBuilder","filePosition":5,"lineItems":[]},{"lineText":"import react.RComponent","filePosition":6,"lineItems":[]},{"lineText":"import react.RProps","filePosition":7,"lineItems":[]},{"lineText":"import react.RState","filePosition":8,"lineItems":[]},{"lineText":"import react.ReactElement","filePosition":9,"lineItems":[]},{"lineText":"import react.setState","filePosition":10,"lineItems":[]},{"lineText":"import supercr.workflows.codereview.components.fileList","filePosition":11,"lineItems":[]},{"lineText":"import supercr.workflows.codereview.components.fileView","filePosition":12,"lineItems":[]},{"lineText":"","filePosition":13,"lineItems":[]},{"lineText":"external interface ChangesetScreenProps: RProps {","filePosition":14,"lineItems":[]},{"lineText":"    var fileDiffList: FileDiffList","filePosition":15,"lineItems":[]},{"lineText":"}","filePosition":16,"lineItems":[]},{"lineText":"","filePosition":17,"lineItems":[]},{"lineText":"external interface ChangeSetScreenState: RState {","filePosition":18,"lineItems":[]},{"lineText":"    var selectedFile: FileDiff?","filePosition":19,"lineItems":[]},{"lineText":"}","filePosition":20,"lineItems":[]},{"lineText":"","filePosition":21,"lineItems":[]},{"lineText":"/**","filePosition":22,"lineItems":[]},{"lineText":" * Main Screen to start off reviews with.","filePosition":23,"lineItems":[]},{"lineText":" * Should aim to show","filePosition":24,"lineItems":[]},{"lineText":" * (a) Summary of the PR","filePosition":25,"lineItems":[]},{"lineText":" * (b) Files changed etc","filePosition":26,"lineItems":[]},{"lineText":" * (c) Stats","filePosition":27,"lineItems":[]},{"lineText":" * (d) Comments","filePosition":28,"lineItems":[]},{"lineText":" */","filePosition":29,"lineItems":[]},{"lineText":"class ChangesetScreen : RComponent<ChangesetScreenProps, ChangeSetScreenState>() {","filePosition":30,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":31,"lineItems":[]},{"lineText":"        Grid {","filePosition":32,"lineItems":[]},{"lineText":"            attrs {","filePosition":33,"lineItems":[]},{"lineText":"                container = true","filePosition":34,"lineItems":[]},{"lineText":"                item = false","filePosition":35,"lineItems":[]},{"lineText":"                justify = \"flex-start\"","filePosition":36,"lineItems":[]},{"lineText":"                spacing = 1","filePosition":37,"lineItems":[]},{"lineText":"            }","filePosition":38,"lineItems":[]},{"lineText":"            Grid {","filePosition":39,"lineItems":[]},{"lineText":"                attrs {","filePosition":40,"lineItems":[]},{"lineText":"                    xs = 3","filePosition":41,"lineItems":[]},{"lineText":"                    item = true","filePosition":42,"lineItems":[]},{"lineText":"                    container = false","filePosition":43,"lineItems":[]},{"lineText":"                }","filePosition":44,"lineItems":[]},{"lineText":"                fileList {","filePosition":45,"lineItems":[]},{"lineText":"                    fileList = props.fileDiffList","filePosition":46,"lineItems":[]},{"lineText":"                    onFileSelect = handleFileSelect","filePosition":47,"lineItems":[]},{"lineText":"                }","filePosition":48,"lineItems":[]},{"lineText":"            }","filePosition":49,"lineItems":[]},{"lineText":"            Grid {","filePosition":50,"lineItems":[]},{"lineText":"                attrs {","filePosition":51,"lineItems":[]},{"lineText":"                    xs = 9","filePosition":52,"lineItems":[]},{"lineText":"                    item = true","filePosition":53,"lineItems":[]},{"lineText":"                    container = false","filePosition":54,"lineItems":[]},{"lineText":"                }","filePosition":55,"lineItems":[]},{"lineText":"                if (state.selectedFile != null) {","filePosition":56,"lineItems":[]},{"lineText":"                    fileView {","filePosition":57,"lineItems":[]},{"lineText":"                        fileDiff = props.fileDiffList.fileDiffs.find { it == state.selectedFile }!!","filePosition":58,"lineItems":[]},{"lineText":"                    }","filePosition":59,"lineItems":[]},{"lineText":"                }","filePosition":60,"lineItems":[]},{"lineText":"            }","filePosition":61,"lineItems":[]},{"lineText":"        }","filePosition":62,"lineItems":[]},{"lineText":"    }","filePosition":63,"lineItems":[]},{"lineText":"","filePosition":64,"lineItems":[]},{"lineText":"    private val handleFileSelect: (FileDiff?) -> Unit = { userSelectedFile ->","filePosition":65,"lineItems":[]},{"lineText":"        setState {","filePosition":66,"lineItems":[]},{"lineText":"            selectedFile = userSelectedFile","filePosition":67,"lineItems":[]},{"lineText":"        }","filePosition":68,"lineItems":[]},{"lineText":"    }","filePosition":69,"lineItems":[]},{"lineText":"}","filePosition":70,"lineItems":[]},{"lineText":"","filePosition":71,"lineItems":[]},{"lineText":"fun RBuilder.changeSetScreen(handler: ChangesetScreenProps.() -> Unit): ReactElement {","filePosition":72,"lineItems":[]},{"lineText":"    return child(ChangesetScreen::class) {","filePosition":73,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":74,"lineItems":[]},{"lineText":"    }","filePosition":75,"lineItems":[]},{"lineText":"}","filePosition":76,"lineItems":[]},{"lineText":"","filePosition":77,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/workflows/codereview/screens/ChangesetScreen.kt"},"diffChangeType":"RENAME","tShirtSize":"S","editList":[{"beginA":0,"beginB":0,"endA":1,"endB":1},{"beginA":11,"beginB":11,"endA":11,"endB":13}]},{"oldFile":{"objectId":"0000000000000000000000000000000000000000","fileLines":[],"path":"/dev/null"},"newFile":{"objectId":"8b5ef182ebcaa10f94617a678059843d220663cd","fileLines":[{"lineText":"package supercr.workflows.gettingstarted.components","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import Button","filePosition":2,"lineItems":[]},{"lineText":"import Grid","filePosition":3,"lineItems":[]},{"lineText":"import Paper","filePosition":4,"lineItems":[]},{"lineText":"import kotlinx.html.InputType","filePosition":5,"lineItems":[]},{"lineText":"import org.w3c.dom.HTMLInputElement","filePosition":6,"lineItems":[]},{"lineText":"import react.RBuilder","filePosition":7,"lineItems":[]},{"lineText":"import react.RComponent","filePosition":8,"lineItems":[]},{"lineText":"import react.RProps","filePosition":9,"lineItems":[]},{"lineText":"import react.RState","filePosition":10,"lineItems":[]},{"lineText":"import react.ReactElement","filePosition":11,"lineItems":[]},{"lineText":"import react.createRef","filePosition":12,"lineItems":[]},{"lineText":"import react.dom.defaultValue","filePosition":13,"lineItems":[]},{"lineText":"import react.dom.input","filePosition":14,"lineItems":[]},{"lineText":"import react.dom.p","filePosition":15,"lineItems":[]},{"lineText":"","filePosition":16,"lineItems":[]},{"lineText":"interface LoginComponentProps: RProps {","filePosition":17,"lineItems":[]},{"lineText":"    var onLoginButtonPressed: (String) -> Unit","filePosition":18,"lineItems":[]},{"lineText":"}","filePosition":19,"lineItems":[]},{"lineText":"","filePosition":20,"lineItems":[]},{"lineText":"class LoginComponent: RComponent<LoginComponentProps, RState>() {","filePosition":21,"lineItems":[]},{"lineText":"    private val personalAccessTokenInputRef = createRef<HTMLInputElement>()","filePosition":22,"lineItems":[]},{"lineText":"","filePosition":23,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":24,"lineItems":[]},{"lineText":"        Grid {","filePosition":25,"lineItems":[]},{"lineText":"            attrs {","filePosition":26,"lineItems":[]},{"lineText":"                item = false","filePosition":27,"lineItems":[]},{"lineText":"                container = true","filePosition":28,"lineItems":[]},{"lineText":"                alignItems = \"center\"","filePosition":29,"lineItems":[]},{"lineText":"                direction = \"row\"","filePosition":30,"lineItems":[]},{"lineText":"                justify = \"center\"","filePosition":31,"lineItems":[]},{"lineText":"                spacing = 4","filePosition":32,"lineItems":[]},{"lineText":"            }","filePosition":33,"lineItems":[]},{"lineText":"        }","filePosition":34,"lineItems":[]},{"lineText":"        Grid {","filePosition":35,"lineItems":[]},{"lineText":"            attrs {","filePosition":36,"lineItems":[]},{"lineText":"                item = true","filePosition":37,"lineItems":[]},{"lineText":"                container = false","filePosition":38,"lineItems":[]},{"lineText":"            }","filePosition":39,"lineItems":[]},{"lineText":"            Paper {","filePosition":40,"lineItems":[]},{"lineText":"                attrs {","filePosition":41,"lineItems":[]},{"lineText":"                    square = true","filePosition":42,"lineItems":[]},{"lineText":"                    elevation = 3","filePosition":43,"lineItems":[]},{"lineText":"                }","filePosition":44,"lineItems":[]},{"lineText":"                Grid {","filePosition":45,"lineItems":[]},{"lineText":"                    attrs {","filePosition":46,"lineItems":[]},{"lineText":"                        item = false","filePosition":47,"lineItems":[]},{"lineText":"                        container = true","filePosition":48,"lineItems":[]},{"lineText":"                        alignItems = \"center\"","filePosition":49,"lineItems":[]},{"lineText":"                        direction = \"row\"","filePosition":50,"lineItems":[]},{"lineText":"                        justify = \"center\"","filePosition":51,"lineItems":[]},{"lineText":"                        spacing = 2","filePosition":52,"lineItems":[]},{"lineText":"                    }","filePosition":53,"lineItems":[]},{"lineText":"                    Grid {","filePosition":54,"lineItems":[]},{"lineText":"                        attrs {","filePosition":55,"lineItems":[]},{"lineText":"                            item = true","filePosition":56,"lineItems":[]},{"lineText":"                            container = false","filePosition":57,"lineItems":[]},{"lineText":"                            xs = 12","filePosition":58,"lineItems":[]},{"lineText":"                        }","filePosition":59,"lineItems":[]},{"lineText":"                        p {","filePosition":60,"lineItems":[]},{"lineText":"                            + \"Welcome to the fastest CR experience. Lets Get Started\"","filePosition":61,"lineItems":[]},{"lineText":"                        }","filePosition":62,"lineItems":[]},{"lineText":"                        input(type = InputType.password) {","filePosition":63,"lineItems":[]},{"lineText":"                            ref = personalAccessTokenInputRef","filePosition":64,"lineItems":[]},{"lineText":"                            attrs.placeholder = \"Enter your github personal access token\"","filePosition":65,"lineItems":[]},{"lineText":"                            attrs.defaultValue = \"4da05160ff8311a45f31fe8fd6ab374b8a6f9fe9\"","filePosition":66,"lineItems":[]},{"lineText":"                        }","filePosition":67,"lineItems":[]},{"lineText":"                    }","filePosition":68,"lineItems":[]},{"lineText":"                    Grid {","filePosition":69,"lineItems":[]},{"lineText":"                        attrs {","filePosition":70,"lineItems":[]},{"lineText":"                            item = true","filePosition":71,"lineItems":[]},{"lineText":"                            container = false","filePosition":72,"lineItems":[]},{"lineText":"                            xs = 4","filePosition":73,"lineItems":[]},{"lineText":"                        }","filePosition":74,"lineItems":[]},{"lineText":"                    }","filePosition":75,"lineItems":[]},{"lineText":"                    Grid {","filePosition":76,"lineItems":[]},{"lineText":"                        attrs {","filePosition":77,"lineItems":[]},{"lineText":"                            item = true","filePosition":78,"lineItems":[]},{"lineText":"                            container = false","filePosition":79,"lineItems":[]},{"lineText":"                            xs = 4","filePosition":80,"lineItems":[]},{"lineText":"                        }","filePosition":81,"lineItems":[]},{"lineText":"                        Button {","filePosition":82,"lineItems":[]},{"lineText":"                            attrs {","filePosition":83,"lineItems":[]},{"lineText":"                                variant = \"contained\"","filePosition":84,"lineItems":[]},{"lineText":"                                color = \"primary\"","filePosition":85,"lineItems":[]},{"lineText":"                                onClick= {","filePosition":86,"lineItems":[]},{"lineText":"                                    props.onLoginButtonPressed(personalAccessTokenInputRef.current!!.value)","filePosition":87,"lineItems":[]},{"lineText":"                                }","filePosition":88,"lineItems":[]},{"lineText":"                            }","filePosition":89,"lineItems":[]},{"lineText":"                            + \"Login\"","filePosition":90,"lineItems":[]},{"lineText":"                        }","filePosition":91,"lineItems":[]},{"lineText":"                    }","filePosition":92,"lineItems":[]},{"lineText":"                    Grid {","filePosition":93,"lineItems":[]},{"lineText":"                        attrs {","filePosition":94,"lineItems":[]},{"lineText":"                            item = true","filePosition":95,"lineItems":[]},{"lineText":"                            container = false","filePosition":96,"lineItems":[]},{"lineText":"                            xs = 4","filePosition":97,"lineItems":[]},{"lineText":"                        }","filePosition":98,"lineItems":[]},{"lineText":"                    }","filePosition":99,"lineItems":[]},{"lineText":"                }","filePosition":100,"lineItems":[]},{"lineText":"            }","filePosition":101,"lineItems":[]},{"lineText":"        }","filePosition":102,"lineItems":[]},{"lineText":"    }","filePosition":103,"lineItems":[]},{"lineText":"}","filePosition":104,"lineItems":[]},{"lineText":"fun RBuilder.loginComponent(handler: LoginComponentProps.() -> Unit): ReactElement {","filePosition":105,"lineItems":[]},{"lineText":"    return child(LoginComponent::class) {","filePosition":106,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":107,"lineItems":[]},{"lineText":"    }","filePosition":108,"lineItems":[]},{"lineText":"}","filePosition":109,"lineItems":[]},{"lineText":"","filePosition":110,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/workflows/gettingstarted/components/LoginComponent.kt"},"diffChangeType":"ADD","tShirtSize":"L","editList":[{"beginA":0,"beginB":0,"endA":0,"endB":110}]},{"oldFile":{"objectId":"0000000000000000000000000000000000000000","fileLines":[],"path":"/dev/null"},"newFile":{"objectId":"770aa132f0a5998455cf59ec0ee0636b10db638d","fileLines":[{"lineText":"package supercr.workflows.gettingstarted.components","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import ListItem","filePosition":2,"lineItems":[]},{"lineText":"import codereview.Project","filePosition":3,"lineItems":[]},{"lineText":"import codereview.SuperCrClient","filePosition":4,"lineItems":[]},{"lineText":"import git.provider.RepoSummary","filePosition":5,"lineItems":[]},{"lineText":"import kotlinx.coroutines.Dispatchers","filePosition":6,"lineItems":[]},{"lineText":"import kotlinx.coroutines.GlobalScope","filePosition":7,"lineItems":[]},{"lineText":"import kotlinx.coroutines.async","filePosition":8,"lineItems":[]},{"lineText":"import kotlinx.css.Display","filePosition":9,"lineItems":[]},{"lineText":"import kotlinx.css.display","filePosition":10,"lineItems":[]},{"lineText":"import kotlinx.html.js.onChangeFunction","filePosition":11,"lineItems":[]},{"lineText":"import org.w3c.dom.HTMLInputElement","filePosition":12,"lineItems":[]},{"lineText":"import react.RBuilder","filePosition":13,"lineItems":[]},{"lineText":"import react.RComponent","filePosition":14,"lineItems":[]},{"lineText":"import react.RProps","filePosition":15,"lineItems":[]},{"lineText":"import react.RState","filePosition":16,"lineItems":[]},{"lineText":"import react.ReactElement","filePosition":17,"lineItems":[]},{"lineText":"import react.createRef","filePosition":18,"lineItems":[]},{"lineText":"import react.dom.p","filePosition":19,"lineItems":[]},{"lineText":"import react.setState","filePosition":20,"lineItems":[]},{"lineText":"import styled.css","filePosition":21,"lineItems":[]},{"lineText":"import styled.styledInput","filePosition":22,"lineItems":[]},{"lineText":"","filePosition":23,"lineItems":[]},{"lineText":"external interface RepoComponentProps: RProps {","filePosition":24,"lineItems":[]},{"lineText":"    var superCrClient: SuperCrClient","filePosition":25,"lineItems":[]},{"lineText":"    var repoSummary: RepoSummary","filePosition":26,"lineItems":[]},{"lineText":"    var onSetupComplete: (Project) -> Boolean","filePosition":27,"lineItems":[]},{"lineText":"}","filePosition":28,"lineItems":[]},{"lineText":"","filePosition":29,"lineItems":[]},{"lineText":"external interface RepoComponentState: RState {","filePosition":30,"lineItems":[]},{"lineText":"    var isProcessed: Boolean","filePosition":31,"lineItems":[]},{"lineText":"}","filePosition":32,"lineItems":[]},{"lineText":"","filePosition":33,"lineItems":[]},{"lineText":"class RepoComponent: RComponent<RepoComponentProps, RepoComponentState>() {","filePosition":34,"lineItems":[]},{"lineText":"    private val inputFileRef = createRef<HTMLInputElement>()","filePosition":35,"lineItems":[]},{"lineText":"","filePosition":36,"lineItems":[]},{"lineText":"    private val handleSelection: () -> Unit = {","filePosition":37,"lineItems":[]},{"lineText":"//        inputFileRef.current!!.click() TODO See below. Below if condition is just a hack to select the 'right folder'","filePosition":38,"lineItems":[]},{"lineText":"        val project = if (props.repoSummary.full_name == \"theboringtech/btcmain\") {","filePosition":39,"lineItems":[]},{"lineText":"            Project(localPath = \"/home/yogesh/work/btc\", providerPath = props.repoSummary.full_name, name = props.repoSummary.name)","filePosition":40,"lineItems":[]},{"lineText":"        } else {","filePosition":41,"lineItems":[]},{"lineText":"            Project(localPath = \"/home/yogesh/work/theboringtech.github.io\", providerPath = props.repoSummary.full_name, name = props.repoSummary.name)","filePosition":42,"lineItems":[]},{"lineText":"        }","filePosition":43,"lineItems":[]},{"lineText":"        GlobalScope.async(context = Dispatchers.Main) {","filePosition":44,"lineItems":[]},{"lineText":"            props.superCrClient.addProject(project)","filePosition":45,"lineItems":[]},{"lineText":"                .let { successfullyProcessed ->","filePosition":46,"lineItems":[]},{"lineText":"                    setState {","filePosition":47,"lineItems":[]},{"lineText":"                        isProcessed = successfullyProcessed","filePosition":48,"lineItems":[]},{"lineText":"                    }","filePosition":49,"lineItems":[]},{"lineText":"                    if (successfullyProcessed) {","filePosition":50,"lineItems":[]},{"lineText":"                        props.onSetupComplete(project)","filePosition":51,"lineItems":[]},{"lineText":"                    }","filePosition":52,"lineItems":[]},{"lineText":"                }","filePosition":53,"lineItems":[]},{"lineText":"        }.invokeOnCompletion { cause: Throwable? ->","filePosition":54,"lineItems":[]},{"lineText":"            if (cause != null) {","filePosition":55,"lineItems":[]},{"lineText":"                console.error(\"Something bad happened\")","filePosition":56,"lineItems":[]},{"lineText":"                console.error(cause)","filePosition":57,"lineItems":[]},{"lineText":"            }","filePosition":58,"lineItems":[]},{"lineText":"        }","filePosition":59,"lineItems":[]},{"lineText":"    }","filePosition":60,"lineItems":[]},{"lineText":"","filePosition":61,"lineItems":[]},{"lineText":"    override fun RepoComponentState.init() {","filePosition":62,"lineItems":[]},{"lineText":"        isProcessed = false","filePosition":63,"lineItems":[]},{"lineText":"    }","filePosition":64,"lineItems":[]},{"lineText":"","filePosition":65,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":66,"lineItems":[]},{"lineText":"        ListItem {","filePosition":67,"lineItems":[]},{"lineText":"            attrs {","filePosition":68,"lineItems":[]},{"lineText":"                button = true","filePosition":69,"lineItems":[]},{"lineText":"                alignItems = \"center\"","filePosition":70,"lineItems":[]},{"lineText":"                divider = true","filePosition":71,"lineItems":[]},{"lineText":"                onClick = handleSelection","filePosition":72,"lineItems":[]},{"lineText":"                disabled = state.isProcessed","filePosition":73,"lineItems":[]},{"lineText":"            }","filePosition":74,"lineItems":[]},{"lineText":"            p {","filePosition":75,"lineItems":[]},{"lineText":"                +props.repoSummary.full_name","filePosition":76,"lineItems":[]},{"lineText":"            }","filePosition":77,"lineItems":[]},{"lineText":"            /** TODO: Make this work once we switch to electron or Kvision. Right now it just sits there - never used */","filePosition":78,"lineItems":[]},{"lineText":"            styledInput {","filePosition":79,"lineItems":[]},{"lineText":"                css {","filePosition":80,"lineItems":[]},{"lineText":"                    display = Display.none","filePosition":81,"lineItems":[]},{"lineText":"                }","filePosition":82,"lineItems":[]},{"lineText":"                attrs {","filePosition":83,"lineItems":[]},{"lineText":"                    ref = inputFileRef","filePosition":84,"lineItems":[]},{"lineText":"                }","filePosition":85,"lineItems":[]},{"lineText":"                attrs.onChangeFunction = { event ->","filePosition":86,"lineItems":[]},{"lineText":"                    console.log(\"Got the value as ${inputFileRef.current?.files}\")","filePosition":87,"lineItems":[]},{"lineText":"                }","filePosition":88,"lineItems":[]},{"lineText":"            }","filePosition":89,"lineItems":[]},{"lineText":"        }","filePosition":90,"lineItems":[]},{"lineText":"    }","filePosition":91,"lineItems":[]},{"lineText":"","filePosition":92,"lineItems":[]},{"lineText":"}","filePosition":93,"lineItems":[]},{"lineText":"","filePosition":94,"lineItems":[]},{"lineText":"internal fun RBuilder.repoComponent(handler: RepoComponentProps.() -> Unit): ReactElement {","filePosition":95,"lineItems":[]},{"lineText":"    return child(RepoComponent::class) {","filePosition":96,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":97,"lineItems":[]},{"lineText":"    }","filePosition":98,"lineItems":[]},{"lineText":"}","filePosition":99,"lineItems":[]},{"lineText":"","filePosition":100,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/workflows/gettingstarted/components/RepoComponent.kt"},"diffChangeType":"ADD","tShirtSize":"L","editList":[{"beginA":0,"beginB":0,"endA":0,"endB":100}]},{"oldFile":{"objectId":"0000000000000000000000000000000000000000","fileLines":[],"path":"/dev/null"},"newFile":{"objectId":"f67a16a42af4f988a8f5e93b1194d7fbbab3ab9d","fileLines":[{"lineText":"package supercr.workflows.gettingstarted.components","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import Button","filePosition":2,"lineItems":[]},{"lineText":"import MaterialUIList","filePosition":3,"lineItems":[]},{"lineText":"import codereview.Project","filePosition":4,"lineItems":[]},{"lineText":"import codereview.SuperCrClient","filePosition":5,"lineItems":[]},{"lineText":"import git.provider.GithubClient","filePosition":6,"lineItems":[]},{"lineText":"import git.provider.RepoSummary","filePosition":7,"lineItems":[]},{"lineText":"import kotlinx.coroutines.GlobalScope","filePosition":8,"lineItems":[]},{"lineText":"import kotlinx.coroutines.async","filePosition":9,"lineItems":[]},{"lineText":"import react.RBuilder","filePosition":10,"lineItems":[]},{"lineText":"import react.RComponent","filePosition":11,"lineItems":[]},{"lineText":"import react.RProps","filePosition":12,"lineItems":[]},{"lineText":"import react.RState","filePosition":13,"lineItems":[]},{"lineText":"import react.ReactElement","filePosition":14,"lineItems":[]},{"lineText":"import react.setState","filePosition":15,"lineItems":[]},{"lineText":"","filePosition":16,"lineItems":[]},{"lineText":"interface RepoInitProps: RProps {","filePosition":17,"lineItems":[]},{"lineText":"    var githubClient: GithubClient","filePosition":18,"lineItems":[]},{"lineText":"    var superCrClient: SuperCrClient","filePosition":19,"lineItems":[]},{"lineText":"    var passProjectInfo: (List<Project>) -> Unit","filePosition":20,"lineItems":[]},{"lineText":"}","filePosition":21,"lineItems":[]},{"lineText":"","filePosition":22,"lineItems":[]},{"lineText":"interface RepoInitState: RState {","filePosition":23,"lineItems":[]},{"lineText":"    var repoList: List<RepoSummary>","filePosition":24,"lineItems":[]},{"lineText":"    var showNextButton: Boolean","filePosition":25,"lineItems":[]},{"lineText":"    var selectedProjects: List<Project>","filePosition":26,"lineItems":[]},{"lineText":"}","filePosition":27,"lineItems":[]},{"lineText":"","filePosition":28,"lineItems":[]},{"lineText":"class RepoInitComponent: RComponent<RepoInitProps, RepoInitState>() {","filePosition":29,"lineItems":[]},{"lineText":"    override fun RepoInitState.init() {","filePosition":30,"lineItems":[]},{"lineText":"        repoList = emptyList()","filePosition":31,"lineItems":[]},{"lineText":"        showNextButton = false","filePosition":32,"lineItems":[]},{"lineText":"        selectedProjects = emptyList()","filePosition":33,"lineItems":[]},{"lineText":"    }","filePosition":34,"lineItems":[]},{"lineText":"","filePosition":35,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":36,"lineItems":[]},{"lineText":"        MaterialUIList {","filePosition":37,"lineItems":[]},{"lineText":"            state.repoList.map {","filePosition":38,"lineItems":[]},{"lineText":"                repoComponent {","filePosition":39,"lineItems":[]},{"lineText":"                    repoSummary = it","filePosition":40,"lineItems":[]},{"lineText":"                    onSetupComplete = handleProjectSetup","filePosition":41,"lineItems":[]},{"lineText":"                    superCrClient = props.superCrClient","filePosition":42,"lineItems":[]},{"lineText":"                }","filePosition":43,"lineItems":[]},{"lineText":"            }","filePosition":44,"lineItems":[]},{"lineText":"        }","filePosition":45,"lineItems":[]},{"lineText":"        if (state.showNextButton) {","filePosition":46,"lineItems":[]},{"lineText":"            Button {","filePosition":47,"lineItems":[]},{"lineText":"                attrs {","filePosition":48,"lineItems":[]},{"lineText":"                    variant = \"contained\"","filePosition":49,"lineItems":[]},{"lineText":"                    color = \"primary\"","filePosition":50,"lineItems":[]},{"lineText":"                    onClick= handleDone","filePosition":51,"lineItems":[]},{"lineText":"                }","filePosition":52,"lineItems":[]},{"lineText":"                + \"Done\"","filePosition":53,"lineItems":[]},{"lineText":"            }","filePosition":54,"lineItems":[]},{"lineText":"        }","filePosition":55,"lineItems":[]},{"lineText":"    }","filePosition":56,"lineItems":[]},{"lineText":"","filePosition":57,"lineItems":[]},{"lineText":"    override fun componentDidMount() {","filePosition":58,"lineItems":[]},{"lineText":"        fetchRepos()","filePosition":59,"lineItems":[]},{"lineText":"    }","filePosition":60,"lineItems":[]},{"lineText":"","filePosition":61,"lineItems":[]},{"lineText":"    private val handleDone: () -> Unit = {","filePosition":62,"lineItems":[]},{"lineText":"        props.passProjectInfo(state.selectedProjects)","filePosition":63,"lineItems":[]},{"lineText":"    }","filePosition":64,"lineItems":[]},{"lineText":"","filePosition":65,"lineItems":[]},{"lineText":"    /**","filePosition":66,"lineItems":[]},{"lineText":"     * TODO: Add some validations to check if the repo being selected is correct or no","filePosition":67,"lineItems":[]},{"lineText":"     *  ** Selected Path should be a git repo","filePosition":68,"lineItems":[]},{"lineText":"     *  ** Selected Path must point to the same origin (getOriginURL().contains(repoName))","filePosition":69,"lineItems":[]},{"lineText":"     */","filePosition":70,"lineItems":[]},{"lineText":"    private val handleProjectSetup: (Project) -> Boolean = { givenProject ->","filePosition":71,"lineItems":[]},{"lineText":"        setState {","filePosition":72,"lineItems":[]},{"lineText":"            showNextButton = true","filePosition":73,"lineItems":[]},{"lineText":"            selectedProjects += givenProject","filePosition":74,"lineItems":[]},{"lineText":"        }","filePosition":75,"lineItems":[]},{"lineText":"        true","filePosition":76,"lineItems":[]},{"lineText":"    }","filePosition":77,"lineItems":[]},{"lineText":"","filePosition":78,"lineItems":[]},{"lineText":"    private fun fetchRepos() {","filePosition":79,"lineItems":[]},{"lineText":"        GlobalScope.async {","filePosition":80,"lineItems":[]},{"lineText":"            props.githubClient.getReposSummary(\"theboringtech\")","filePosition":81,"lineItems":[]},{"lineText":"                .let {","filePosition":82,"lineItems":[]},{"lineText":"                    setState {","filePosition":83,"lineItems":[]},{"lineText":"                        repoList = it","filePosition":84,"lineItems":[]},{"lineText":"                    }","filePosition":85,"lineItems":[]},{"lineText":"                }","filePosition":86,"lineItems":[]},{"lineText":"        }.invokeOnCompletion { throwable ->","filePosition":87,"lineItems":[]},{"lineText":"            if (throwable != null) {","filePosition":88,"lineItems":[]},{"lineText":"                console.error(\"Something bad happened\")","filePosition":89,"lineItems":[]},{"lineText":"                console.error(throwable)","filePosition":90,"lineItems":[]},{"lineText":"            }","filePosition":91,"lineItems":[]},{"lineText":"        }","filePosition":92,"lineItems":[]},{"lineText":"    }","filePosition":93,"lineItems":[]},{"lineText":"}","filePosition":94,"lineItems":[]},{"lineText":"","filePosition":95,"lineItems":[]},{"lineText":"fun RBuilder.repoInit(handler: RepoInitProps.() -> Unit): ReactElement {","filePosition":96,"lineItems":[]},{"lineText":"    return child(RepoInitComponent::class) {","filePosition":97,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":98,"lineItems":[]},{"lineText":"    }","filePosition":99,"lineItems":[]},{"lineText":"}","filePosition":100,"lineItems":[]},{"lineText":"","filePosition":101,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/workflows/gettingstarted/components/RepoInitialiser.kt"},"diffChangeType":"ADD","tShirtSize":"L","editList":[{"beginA":0,"beginB":0,"endA":0,"endB":101}]},{"oldFile":{"objectId":"0000000000000000000000000000000000000000","fileLines":[],"path":"/dev/null"},"newFile":{"objectId":"8e8f029fa4c4e9b60f0924fd6a9bd67508f028d5","fileLines":[{"lineText":"package supercr.workflows.gettingstarted.screens","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import auth.DumbOauthClient","filePosition":2,"lineItems":[]},{"lineText":"import codereview.Project","filePosition":3,"lineItems":[]},{"lineText":"import codereview.SuperCrClient","filePosition":4,"lineItems":[]},{"lineText":"import git.provider.GithubClient","filePosition":5,"lineItems":[]},{"lineText":"import io.ktor.client.HttpClient","filePosition":6,"lineItems":[]},{"lineText":"import io.ktor.client.features.json.JsonFeature","filePosition":7,"lineItems":[]},{"lineText":"import io.ktor.client.features.json.serializer.KotlinxSerializer","filePosition":8,"lineItems":[]},{"lineText":"import kotlinx.serialization.json.Json","filePosition":9,"lineItems":[]},{"lineText":"import kotlinx.serialization.json.JsonConfiguration","filePosition":10,"lineItems":[]},{"lineText":"import react.RBuilder","filePosition":11,"lineItems":[]},{"lineText":"import react.RComponent","filePosition":12,"lineItems":[]},{"lineText":"import react.RProps","filePosition":13,"lineItems":[]},{"lineText":"import react.RState","filePosition":14,"lineItems":[]},{"lineText":"import react.ReactElement","filePosition":15,"lineItems":[]},{"lineText":"import react.setState","filePosition":16,"lineItems":[]},{"lineText":"import supercr.workflows.gettingstarted.components.loginComponent","filePosition":17,"lineItems":[]},{"lineText":"import supercr.workflows.gettingstarted.components.repoInit","filePosition":18,"lineItems":[]},{"lineText":"","filePosition":19,"lineItems":[]},{"lineText":"external interface GettingStartedScreenProps: RProps {","filePosition":20,"lineItems":[]},{"lineText":"    var passAccessToken: (String) -> Unit","filePosition":21,"lineItems":[]},{"lineText":"    var passProjects: (List<Project>) -> Unit","filePosition":22,"lineItems":[]},{"lineText":"    var superCrClient: SuperCrClient","filePosition":23,"lineItems":[]},{"lineText":"}","filePosition":24,"lineItems":[]},{"lineText":"","filePosition":25,"lineItems":[]},{"lineText":"external interface GettingStartedScreenState: RState {","filePosition":26,"lineItems":[]},{"lineText":"    var isLoggedIn: Boolean","filePosition":27,"lineItems":[]},{"lineText":"    var accessToken: String","filePosition":28,"lineItems":[]},{"lineText":"    var githubClient: GithubClient","filePosition":29,"lineItems":[]},{"lineText":"}","filePosition":30,"lineItems":[]},{"lineText":"","filePosition":31,"lineItems":[]},{"lineText":"/**","filePosition":32,"lineItems":[]},{"lineText":" * For first time users. 2 functionalities","filePosition":33,"lineItems":[]},{"lineText":" * (a) Login to specific provider","filePosition":34,"lineItems":[]},{"lineText":" * (b) Setup at least 1 [Project] (map provider path to local path)","filePosition":35,"lineItems":[]},{"lineText":" */","filePosition":36,"lineItems":[]},{"lineText":"class GetStartedScreen: RComponent<GettingStartedScreenProps, GettingStartedScreenState>() {","filePosition":37,"lineItems":[]},{"lineText":"","filePosition":38,"lineItems":[]},{"lineText":"    override fun GettingStartedScreenState.init() {","filePosition":39,"lineItems":[]},{"lineText":"        isLoggedIn = false","filePosition":40,"lineItems":[]},{"lineText":"        accessToken = \"\"","filePosition":41,"lineItems":[]},{"lineText":"    }","filePosition":42,"lineItems":[]},{"lineText":"","filePosition":43,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":44,"lineItems":[]},{"lineText":"        if (!state.isLoggedIn) {","filePosition":45,"lineItems":[]},{"lineText":"            loginComponent {","filePosition":46,"lineItems":[]},{"lineText":"                onLoginButtonPressed = handleLogin","filePosition":47,"lineItems":[]},{"lineText":"            }","filePosition":48,"lineItems":[]},{"lineText":"        } else {","filePosition":49,"lineItems":[]},{"lineText":"            repoInit {","filePosition":50,"lineItems":[]},{"lineText":"                githubClient = state.githubClient","filePosition":51,"lineItems":[]},{"lineText":"                passProjectInfo = props.passProjects","filePosition":52,"lineItems":[]},{"lineText":"                superCrClient = props.superCrClient","filePosition":53,"lineItems":[]},{"lineText":"            }","filePosition":54,"lineItems":[]},{"lineText":"        }","filePosition":55,"lineItems":[]},{"lineText":"    }","filePosition":56,"lineItems":[]},{"lineText":"","filePosition":57,"lineItems":[]},{"lineText":"    private val handleLogin: (String) -> Unit = { enteredAccessToken ->","filePosition":58,"lineItems":[]},{"lineText":"        val newGithubClient = GithubClient(","filePosition":59,"lineItems":[]},{"lineText":"            oauthClient = DumbOauthClient(enteredAccessToken),","filePosition":60,"lineItems":[]},{"lineText":"            httpClient = HttpClient() {","filePosition":61,"lineItems":[]},{"lineText":"                install(JsonFeature) {","filePosition":62,"lineItems":[]},{"lineText":"                    serializer = KotlinxSerializer(json = Json(JsonConfiguration.Stable.copy(ignoreUnknownKeys = true)))","filePosition":63,"lineItems":[]},{"lineText":"                }","filePosition":64,"lineItems":[]},{"lineText":"            }","filePosition":65,"lineItems":[]},{"lineText":"        )","filePosition":66,"lineItems":[]},{"lineText":"        props.passAccessToken(enteredAccessToken)","filePosition":67,"lineItems":[]},{"lineText":"        setState {","filePosition":68,"lineItems":[]},{"lineText":"            isLoggedIn = true","filePosition":69,"lineItems":[]},{"lineText":"            accessToken = enteredAccessToken","filePosition":70,"lineItems":[]},{"lineText":"            githubClient = newGithubClient","filePosition":71,"lineItems":[]},{"lineText":"        }","filePosition":72,"lineItems":[]},{"lineText":"    }","filePosition":73,"lineItems":[]},{"lineText":"","filePosition":74,"lineItems":[]},{"lineText":"}","filePosition":75,"lineItems":[]},{"lineText":"","filePosition":76,"lineItems":[]},{"lineText":"fun RBuilder.getStartedScreen(handler: GettingStartedScreenProps.() -> Unit): ReactElement {","filePosition":77,"lineItems":[]},{"lineText":"    return child(GetStartedScreen::class) {","filePosition":78,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":79,"lineItems":[]},{"lineText":"    }","filePosition":80,"lineItems":[]},{"lineText":"}","filePosition":81,"lineItems":[]},{"lineText":"","filePosition":82,"lineItems":[]},{"lineText":"","filePosition":83,"lineItems":[]},{"lineText":"","filePosition":84,"lineItems":[]},{"lineText":"","filePosition":85,"lineItems":[]},{"lineText":"","filePosition":86,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/workflows/gettingstarted/screens/GetStartedScreen.kt"},"diffChangeType":"ADD","tShirtSize":"M","editList":[{"beginA":0,"beginB":0,"endA":0,"endB":86}]},{"oldFile":{"objectId":"0000000000000000000000000000000000000000","fileLines":[],"path":"/dev/null"},"newFile":{"objectId":"dd31620316d830341a7a5f0a81d3d98471809ac1","fileLines":[{"lineText":"package supercr.workflows.overview.components","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import codereview.Project","filePosition":2,"lineItems":[]},{"lineText":"import react.RBuilder","filePosition":3,"lineItems":[]},{"lineText":"import react.RComponent","filePosition":4,"lineItems":[]},{"lineText":"import react.RProps","filePosition":5,"lineItems":[]},{"lineText":"import react.RState","filePosition":6,"lineItems":[]},{"lineText":"import react.ReactElement","filePosition":7,"lineItems":[]},{"lineText":"import react.dom.span","filePosition":8,"lineItems":[]},{"lineText":"","filePosition":9,"lineItems":[]},{"lineText":"external interface ProjectComponentProps: RProps {","filePosition":10,"lineItems":[]},{"lineText":"    var project: Project","filePosition":11,"lineItems":[]},{"lineText":"}","filePosition":12,"lineItems":[]},{"lineText":"","filePosition":13,"lineItems":[]},{"lineText":"class ProjectComponent: RComponent<ProjectComponentProps, RState>() {","filePosition":14,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":15,"lineItems":[]},{"lineText":"        span {","filePosition":16,"lineItems":[]},{"lineText":"            + props.project.name","filePosition":17,"lineItems":[]},{"lineText":"        }","filePosition":18,"lineItems":[]},{"lineText":"    }","filePosition":19,"lineItems":[]},{"lineText":"","filePosition":20,"lineItems":[]},{"lineText":"}","filePosition":21,"lineItems":[]},{"lineText":"","filePosition":22,"lineItems":[]},{"lineText":"fun RBuilder.projectComponent(handler: ProjectComponentProps.() -> Unit): ReactElement {","filePosition":23,"lineItems":[]},{"lineText":"    return child(ProjectComponent::class) {","filePosition":24,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":25,"lineItems":[]},{"lineText":"    }","filePosition":26,"lineItems":[]},{"lineText":"}","filePosition":27,"lineItems":[]},{"lineText":"","filePosition":28,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/workflows/overview/components/ProjectComponent.kt"},"diffChangeType":"ADD","tShirtSize":"S","editList":[{"beginA":0,"beginB":0,"endA":0,"endB":28}]},{"oldFile":{"objectId":"0000000000000000000000000000000000000000","fileLines":[],"path":"/dev/null"},"newFile":{"objectId":"48a5ec0acd8df33324080dbd1fafe5d608507a24","fileLines":[{"lineText":"package supercr.workflows.overview.components","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import Button","filePosition":2,"lineItems":[]},{"lineText":"import Grid","filePosition":3,"lineItems":[]},{"lineText":"import ListItem","filePosition":4,"lineItems":[]},{"lineText":"import ListSubHeader","filePosition":5,"lineItems":[]},{"lineText":"import MaterialUIList","filePosition":6,"lineItems":[]},{"lineText":"import codereview.Project","filePosition":7,"lineItems":[]},{"lineText":"import react.RBuilder","filePosition":8,"lineItems":[]},{"lineText":"import react.RComponent","filePosition":9,"lineItems":[]},{"lineText":"import react.RProps","filePosition":10,"lineItems":[]},{"lineText":"import react.RState","filePosition":11,"lineItems":[]},{"lineText":"import react.ReactElement","filePosition":12,"lineItems":[]},{"lineText":"","filePosition":13,"lineItems":[]},{"lineText":"external interface ProjectListProps: RProps {","filePosition":14,"lineItems":[]},{"lineText":"    var projects: List<Project>","filePosition":15,"lineItems":[]},{"lineText":"}","filePosition":16,"lineItems":[]},{"lineText":"","filePosition":17,"lineItems":[]},{"lineText":"class ProjectList: RComponent<ProjectListProps, RState>() {","filePosition":18,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":19,"lineItems":[]},{"lineText":"        Grid {","filePosition":20,"lineItems":[]},{"lineText":"            attrs {","filePosition":21,"lineItems":[]},{"lineText":"                container = true","filePosition":22,"lineItems":[]},{"lineText":"                item = false","filePosition":23,"lineItems":[]},{"lineText":"                spacing = 2","filePosition":24,"lineItems":[]},{"lineText":"            }","filePosition":25,"lineItems":[]},{"lineText":"            Grid {","filePosition":26,"lineItems":[]},{"lineText":"                attrs {","filePosition":27,"lineItems":[]},{"lineText":"                    container = false","filePosition":28,"lineItems":[]},{"lineText":"                    item = true","filePosition":29,"lineItems":[]},{"lineText":"                    xs = 12","filePosition":30,"lineItems":[]},{"lineText":"                }","filePosition":31,"lineItems":[]},{"lineText":"                renderProjectList()","filePosition":32,"lineItems":[]},{"lineText":"            }","filePosition":33,"lineItems":[]},{"lineText":"            Grid {","filePosition":34,"lineItems":[]},{"lineText":"                attrs {","filePosition":35,"lineItems":[]},{"lineText":"                    container = false","filePosition":36,"lineItems":[]},{"lineText":"                    item = true","filePosition":37,"lineItems":[]},{"lineText":"                    xs = 12","filePosition":38,"lineItems":[]},{"lineText":"                }","filePosition":39,"lineItems":[]},{"lineText":"                Button {","filePosition":40,"lineItems":[]},{"lineText":"                    attrs {","filePosition":41,"lineItems":[]},{"lineText":"                        variant = \"contained\"","filePosition":42,"lineItems":[]},{"lineText":"                        color = \"primary\"","filePosition":43,"lineItems":[]},{"lineText":"                    }","filePosition":44,"lineItems":[]},{"lineText":"                    + \"Add More\"","filePosition":45,"lineItems":[]},{"lineText":"                }","filePosition":46,"lineItems":[]},{"lineText":"            }","filePosition":47,"lineItems":[]},{"lineText":"        }","filePosition":48,"lineItems":[]},{"lineText":"    }","filePosition":49,"lineItems":[]},{"lineText":"","filePosition":50,"lineItems":[]},{"lineText":"    private fun RBuilder.renderProjectList(): ReactElement{","filePosition":51,"lineItems":[]},{"lineText":"        return MaterialUIList {","filePosition":52,"lineItems":[]},{"lineText":"            ListSubHeader {","filePosition":53,"lineItems":[]},{"lineText":"                + \"Projects\"","filePosition":54,"lineItems":[]},{"lineText":"            }","filePosition":55,"lineItems":[]},{"lineText":"            props.projects.mapIndexed { index, currentProject ->","filePosition":56,"lineItems":[]},{"lineText":"                ListItem {","filePosition":57,"lineItems":[]},{"lineText":"                    attrs {","filePosition":58,"lineItems":[]},{"lineText":"                        button = false","filePosition":59,"lineItems":[]},{"lineText":"                        divider = true","filePosition":60,"lineItems":[]},{"lineText":"                    }","filePosition":61,"lineItems":[]},{"lineText":"                    projectComponent {","filePosition":62,"lineItems":[]},{"lineText":"                        project = currentProject","filePosition":63,"lineItems":[]},{"lineText":"                    }","filePosition":64,"lineItems":[]},{"lineText":"                }","filePosition":65,"lineItems":[]},{"lineText":"            }","filePosition":66,"lineItems":[]},{"lineText":"        }","filePosition":67,"lineItems":[]},{"lineText":"    }","filePosition":68,"lineItems":[]},{"lineText":"}","filePosition":69,"lineItems":[]},{"lineText":"","filePosition":70,"lineItems":[]},{"lineText":"fun RBuilder.projectList(handler: ProjectListProps.() -> Unit): ReactElement {","filePosition":71,"lineItems":[]},{"lineText":"    return child(ProjectList::class) {","filePosition":72,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":73,"lineItems":[]},{"lineText":"    }","filePosition":74,"lineItems":[]},{"lineText":"}","filePosition":75,"lineItems":[]},{"lineText":"","filePosition":76,"lineItems":[]},{"lineText":"","filePosition":77,"lineItems":[]},{"lineText":"","filePosition":78,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/workflows/overview/components/ProjectList.kt"},"diffChangeType":"ADD","tShirtSize":"M","editList":[{"beginA":0,"beginB":0,"endA":0,"endB":78}]},{"oldFile":{"objectId":"0000000000000000000000000000000000000000","fileLines":[],"path":"/dev/null"},"newFile":{"objectId":"62edbd8d0e0718cea4e64fc07d414f0b4803d11c","fileLines":[{"lineText":"package supercr.workflows.overview.components","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import ListItem","filePosition":2,"lineItems":[]},{"lineText":"import ListSubHeader","filePosition":3,"lineItems":[]},{"lineText":"import MaterialUIList","filePosition":4,"lineItems":[]},{"lineText":"import codereview.Project","filePosition":5,"lineItems":[]},{"lineText":"import git.provider.GithubClient","filePosition":6,"lineItems":[]},{"lineText":"import git.provider.PullRequestSummary","filePosition":7,"lineItems":[]},{"lineText":"import kotlinx.coroutines.Dispatchers","filePosition":8,"lineItems":[]},{"lineText":"import kotlinx.coroutines.GlobalScope","filePosition":9,"lineItems":[]},{"lineText":"import kotlinx.coroutines.async","filePosition":10,"lineItems":[]},{"lineText":"import react.RBuilder","filePosition":11,"lineItems":[]},{"lineText":"import react.RComponent","filePosition":12,"lineItems":[]},{"lineText":"import react.RProps","filePosition":13,"lineItems":[]},{"lineText":"import react.RState","filePosition":14,"lineItems":[]},{"lineText":"import react.ReactElement","filePosition":15,"lineItems":[]},{"lineText":"import react.setState","filePosition":16,"lineItems":[]},{"lineText":"","filePosition":17,"lineItems":[]},{"lineText":"external interface PullRequestListProps: RProps {","filePosition":18,"lineItems":[]},{"lineText":"    var githubClient: GithubClient","filePosition":19,"lineItems":[]},{"lineText":"    var projects: List<Project>","filePosition":20,"lineItems":[]},{"lineText":"}","filePosition":21,"lineItems":[]},{"lineText":"","filePosition":22,"lineItems":[]},{"lineText":"external interface PullRequestListState: RState {","filePosition":23,"lineItems":[]},{"lineText":"    var pullRequests: List<PullRequestSummary>","filePosition":24,"lineItems":[]},{"lineText":"}","filePosition":25,"lineItems":[]},{"lineText":"","filePosition":26,"lineItems":[]},{"lineText":"class PullRequestList : RComponent<PullRequestListProps, PullRequestListState>() {","filePosition":27,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":28,"lineItems":[]},{"lineText":"        MaterialUIList {","filePosition":29,"lineItems":[]},{"lineText":"            ListSubHeader {","filePosition":30,"lineItems":[]},{"lineText":"                + \"Pull Requests\"","filePosition":31,"lineItems":[]},{"lineText":"            }","filePosition":32,"lineItems":[]},{"lineText":"            state.pullRequests.mapIndexed { index, currentPullRequest ->","filePosition":33,"lineItems":[]},{"lineText":"                ListItem {","filePosition":34,"lineItems":[]},{"lineText":"                    attrs {","filePosition":35,"lineItems":[]},{"lineText":"                        button = true","filePosition":36,"lineItems":[]},{"lineText":"                        divider = true","filePosition":37,"lineItems":[]},{"lineText":"                    }","filePosition":38,"lineItems":[]},{"lineText":"                    + currentPullRequest.title","filePosition":39,"lineItems":[]},{"lineText":"                }","filePosition":40,"lineItems":[]},{"lineText":"            }","filePosition":41,"lineItems":[]},{"lineText":"        }","filePosition":42,"lineItems":[]},{"lineText":"    }","filePosition":43,"lineItems":[]},{"lineText":"","filePosition":44,"lineItems":[]},{"lineText":"    override fun componentDidMount() {","filePosition":45,"lineItems":[]},{"lineText":"        // TODO: Instead of iterating over projects, see if you can retrieve the pull requests where a given user is the asignee","filePosition":46,"lineItems":[]},{"lineText":"        props.projects.map { project ->","filePosition":47,"lineItems":[]},{"lineText":"            GlobalScope.async(context = Dispatchers.Main) {","filePosition":48,"lineItems":[]},{"lineText":"                props.githubClient.listPullRequests(project)","filePosition":49,"lineItems":[]},{"lineText":"                    .let { retrievedPullRequests ->","filePosition":50,"lineItems":[]},{"lineText":"                        /** TODO : Figure out if it's better to update the state in one shot or for each retrieval like this */","filePosition":51,"lineItems":[]},{"lineText":"                        setState {","filePosition":52,"lineItems":[]},{"lineText":"                            pullRequests += retrievedPullRequests","filePosition":53,"lineItems":[]},{"lineText":"                        }","filePosition":54,"lineItems":[]},{"lineText":"                    }","filePosition":55,"lineItems":[]},{"lineText":"            }.invokeOnCompletion { throwable ->","filePosition":56,"lineItems":[]},{"lineText":"                if (throwable != null) {","filePosition":57,"lineItems":[]},{"lineText":"                    console.error(\"Something bad happened\")","filePosition":58,"lineItems":[]},{"lineText":"                    console.error(throwable)","filePosition":59,"lineItems":[]},{"lineText":"                }","filePosition":60,"lineItems":[]},{"lineText":"            }","filePosition":61,"lineItems":[]},{"lineText":"        }","filePosition":62,"lineItems":[]},{"lineText":"    }","filePosition":63,"lineItems":[]},{"lineText":"","filePosition":64,"lineItems":[]},{"lineText":"    override fun PullRequestListState.init() {","filePosition":65,"lineItems":[]},{"lineText":"        pullRequests = emptyList()","filePosition":66,"lineItems":[]},{"lineText":"    }","filePosition":67,"lineItems":[]},{"lineText":"}","filePosition":68,"lineItems":[]},{"lineText":"","filePosition":69,"lineItems":[]},{"lineText":"fun RBuilder.pullRequestList(handler: PullRequestListProps.() -> Unit): ReactElement {","filePosition":70,"lineItems":[]},{"lineText":"    return child(PullRequestList::class) {","filePosition":71,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":72,"lineItems":[]},{"lineText":"    }","filePosition":73,"lineItems":[]},{"lineText":"}","filePosition":74,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/workflows/overview/components/PullRequestList.kt"},"diffChangeType":"ADD","tShirtSize":"M","editList":[{"beginA":0,"beginB":0,"endA":0,"endB":75}]},{"oldFile":{"objectId":"0000000000000000000000000000000000000000","fileLines":[],"path":"/dev/null"},"newFile":{"objectId":"968d59291074dc86d62e1444c1a274e19da218c0","fileLines":[{"lineText":"package supercr.workflows.overview.components","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import Paper","filePosition":2,"lineItems":[]},{"lineText":"import react.RBuilder","filePosition":3,"lineItems":[]},{"lineText":"import react.RComponent","filePosition":4,"lineItems":[]},{"lineText":"import react.RProps","filePosition":5,"lineItems":[]},{"lineText":"import react.RState","filePosition":6,"lineItems":[]},{"lineText":"import react.ReactElement","filePosition":7,"lineItems":[]},{"lineText":"","filePosition":8,"lineItems":[]},{"lineText":"external interface UserStatsProps : RProps {","filePosition":9,"lineItems":[]},{"lineText":"}","filePosition":10,"lineItems":[]},{"lineText":"","filePosition":11,"lineItems":[]},{"lineText":"external interface UserStatsState : RState {","filePosition":12,"lineItems":[]},{"lineText":"","filePosition":13,"lineItems":[]},{"lineText":"}","filePosition":14,"lineItems":[]},{"lineText":"","filePosition":15,"lineItems":[]},{"lineText":"class UserStats : RComponent<UserStatsProps, UserStatsState>() {","filePosition":16,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":17,"lineItems":[]},{"lineText":"        Paper {","filePosition":18,"lineItems":[]},{"lineText":"            + \"Stats Not implemented yet\"","filePosition":19,"lineItems":[]},{"lineText":"        }","filePosition":20,"lineItems":[]},{"lineText":"    }","filePosition":21,"lineItems":[]},{"lineText":"}","filePosition":22,"lineItems":[]},{"lineText":"","filePosition":23,"lineItems":[]},{"lineText":"fun RBuilder.userStats(handler: UserStatsProps.() -> Unit): ReactElement {","filePosition":24,"lineItems":[]},{"lineText":"    return child(UserStats::class) {","filePosition":25,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":26,"lineItems":[]},{"lineText":"    }","filePosition":27,"lineItems":[]},{"lineText":"}","filePosition":28,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/workflows/overview/components/UserStats.kt"},"diffChangeType":"ADD","tShirtSize":"S","editList":[{"beginA":0,"beginB":0,"endA":0,"endB":29}]},{"oldFile":{"objectId":"0000000000000000000000000000000000000000","fileLines":[],"path":"/dev/null"},"newFile":{"objectId":"e69de29bb2d1d6434b8b29ae775ad8c2e48c5391","fileLines":[{"lineText":"","filePosition":0,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/workflows/overview/placeholder"},"diffChangeType":"ADD","tShirtSize":"XS","editList":[]},{"oldFile":{"objectId":"0000000000000000000000000000000000000000","fileLines":[],"path":"/dev/null"},"newFile":{"objectId":"5b1985315aa820f5d0f368aa1651b7841edc9de5","fileLines":[{"lineText":"package supercr.workflows.overview.screens","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import Grid","filePosition":2,"lineItems":[]},{"lineText":"import codereview.Project","filePosition":3,"lineItems":[]},{"lineText":"import git.provider.GithubClient","filePosition":4,"lineItems":[]},{"lineText":"import react.RBuilder","filePosition":5,"lineItems":[]},{"lineText":"import react.RComponent","filePosition":6,"lineItems":[]},{"lineText":"import react.RProps","filePosition":7,"lineItems":[]},{"lineText":"import react.RState","filePosition":8,"lineItems":[]},{"lineText":"import react.ReactElement","filePosition":9,"lineItems":[]},{"lineText":"import supercr.workflows.overview.components.projectList","filePosition":10,"lineItems":[]},{"lineText":"import supercr.workflows.overview.components.pullRequestList","filePosition":11,"lineItems":[]},{"lineText":"import supercr.workflows.overview.components.userStats","filePosition":12,"lineItems":[]},{"lineText":"","filePosition":13,"lineItems":[]},{"lineText":"external interface OverviewScreenProps: RProps {","filePosition":14,"lineItems":[]},{"lineText":"    var projects : List<Project>","filePosition":15,"lineItems":[]},{"lineText":"    var getGithubClient: () -> GithubClient","filePosition":16,"lineItems":[]},{"lineText":"}","filePosition":17,"lineItems":[]},{"lineText":"","filePosition":18,"lineItems":[]},{"lineText":"external interface OverviewScreenState: RState {","filePosition":19,"lineItems":[]},{"lineText":"}","filePosition":20,"lineItems":[]},{"lineText":"","filePosition":21,"lineItems":[]},{"lineText":"class OverviewScreen : RComponent<OverviewScreenProps, OverviewScreenState>() {","filePosition":22,"lineItems":[]},{"lineText":"    override fun RBuilder.render() {","filePosition":23,"lineItems":[]},{"lineText":"        Grid {","filePosition":24,"lineItems":[]},{"lineText":"            attrs {","filePosition":25,"lineItems":[]},{"lineText":"                container = true","filePosition":26,"lineItems":[]},{"lineText":"                item = false","filePosition":27,"lineItems":[]},{"lineText":"                justify = \"space-evenly\"","filePosition":28,"lineItems":[]},{"lineText":"                alignItems = \"center\"","filePosition":29,"lineItems":[]},{"lineText":"                direction = \"row\"","filePosition":30,"lineItems":[]},{"lineText":"                spacing = 1","filePosition":31,"lineItems":[]},{"lineText":"            }","filePosition":32,"lineItems":[]},{"lineText":"            Grid {","filePosition":33,"lineItems":[]},{"lineText":"                attrs {","filePosition":34,"lineItems":[]},{"lineText":"                    container = false","filePosition":35,"lineItems":[]},{"lineText":"                    item = true","filePosition":36,"lineItems":[]},{"lineText":"                    xs = 8","filePosition":37,"lineItems":[]},{"lineText":"                }","filePosition":38,"lineItems":[]},{"lineText":"                pullRequestList {","filePosition":39,"lineItems":[]},{"lineText":"                    githubClient = props.getGithubClient()","filePosition":40,"lineItems":[]},{"lineText":"                    projects = props.projects","filePosition":41,"lineItems":[]},{"lineText":"                }","filePosition":42,"lineItems":[]},{"lineText":"            }","filePosition":43,"lineItems":[]},{"lineText":"            Grid {","filePosition":44,"lineItems":[]},{"lineText":"                attrs {","filePosition":45,"lineItems":[]},{"lineText":"                    container = false","filePosition":46,"lineItems":[]},{"lineText":"                    item = true","filePosition":47,"lineItems":[]},{"lineText":"                    xs = 4","filePosition":48,"lineItems":[]},{"lineText":"                }","filePosition":49,"lineItems":[]},{"lineText":"                renderRightSection()","filePosition":50,"lineItems":[]},{"lineText":"            }","filePosition":51,"lineItems":[]},{"lineText":"        }","filePosition":52,"lineItems":[]},{"lineText":"    }","filePosition":53,"lineItems":[]},{"lineText":"","filePosition":54,"lineItems":[]},{"lineText":"    override fun OverviewScreenState.init() {","filePosition":55,"lineItems":[]},{"lineText":"    }","filePosition":56,"lineItems":[]},{"lineText":"","filePosition":57,"lineItems":[]},{"lineText":"    private fun RBuilder.renderRightSection(): ReactElement {","filePosition":58,"lineItems":[]},{"lineText":"        return Grid {","filePosition":59,"lineItems":[]},{"lineText":"            attrs {","filePosition":60,"lineItems":[]},{"lineText":"                container = true","filePosition":61,"lineItems":[]},{"lineText":"                item = false","filePosition":62,"lineItems":[]},{"lineText":"                alignItems = \"stretch\"","filePosition":63,"lineItems":[]},{"lineText":"            }","filePosition":64,"lineItems":[]},{"lineText":"            Grid {","filePosition":65,"lineItems":[]},{"lineText":"                attrs {","filePosition":66,"lineItems":[]},{"lineText":"                    item = true","filePosition":67,"lineItems":[]},{"lineText":"                    container = false","filePosition":68,"lineItems":[]},{"lineText":"                    xs = 12","filePosition":69,"lineItems":[]},{"lineText":"                }","filePosition":70,"lineItems":[]},{"lineText":"                userStats {","filePosition":71,"lineItems":[]},{"lineText":"","filePosition":72,"lineItems":[]},{"lineText":"                }","filePosition":73,"lineItems":[]},{"lineText":"            }","filePosition":74,"lineItems":[]},{"lineText":"            Grid {","filePosition":75,"lineItems":[]},{"lineText":"                attrs {","filePosition":76,"lineItems":[]},{"lineText":"                    item = true","filePosition":77,"lineItems":[]},{"lineText":"                    container = false","filePosition":78,"lineItems":[]},{"lineText":"                    xs = 12","filePosition":79,"lineItems":[]},{"lineText":"                }","filePosition":80,"lineItems":[]},{"lineText":"                projectList {","filePosition":81,"lineItems":[]},{"lineText":"                    projects = props.projects","filePosition":82,"lineItems":[]},{"lineText":"                }","filePosition":83,"lineItems":[]},{"lineText":"            }","filePosition":84,"lineItems":[]},{"lineText":"        }","filePosition":85,"lineItems":[]},{"lineText":"    }","filePosition":86,"lineItems":[]},{"lineText":"}","filePosition":87,"lineItems":[]},{"lineText":"","filePosition":88,"lineItems":[]},{"lineText":"fun RBuilder.overviewScreen(handler: OverviewScreenProps.() -> Unit): ReactElement {","filePosition":89,"lineItems":[]},{"lineText":"    return child(OverviewScreen::class) {","filePosition":90,"lineItems":[]},{"lineText":"        this.attrs(handler)","filePosition":91,"lineItems":[]},{"lineText":"    }","filePosition":92,"lineItems":[]},{"lineText":"}","filePosition":93,"lineItems":[]},{"lineText":"","filePosition":94,"lineItems":[]}],"path":"kotlin/src/jsMain/kotlin/supercr/workflows/overview/screens/OverviewScreen.kt"},"diffChangeType":"ADD","tShirtSize":"M","editList":[{"beginA":0,"beginB":0,"endA":0,"endB":94}]},{"oldFile":{"objectId":"9ea8cee7b43c47e3302e45a1e59a99fe1eebe67c","fileLines":[{"lineText":"package git.provider","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import auth.DumbOauthClient","filePosition":2,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"import io.ktor.client.HttpClient","filePosition":3,"lineItems":[]},{"lineText":"import io.ktor.client.features.json.JsonFeature","filePosition":4,"lineItems":[]},{"lineText":"import io.ktor.client.features.json.serializer.KotlinxSerializer","filePosition":5,"lineItems":[]},{"lineText":"import kotlinx.coroutines.GlobalScope","filePosition":6,"lineItems":[]},{"lineText":"import kotlinx.coroutines.launch","filePosition":7,"lineItems":[]},{"lineText":"import kotlinx.coroutines.promise","filePosition":8,"lineItems":[]},{"lineText":"import kotlinx.coroutines.withTimeout","filePosition":9,"lineItems":[]},{"lineText":"import kotlinx.serialization.json.Json","filePosition":10,"lineItems":[]},{"lineText":"import kotlinx.serialization.json.JsonConfiguration","filePosition":11,"lineItems":[]},{"lineText":"import runTest","filePosition":12,"lineItems":[]},{"lineText":"import kotlin.js.Date","filePosition":13,"lineItems":[]},{"lineText":"import kotlin.test.Ignore","filePosition":14,"lineItems":[]},{"lineText":"import kotlin.test.Test","filePosition":15,"lineItems":[]},{"lineText":"import kotlin.test.assertEquals","filePosition":16,"lineItems":[]},{"lineText":"import kotlin.test.assertFalse","filePosition":17,"lineItems":[]},{"lineText":"import kotlin.test.assertTrue","filePosition":18,"lineItems":[]},{"lineText":"import kotlin.time.measureTime","filePosition":19,"lineItems":[]},{"lineText":"","filePosition":20,"lineItems":[]},{"lineText":"class GithubClientTest {","filePosition":21,"lineItems":[]},{"lineText":"    val githubClient = GithubClient(","filePosition":22,"lineItems":[]},{"lineText":"        oauthClient = DumbOauthClient(\"\"),","filePosition":23,"lineItems":[]},{"lineText":"        httpClient = HttpClient() {","filePosition":24,"lineItems":[]},{"lineText":"            install(JsonFeature) {","filePosition":25,"lineItems":[]},{"lineText":"                serializer = KotlinxSerializer(json = Json(JsonConfiguration.Stable.copy(ignoreUnknownKeys = true)))","filePosition":26,"lineItems":[]},{"lineText":"            }","filePosition":27,"lineItems":[]},{"lineText":"        }","filePosition":28,"lineItems":[]},{"lineText":"    )","filePosition":29,"lineItems":[]},{"lineText":"","filePosition":30,"lineItems":[]},{"lineText":"    /**","filePosition":31,"lineItems":[]},{"lineText":"     * This will be re-written as part of a more elaborate e2e test","filePosition":32,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"     */","filePosition":33,"lineItems":[]},{"lineText":"    @Test","filePosition":34,"lineItems":[]},{"lineText":"    @Ignore","filePosition":35,"lineItems":[]},{"lineText":"    fun tempTestForGithubClient() = runTest {","filePosition":36,"lineItems":[]},{"lineText":"        try {","filePosition":37,"lineItems":[]},{"lineText":"            val reposSummary = githubClient.getReposSummary(\"theboringtech\")","filePosition":38,"lineItems":[]},{"lineText":"            assertEquals(2, reposSummary.size)","filePosition":39,"lineItems":[]},{"lineText":"            val websiteRepo = reposSummary.first { it.name.contains(\"github.io\") }","filePosition":40,"lineItems":[]},{"lineText":"            val pullRequests = githubClient.listPullRequests(websiteRepo)","filePosition":41,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"            val prMerged = githubClient.isPrMerged(pullRequests.first())","filePosition":42,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"            assertFalse(prMerged)","filePosition":43,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"            val pulLRequestDetails = githubClient.getPullRequestDetails(pullRequests.first())","filePosition":44,"lineItems":[]},{"lineText":"            assertTrue(pulLRequestDetails.mergeable)","filePosition":45,"lineItems":[]},{"lineText":"        } catch (e: Exception) {","filePosition":46,"lineItems":[]},{"lineText":"            if (e.message?.contains(\"401 Unauthorized\") == true) {","filePosition":47,"lineItems":[]},{"lineText":"                println(\"The test by default doesn't have an access token. Add an access token while creating github client\")","filePosition":48,"lineItems":[]},{"lineText":"                throw RuntimeException(\"Check access token on github client\")","filePosition":49,"lineItems":[]},{"lineText":"            }","filePosition":50,"lineItems":[]},{"lineText":"            throw RuntimeException(e)","filePosition":51,"lineItems":[]},{"lineText":"        }","filePosition":52,"lineItems":[]},{"lineText":"    }","filePosition":53,"lineItems":[]},{"lineText":"","filePosition":54,"lineItems":[]},{"lineText":"}","filePosition":55,"lineItems":[]}],"path":"kotlin/src/jsTest/kotlin/git/provider/GithubClientTest.kt"},"newFile":{"objectId":"444d02d7aa3f5fdb68c825429f9d6f8d725b33f7","fileLines":[{"lineText":"package git.provider","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import auth.DumbOauthClient","filePosition":2,"lineItems":[]},{"lineText":"import codereview.Project","filePosition":3,"lineItems":[]},{"lineText":"import io.ktor.client.HttpClient","filePosition":4,"lineItems":[]},{"lineText":"import io.ktor.client.features.json.JsonFeature","filePosition":5,"lineItems":[]},{"lineText":"import io.ktor.client.features.json.serializer.KotlinxSerializer","filePosition":6,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"import kotlinx.serialization.json.Json","filePosition":7,"lineItems":[]},{"lineText":"import kotlinx.serialization.json.JsonConfiguration","filePosition":8,"lineItems":[]},{"lineText":"import runTest","filePosition":9,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"import kotlin.test.Ignore","filePosition":10,"lineItems":[]},{"lineText":"import kotlin.test.Test","filePosition":11,"lineItems":[]},{"lineText":"import kotlin.test.assertEquals","filePosition":12,"lineItems":[]},{"lineText":"import kotlin.test.assertFalse","filePosition":13,"lineItems":[]},{"lineText":"import kotlin.test.assertTrue","filePosition":14,"lineItems":[]},{"lineText":"","filePosition":15,"lineItems":[]},{"lineText":"","filePosition":16,"lineItems":[]},{"lineText":"class GithubClientTest {","filePosition":17,"lineItems":[]},{"lineText":"    val githubClient = GithubClient(","filePosition":18,"lineItems":[]},{"lineText":"        oauthClient = DumbOauthClient(\"4da05160ff8311a45f31fe8fd6ab374b8a6f9fe9\"),","filePosition":19,"lineItems":[]},{"lineText":"        httpClient = HttpClient() {","filePosition":20,"lineItems":[]},{"lineText":"            install(JsonFeature) {","filePosition":21,"lineItems":[]},{"lineText":"                serializer = KotlinxSerializer(json = Json(JsonConfiguration.Stable.copy(ignoreUnknownKeys = true)))","filePosition":22,"lineItems":[]},{"lineText":"            }","filePosition":23,"lineItems":[]},{"lineText":"        }","filePosition":24,"lineItems":[]},{"lineText":"    )","filePosition":25,"lineItems":[]},{"lineText":"","filePosition":26,"lineItems":[]},{"lineText":"    /**","filePosition":27,"lineItems":[]},{"lineText":"     * This will be re-written as part of a more elaborate e2e test","filePosition":28,"lineItems":[]},{"lineText":"     * Note: We have a lot of println statements to help zero in on exact call where the error occurs","filePosition":29,"lineItems":[]},{"lineText":"     */","filePosition":30,"lineItems":[]},{"lineText":"    @Test","filePosition":31,"lineItems":[]},{"lineText":"    @Ignore","filePosition":32,"lineItems":[]},{"lineText":"    fun tempTestForGithubClient() = runTest {","filePosition":33,"lineItems":[]},{"lineText":"        try {","filePosition":34,"lineItems":[]},{"lineText":"            val reposSummary = githubClient.getReposSummary(\"theboringtech\")","filePosition":35,"lineItems":[]},{"lineText":"            assertEquals(2, reposSummary.size)","filePosition":36,"lineItems":[]},{"lineText":"            val websiteRepo = reposSummary.first { it.name.contains(\"github.io\") }","filePosition":37,"lineItems":[]},{"lineText":"            val project = Project(\"/home/yogesh/work/theboringtech.github.io\", websiteRepo.full_name, websiteRepo.name)","filePosition":38,"lineItems":[]},{"lineText":"            println(\"Will Fetch pull request for $project\")","filePosition":39,"lineItems":[]},{"lineText":"            val pullRequests = githubClient.listPullRequests(project)","filePosition":40,"lineItems":[]},{"lineText":"            println(\"Pull requests fetched. Now, will check if pr is merged\")","filePosition":41,"lineItems":[]},{"lineText":"            val prMerged = githubClient.isPrMerged(pullRequests.first())","filePosition":42,"lineItems":[]},{"lineText":"            println(\"Retrieved prMergedValue\")","filePosition":43,"lineItems":[]},{"lineText":"            assertFalse(prMerged)","filePosition":44,"lineItems":[]},{"lineText":"            println(\"Will now fetch pull request details\")","filePosition":45,"lineItems":[]},{"lineText":"            val pulLRequestDetails = githubClient.getPullRequestDetails(pullRequests.first())","filePosition":46,"lineItems":[]},{"lineText":"            assertTrue(pulLRequestDetails.mergeable)","filePosition":47,"lineItems":[]},{"lineText":"        } catch (e: Exception) {","filePosition":48,"lineItems":[]},{"lineText":"            if (e.message?.contains(\"401 Unauthorized\") == true) {","filePosition":49,"lineItems":[]},{"lineText":"                println(\"The test by default doesn't have an access token. Add an access token while creating github client\")","filePosition":50,"lineItems":[]},{"lineText":"                throw RuntimeException(\"Check access token on github client\")","filePosition":51,"lineItems":[]},{"lineText":"            }","filePosition":52,"lineItems":[]},{"lineText":"            throw e","filePosition":53,"lineItems":[]},{"lineText":"        }","filePosition":54,"lineItems":[]},{"lineText":"    }","filePosition":55,"lineItems":[]},{"lineText":"","filePosition":56,"lineItems":[]},{"lineText":"}","filePosition":57,"lineItems":[]}],"path":"kotlin/src/jsTest/kotlin/git/provider/GithubClientTest.kt"},"diffChangeType":"MODIFY","tShirtSize":"S","editList":[{"beginA":3,"beginB":3,"endA":3,"endB":4},{"beginA":6,"beginB":7,"endA":10,"endB":7},{"beginA":13,"beginB":10,"endA":14,"endB":10},{"beginA":19,"beginB":15,"endA":20,"endB":16},{"beginA":23,"beginB":19,"endA":24,"endB":20},{"beginA":33,"beginB":29,"endA":33,"endB":30},{"beginA":41,"beginB":38,"endA":42,"endB":42},{"beginA":43,"beginB":43,"endA":43,"endB":44},{"beginA":44,"beginB":45,"endA":44,"endB":46},{"beginA":51,"beginB":53,"endA":52,"endB":54}]},{"oldFile":{"objectId":"6fe36cf9206bb60b2cfc58ab33c9399a563884f3","fileLines":[{"lineText":"package git.provider","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import kotlinx.serialization.json.Json","filePosition":2,"lineItems":[]},{"lineText":"import kotlinx.serialization.json.JsonConfiguration","filePosition":3,"lineItems":[]},{"lineText":"import kotlin.test.Test","filePosition":4,"lineItems":[]},{"lineText":"import kotlin.test.assertEquals","filePosition":5,"lineItems":[]},{"lineText":"","filePosition":6,"lineItems":[]},{"lineText":"/**","filePosition":7,"lineItems":[]},{"lineText":" * This weird import path is needed because `pull_request_example1.json` which is initially placed in","filePosition":8,"lineItems":[]},{"lineText":" * jsTest/resources/  directory is 'transferred to' 'build/js/processedResources/js/test folder","filePosition":9,"lineItems":[]},{"lineText":" * TODO: There must be a way to instruct gradle to put these files along with js test files before running the test. Figure that out","filePosition":10,"lineItems":[]},{"lineText":" */","filePosition":11,"lineItems":[]},{"lineText":"@JsModule(\"../../../../processedResources/js/test/pull_request_example1.json\")","filePosition":12,"lineItems":[]},{"lineText":"external val pullRequestExample1Contents: dynamic","filePosition":13,"lineItems":[]},{"lineText":"","filePosition":14,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"@JsModule(\"../../../../processedResources/js/test/pull_request_details.json\")","filePosition":15,"lineItems":[]},{"lineText":"external val pullRequestDetailsContents: dynamic","filePosition":16,"lineItems":[]},{"lineText":"","filePosition":17,"lineItems":[]},{"lineText":"@JsModule(\"../../../../processedResources/js/test/pull_request_commitlist_entry.json\")","filePosition":18,"lineItems":[]},{"lineText":"external val pullRequestCommitListEntry: dynamic","filePosition":19,"lineItems":[]},{"lineText":"","filePosition":20,"lineItems":[]},{"lineText":"@JsModule(\"../../../../processedResources/js/test/pull_request_filelist_entry.json\")","filePosition":21,"lineItems":[]},{"lineText":"external val pullRequestFileListEntry: dynamic","filePosition":22,"lineItems":[]},{"lineText":"/**","filePosition":23,"lineItems":[]},{"lineText":" * Test Deserialisation / Serialisation of Github DTOs","filePosition":24,"lineItems":[]},{"lineText":" */","filePosition":25,"lineItems":[]},{"lineText":"class GithubDtosTest {","filePosition":26,"lineItems":[]},{"lineText":"","filePosition":27,"lineItems":[]},{"lineText":"    @Test","filePosition":28,"lineItems":[]},{"lineText":"    fun shouldDeserialisePullRequestString() {","filePosition":29,"lineItems":[]},{"lineText":"        val json = Json(JsonConfiguration.Stable.copy(ignoreUnknownKeys = true))","filePosition":30,"lineItems":[]},{"lineText":"        val pullRequestSummary: PullRequestSummary = json.parse(PullRequestSummary.serializer(), JSON.stringify(pullRequestExample1Contents))","filePosition":31,"lineItems":[]},{"lineText":"        assertEquals(\"Proposed changes to the website\", pullRequestSummary.title)","filePosition":32,"lineItems":[]},{"lineText":"        assertEquals(1, pullRequestSummary.assignees.size)","filePosition":33,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"    }","filePosition":34,"lineItems":[]},{"lineText":"","filePosition":35,"lineItems":[]},{"lineText":"    @Test","filePosition":36,"lineItems":[]},{"lineText":"    fun shouldDeserialisePullRequestDetailsString() {","filePosition":37,"lineItems":[]},{"lineText":"        val json = Json(JsonConfiguration.Stable.copy(ignoreUnknownKeys = true))","filePosition":38,"lineItems":[]},{"lineText":"        val pullRequestDetails: PullRequestDetails = json.parse(PullRequestDetails.serializer(), JSON.stringify(pullRequestDetailsContents))","filePosition":39,"lineItems":[]},{"lineText":"        assertEquals(\"Amazing new feature\", pullRequestDetails.title)","filePosition":40,"lineItems":[]},{"lineText":"        assertEquals(2, pullRequestDetails.assignees.size)","filePosition":41,"lineItems":[]},{"lineText":"    }","filePosition":42,"lineItems":[]},{"lineText":"","filePosition":43,"lineItems":[]},{"lineText":"    @Test","filePosition":44,"lineItems":[]},{"lineText":"    fun shouldDeserialisePullRequestCommitListString() {","filePosition":45,"lineItems":[]},{"lineText":"        val json = Json(JsonConfiguration.Stable.copy(ignoreUnknownKeys = true))","filePosition":46,"lineItems":[]},{"lineText":"        val pullRequestCommit = json.parse(GithubCommit.serializer(), JSON.stringify(pullRequestCommitListEntry))","filePosition":47,"lineItems":[]},{"lineText":"        assertEquals(\"Fix all the bugs\", pullRequestCommit.commit.message)","filePosition":48,"lineItems":[]},{"lineText":"        assertEquals(1, pullRequestCommit.parents.size)","filePosition":49,"lineItems":[]},{"lineText":"    }","filePosition":50,"lineItems":[]},{"lineText":"","filePosition":51,"lineItems":[]},{"lineText":"    @Test","filePosition":52,"lineItems":[]},{"lineText":"    fun shouldDeserialisePullRequestFileListString() {","filePosition":53,"lineItems":[]},{"lineText":"        val json = Json(JsonConfiguration.Stable.copy(ignoreUnknownKeys = true))","filePosition":54,"lineItems":[]},{"lineText":"        val pullRequestFileDetails = json.parse(PullRequestFileDetails.serializer(), JSON.stringify(pullRequestFileListEntry))","filePosition":55,"lineItems":[]},{"lineText":"        assertEquals(\"file1.txt\", pullRequestFileDetails.filename)","filePosition":56,"lineItems":[]},{"lineText":"        assertEquals(124L, pullRequestFileDetails.changes)","filePosition":57,"lineItems":[]},{"lineText":"    }","filePosition":58,"lineItems":[]},{"lineText":"}","filePosition":59,"lineItems":[]}],"path":"kotlin/src/jsTest/kotlin/git/provider/GithubDtosTest.kt"},"newFile":{"objectId":"6752d07cc1eae3807f7df2f2d2febb9672589550","fileLines":[{"lineText":"package git.provider","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import kotlinx.serialization.json.Json","filePosition":2,"lineItems":[]},{"lineText":"import kotlinx.serialization.json.JsonConfiguration","filePosition":3,"lineItems":[]},{"lineText":"import kotlin.test.Test","filePosition":4,"lineItems":[]},{"lineText":"import kotlin.test.assertEquals","filePosition":5,"lineItems":[]},{"lineText":"","filePosition":6,"lineItems":[]},{"lineText":"/**","filePosition":7,"lineItems":[]},{"lineText":" * This weird import path is needed because `pull_request_example1.json` which is initially placed in","filePosition":8,"lineItems":[]},{"lineText":" * jsTest/resources/  directory is 'transferred to' 'build/js/processedResources/js/test folder","filePosition":9,"lineItems":[]},{"lineText":" * TODO: There must be a way to instruct gradle to put these files along with js test files before running the test. Figure that out","filePosition":10,"lineItems":[]},{"lineText":" */","filePosition":11,"lineItems":[]},{"lineText":"@JsModule(\"../../../../processedResources/js/test/pull_request_example1.json\")","filePosition":12,"lineItems":[]},{"lineText":"external val pullRequestExample1Contents: dynamic","filePosition":13,"lineItems":[]},{"lineText":"","filePosition":14,"lineItems":[]},{"lineText":"@JsModule(\"../../../../processedResources/js/test/pull_request_example2.json\")","filePosition":15,"lineItems":[]},{"lineText":"external val pullRequestExample2WithoutAssigneeContents: dynamic","filePosition":16,"lineItems":[]},{"lineText":"","filePosition":17,"lineItems":[]},{"lineText":"@JsModule(\"../../../../processedResources/js/test/pull_request_details.json\")","filePosition":18,"lineItems":[]},{"lineText":"external val pullRequestDetailsContents: dynamic","filePosition":19,"lineItems":[]},{"lineText":"","filePosition":20,"lineItems":[]},{"lineText":"@JsModule(\"../../../../processedResources/js/test/pull_request_commitlist_entry.json\")","filePosition":21,"lineItems":[]},{"lineText":"external val pullRequestCommitListEntry: dynamic","filePosition":22,"lineItems":[]},{"lineText":"","filePosition":23,"lineItems":[]},{"lineText":"@JsModule(\"../../../../processedResources/js/test/pull_request_filelist_entry.json\")","filePosition":24,"lineItems":[]},{"lineText":"external val pullRequestFileListEntry: dynamic","filePosition":25,"lineItems":[]},{"lineText":"/**","filePosition":26,"lineItems":[]},{"lineText":" * Test Deserialisation / Serialisation of Github DTOs","filePosition":27,"lineItems":[]},{"lineText":" */","filePosition":28,"lineItems":[]},{"lineText":"class GithubDtosTest {","filePosition":29,"lineItems":[]},{"lineText":"","filePosition":30,"lineItems":[]},{"lineText":"    @Test","filePosition":31,"lineItems":[]},{"lineText":"    fun shouldDeserialisePullRequestString() {","filePosition":32,"lineItems":[]},{"lineText":"        val json = Json(JsonConfiguration.Stable.copy(ignoreUnknownKeys = true))","filePosition":33,"lineItems":[]},{"lineText":"        val pullRequestSummary: PullRequestSummary = json.parse(PullRequestSummary.serializer(), JSON.stringify(pullRequestExample1Contents))","filePosition":34,"lineItems":[]},{"lineText":"        assertEquals(\"Proposed changes to the website\", pullRequestSummary.title)","filePosition":35,"lineItems":[]},{"lineText":"        assertEquals(1, pullRequestSummary.assignees.size)","filePosition":36,"lineItems":[]},{"lineText":"","filePosition":37,"lineItems":[]},{"lineText":"        val pullRequestWithoutAssigneeSummary: PullRequestSummary = json.parse(","filePosition":38,"lineItems":[]},{"lineText":"            deserializer = PullRequestSummary.serializer(),","filePosition":39,"lineItems":[]},{"lineText":"            string = JSON.stringify(pullRequestExample2WithoutAssigneeContents)","filePosition":40,"lineItems":[]},{"lineText":"        )","filePosition":41,"lineItems":[]},{"lineText":"        assertEquals(\"Making changes to the test file\", pullRequestWithoutAssigneeSummary.title)","filePosition":42,"lineItems":[]},{"lineText":"        assertEquals(0, pullRequestWithoutAssigneeSummary.assignees.size)","filePosition":43,"lineItems":[]},{"lineText":"    }","filePosition":44,"lineItems":[]},{"lineText":"","filePosition":45,"lineItems":[]},{"lineText":"    @Test","filePosition":46,"lineItems":[]},{"lineText":"    fun shouldDeserialisePullRequestDetailsString() {","filePosition":47,"lineItems":[]},{"lineText":"        val json = Json(JsonConfiguration.Stable.copy(ignoreUnknownKeys = true))","filePosition":48,"lineItems":[]},{"lineText":"        val pullRequestDetails: PullRequestDetails = json.parse(PullRequestDetails.serializer(), JSON.stringify(pullRequestDetailsContents))","filePosition":49,"lineItems":[]},{"lineText":"        assertEquals(\"Amazing new feature\", pullRequestDetails.title)","filePosition":50,"lineItems":[]},{"lineText":"        assertEquals(2, pullRequestDetails.assignees.size)","filePosition":51,"lineItems":[]},{"lineText":"    }","filePosition":52,"lineItems":[]},{"lineText":"","filePosition":53,"lineItems":[]},{"lineText":"    @Test","filePosition":54,"lineItems":[]},{"lineText":"    fun shouldDeserialisePullRequestCommitListString() {","filePosition":55,"lineItems":[]},{"lineText":"        val json = Json(JsonConfiguration.Stable.copy(ignoreUnknownKeys = true))","filePosition":56,"lineItems":[]},{"lineText":"        val pullRequestCommit = json.parse(GithubCommit.serializer(), JSON.stringify(pullRequestCommitListEntry))","filePosition":57,"lineItems":[]},{"lineText":"        assertEquals(\"Fix all the bugs\", pullRequestCommit.commit.message)","filePosition":58,"lineItems":[]},{"lineText":"        assertEquals(1, pullRequestCommit.parents.size)","filePosition":59,"lineItems":[]},{"lineText":"    }","filePosition":60,"lineItems":[]},{"lineText":"","filePosition":61,"lineItems":[]},{"lineText":"    @Test","filePosition":62,"lineItems":[]},{"lineText":"    fun shouldDeserialisePullRequestFileListString() {","filePosition":63,"lineItems":[]},{"lineText":"        val json = Json(JsonConfiguration.Stable.copy(ignoreUnknownKeys = true))","filePosition":64,"lineItems":[]},{"lineText":"        val pullRequestFileDetails = json.parse(PullRequestFileDetails.serializer(), JSON.stringify(pullRequestFileListEntry))","filePosition":65,"lineItems":[]},{"lineText":"        assertEquals(\"file1.txt\", pullRequestFileDetails.filename)","filePosition":66,"lineItems":[]},{"lineText":"        assertEquals(124L, pullRequestFileDetails.changes)","filePosition":67,"lineItems":[]},{"lineText":"    }","filePosition":68,"lineItems":[]},{"lineText":"}","filePosition":69,"lineItems":[]}],"path":"kotlin/src/jsTest/kotlin/git/provider/GithubDtosTest.kt"},"diffChangeType":"MODIFY","tShirtSize":"S","editList":[{"beginA":15,"beginB":15,"endA":15,"endB":18},{"beginA":34,"beginB":37,"endA":34,"endB":44}]},{"oldFile":{"objectId":"b4d27830854ff5b68173dbaf51ed10c51e34f4e6","fileLines":[{"lineText":"package supercr.processor","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import kotlin.test.Test","filePosition":2,"lineItems":[]},{"lineText":"import kotlin.test.assertEquals","filePosition":3,"lineItems":[]},{"lineText":"","filePosition":4,"lineItems":[]},{"lineText":"class LineDiffProcessorTest {","filePosition":5,"lineItems":[]},{"lineText":"    @Test","filePosition":6,"lineItems":[]},{"lineText":"    fun testNewWordAddedToNewLine() {","filePosition":7,"lineItems":[]},{"lineText":"        val oldLine = \"System.out.println('This is 2nd line');\"","filePosition":8,"lineItems":[]},{"lineText":"        val newLine = \"System.out.println('This is 2nd changed line');\"","filePosition":9,"lineItems":[]},{"lineText":"        val (expectedMarkersForOldText, expectedMarkersForNewText) = Pair<List<VimDiffRowMarker>, List<VimDiffRowMarker>>(","filePosition":10,"lineItems":[]},{"lineText":"            emptyList(),","filePosition":11,"lineItems":[]},{"lineText":"            listOf(","filePosition":12,"lineItems":[]},{"lineText":"                VimDiffRowMarker(fromColumn = 32, toColumn = 39, highlightType = HighlightType.TextAdded)","filePosition":13,"lineItems":[]},{"lineText":"            )","filePosition":14,"lineItems":[]},{"lineText":"        )","filePosition":15,"lineItems":[]},{"lineText":"        LineDiffProcessor.getDiffMarkers(oldLine, newLine)","filePosition":16,"lineItems":[]},{"lineText":"            .let { (markersForOldText, markersForNewText) ->","filePosition":17,"lineItems":[]},{"lineText":"                expectedMarkersForNewText.verify(markersForNewText)","filePosition":18,"lineItems":[]},{"lineText":"                expectedMarkersForOldText.verify(markersForOldText)","filePosition":19,"lineItems":[]},{"lineText":"            }","filePosition":20,"lineItems":[]},{"lineText":"    }","filePosition":21,"lineItems":[]},{"lineText":"","filePosition":22,"lineItems":[]},{"lineText":"    @Test","filePosition":23,"lineItems":[]},{"lineText":"    fun testWordRemovedFromNewLine() {","filePosition":24,"lineItems":[]},{"lineText":"        val oldLine = \"System.out.println('This is 2nd line');\"","filePosition":25,"lineItems":[]},{"lineText":"        val newLine = \"System.out.println('2nd line');\"","filePosition":26,"lineItems":[]},{"lineText":"        val expectedMarkersForNewText = emptyList<VimDiffRowMarker>()","filePosition":27,"lineItems":[]},{"lineText":"        val expectedMarkersForOldText = listOf(","filePosition":28,"lineItems":[]},{"lineText":"            VimDiffRowMarker(fromColumn = 20, toColumn = 27, highlightType = HighlightType.TextRemoved)","filePosition":29,"lineItems":[]},{"lineText":"        )","filePosition":30,"lineItems":[]},{"lineText":"        LineDiffProcessor.getDiffMarkers(oldLine, newLine)","filePosition":31,"lineItems":[]},{"lineText":"            .let { (markersForOldText, markersForNewText) ->","filePosition":32,"lineItems":[]},{"lineText":"                expectedMarkersForNewText.verify(markersForNewText)","filePosition":33,"lineItems":[]},{"lineText":"                expectedMarkersForOldText.verify(markersForOldText)","filePosition":34,"lineItems":[]},{"lineText":"            }","filePosition":35,"lineItems":[]},{"lineText":"    }","filePosition":36,"lineItems":[]},{"lineText":"","filePosition":37,"lineItems":[]},{"lineText":"    @Test","filePosition":38,"lineItems":[]},{"lineText":"    fun testWordRemovedAndAddedToNewLine() {","filePosition":39,"lineItems":[]},{"lineText":"        val oldLine = \"System.out.println('This is 2nd line');\"","filePosition":40,"lineItems":[]},{"lineText":"        val newLine = \"System.out.println('2nd line is that');\"","filePosition":41,"lineItems":[]},{"lineText":"        val expectedMarkersForNewText = listOf(","filePosition":42,"lineItems":[]},{"lineText":"            VimDiffRowMarker(fromColumn = 20, toColumn = 22, highlightType = HighlightType.TextAdded),","filePosition":43,"lineItems":[]},{"lineText":"            VimDiffRowMarker(fromColumn = 24, toColumn = 28, highlightType = HighlightType.TextAdded),","filePosition":44,"lineItems":[]},{"lineText":"            VimDiffRowMarker(fromColumn = 32, toColumn = 35, highlightType = HighlightType.TextAdded)","filePosition":45,"lineItems":[]},{"lineText":"        )","filePosition":46,"lineItems":[]},{"lineText":"        val expectedMarkersForOldText = listOf(","filePosition":47,"lineItems":[]},{"lineText":"            VimDiffRowMarker(fromColumn = 20, toColumn = 23, highlightType = HighlightType.TextRemoved),","filePosition":48,"lineItems":[]},{"lineText":"            VimDiffRowMarker(fromColumn = 28, toColumn = 35, highlightType = HighlightType.TextRemoved)","filePosition":49,"lineItems":[]},{"lineText":"        )","filePosition":50,"lineItems":[]},{"lineText":"        LineDiffProcessor.getDiffMarkers(oldLine, newLine)","filePosition":51,"lineItems":[]},{"lineText":"            .let { (markersForOldText, markersForNewText) ->","filePosition":52,"lineItems":[]},{"lineText":"                expectedMarkersForNewText.verify(markersForNewText)","filePosition":53,"lineItems":[]},{"lineText":"                expectedMarkersForOldText.verify(markersForOldText)","filePosition":54,"lineItems":[]},{"lineText":"            }","filePosition":55,"lineItems":[]},{"lineText":"","filePosition":56,"lineItems":[]},{"lineText":"    }","filePosition":57,"lineItems":[]},{"lineText":"","filePosition":58,"lineItems":[]},{"lineText":"    private fun List<VimDiffRowMarker>.verify(actual: List<VimDiffRowMarker>) {","filePosition":59,"lineItems":[]},{"lineText":"        assertEquals(this.size, actual.size)","filePosition":60,"lineItems":[]},{"lineText":"        this.forEachIndexed { index, expectedMarker ->","filePosition":61,"lineItems":[]},{"lineText":"            assertEquals(expectedMarker, actual[index], \"Expected $expectedMarker at index $index but got ${ actual[index] }\")","filePosition":62,"lineItems":[]},{"lineText":"        }","filePosition":63,"lineItems":[]},{"lineText":"    }","filePosition":64,"lineItems":[]},{"lineText":"}","filePosition":65,"lineItems":[]},{"lineText":"","filePosition":66,"lineItems":[]}],"path":"kotlin/src/jsTest/kotlin/supercr/processor/LineDiffProcessorTest.kt"},"newFile":{"objectId":"54e8d246864613c6ee45c165b44b4a0a12798199","fileLines":[{"lineText":"package supercr.workflows.codereview.processor","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import kotlin.test.Test","filePosition":2,"lineItems":[]},{"lineText":"import kotlin.test.assertEquals","filePosition":3,"lineItems":[]},{"lineText":"","filePosition":4,"lineItems":[]},{"lineText":"class LineDiffProcessorTest {","filePosition":5,"lineItems":[]},{"lineText":"    @Test","filePosition":6,"lineItems":[]},{"lineText":"    fun testNewWordAddedToNewLine() {","filePosition":7,"lineItems":[]},{"lineText":"        val oldLine = \"System.out.println('This is 2nd line');\"","filePosition":8,"lineItems":[]},{"lineText":"        val newLine = \"System.out.println('This is 2nd changed line');\"","filePosition":9,"lineItems":[]},{"lineText":"        val (expectedMarkersForOldText, expectedMarkersForNewText) = Pair<List<VimDiffRowMarker>, List<VimDiffRowMarker>>(","filePosition":10,"lineItems":[]},{"lineText":"            emptyList(),","filePosition":11,"lineItems":[]},{"lineText":"            listOf(","filePosition":12,"lineItems":[]},{"lineText":"                VimDiffRowMarker(fromColumn = 32, toColumn = 39, highlightType = HighlightType.TextAdded)","filePosition":13,"lineItems":[]},{"lineText":"            )","filePosition":14,"lineItems":[]},{"lineText":"        )","filePosition":15,"lineItems":[]},{"lineText":"        LineDiffProcessor.getDiffMarkers(oldLine, newLine)","filePosition":16,"lineItems":[]},{"lineText":"            .let { (markersForOldText, markersForNewText) ->","filePosition":17,"lineItems":[]},{"lineText":"                expectedMarkersForNewText.verify(markersForNewText)","filePosition":18,"lineItems":[]},{"lineText":"                expectedMarkersForOldText.verify(markersForOldText)","filePosition":19,"lineItems":[]},{"lineText":"            }","filePosition":20,"lineItems":[]},{"lineText":"    }","filePosition":21,"lineItems":[]},{"lineText":"","filePosition":22,"lineItems":[]},{"lineText":"    @Test","filePosition":23,"lineItems":[]},{"lineText":"    fun testWordRemovedFromNewLine() {","filePosition":24,"lineItems":[]},{"lineText":"        val oldLine = \"System.out.println('This is 2nd line');\"","filePosition":25,"lineItems":[]},{"lineText":"        val newLine = \"System.out.println('2nd line');\"","filePosition":26,"lineItems":[]},{"lineText":"        val expectedMarkersForNewText = emptyList<VimDiffRowMarker>()","filePosition":27,"lineItems":[]},{"lineText":"        val expectedMarkersForOldText = listOf(","filePosition":28,"lineItems":[]},{"lineText":"            VimDiffRowMarker(fromColumn = 20, toColumn = 27, highlightType = HighlightType.TextRemoved)","filePosition":29,"lineItems":[]},{"lineText":"        )","filePosition":30,"lineItems":[]},{"lineText":"        LineDiffProcessor.getDiffMarkers(oldLine, newLine)","filePosition":31,"lineItems":[]},{"lineText":"            .let { (markersForOldText, markersForNewText) ->","filePosition":32,"lineItems":[]},{"lineText":"                expectedMarkersForNewText.verify(markersForNewText)","filePosition":33,"lineItems":[]},{"lineText":"                expectedMarkersForOldText.verify(markersForOldText)","filePosition":34,"lineItems":[]},{"lineText":"            }","filePosition":35,"lineItems":[]},{"lineText":"    }","filePosition":36,"lineItems":[]},{"lineText":"","filePosition":37,"lineItems":[]},{"lineText":"    @Test","filePosition":38,"lineItems":[]},{"lineText":"    fun testWordRemovedAndAddedToNewLine() {","filePosition":39,"lineItems":[]},{"lineText":"        val oldLine = \"System.out.println('This is 2nd line');\"","filePosition":40,"lineItems":[]},{"lineText":"        val newLine = \"System.out.println('2nd line is that');\"","filePosition":41,"lineItems":[]},{"lineText":"        val expectedMarkersForNewText = listOf(","filePosition":42,"lineItems":[]},{"lineText":"            VimDiffRowMarker(fromColumn = 20, toColumn = 22, highlightType = HighlightType.TextAdded),","filePosition":43,"lineItems":[]},{"lineText":"            VimDiffRowMarker(fromColumn = 24, toColumn = 28, highlightType = HighlightType.TextAdded),","filePosition":44,"lineItems":[]},{"lineText":"            VimDiffRowMarker(fromColumn = 32, toColumn = 35, highlightType = HighlightType.TextAdded)","filePosition":45,"lineItems":[]},{"lineText":"        )","filePosition":46,"lineItems":[]},{"lineText":"        val expectedMarkersForOldText = listOf(","filePosition":47,"lineItems":[]},{"lineText":"            VimDiffRowMarker(fromColumn = 20, toColumn = 23, highlightType = HighlightType.TextRemoved),","filePosition":48,"lineItems":[]},{"lineText":"            VimDiffRowMarker(fromColumn = 28, toColumn = 35, highlightType = HighlightType.TextRemoved)","filePosition":49,"lineItems":[]},{"lineText":"        )","filePosition":50,"lineItems":[]},{"lineText":"        LineDiffProcessor.getDiffMarkers(oldLine, newLine)","filePosition":51,"lineItems":[]},{"lineText":"            .let { (markersForOldText, markersForNewText) ->","filePosition":52,"lineItems":[]},{"lineText":"                expectedMarkersForNewText.verify(markersForNewText)","filePosition":53,"lineItems":[]},{"lineText":"                expectedMarkersForOldText.verify(markersForOldText)","filePosition":54,"lineItems":[]},{"lineText":"            }","filePosition":55,"lineItems":[]},{"lineText":"","filePosition":56,"lineItems":[]},{"lineText":"    }","filePosition":57,"lineItems":[]},{"lineText":"","filePosition":58,"lineItems":[]},{"lineText":"    private fun List<VimDiffRowMarker>.verify(actual: List<VimDiffRowMarker>) {","filePosition":59,"lineItems":[]},{"lineText":"        assertEquals(this.size, actual.size)","filePosition":60,"lineItems":[]},{"lineText":"        this.forEachIndexed { index, expectedMarker ->","filePosition":61,"lineItems":[]},{"lineText":"            assertEquals(expectedMarker, actual[index], \"Expected $expectedMarker at index $index but got ${ actual[index] }\")","filePosition":62,"lineItems":[]},{"lineText":"        }","filePosition":63,"lineItems":[]},{"lineText":"    }","filePosition":64,"lineItems":[]},{"lineText":"}","filePosition":65,"lineItems":[]},{"lineText":"","filePosition":66,"lineItems":[]}],"path":"kotlin/src/jsTest/kotlin/supercr/workflows/codereview/processor/LineDiffProcessorTest.kt"},"diffChangeType":"RENAME","tShirtSize":"XS","editList":[{"beginA":0,"beginB":0,"endA":1,"endB":1}]},{"oldFile":{"objectId":"0000000000000000000000000000000000000000","fileLines":[],"path":"/dev/null"},"newFile":{"objectId":"42c5f05142f42a778d7f996f3468aa6ad22e2e01","fileLines":[{"lineText":"{","filePosition":0,"lineItems":[]},{"lineText":"  \"url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/pulls/2\",","filePosition":1,"lineItems":[]},{"lineText":"  \"id\": 421222538,","filePosition":2,"lineItems":[]},{"lineText":"  \"node_id\": \"MDExOlB1bGxSZXF1ZXN0NDIxMjIyNTM4\",","filePosition":3,"lineItems":[]},{"lineText":"  \"html_url\": \"https://github.com/theboringtech/theboringtech.github.io/pull/2\",","filePosition":4,"lineItems":[]},{"lineText":"  \"diff_url\": \"https://github.com/theboringtech/theboringtech.github.io/pull/2.diff\",","filePosition":5,"lineItems":[]},{"lineText":"  \"patch_url\": \"https://github.com/theboringtech/theboringtech.github.io/pull/2.patch\",","filePosition":6,"lineItems":[]},{"lineText":"  \"issue_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/issues/2\",","filePosition":7,"lineItems":[]},{"lineText":"  \"number\": 2,","filePosition":8,"lineItems":[]},{"lineText":"  \"state\": \"open\",","filePosition":9,"lineItems":[]},{"lineText":"  \"locked\": false,","filePosition":10,"lineItems":[]},{"lineText":"  \"title\": \"Making changes to the test file\",","filePosition":11,"lineItems":[]},{"lineText":"  \"user\": {","filePosition":12,"lineItems":[]},{"lineText":"    \"login\": \"yogeshnachnani\",","filePosition":13,"lineItems":[]},{"lineText":"    \"id\": 2109181,","filePosition":14,"lineItems":[]},{"lineText":"    \"node_id\": \"MDQ6VXNlcjIxMDkxODE=\",","filePosition":15,"lineItems":[]},{"lineText":"    \"avatar_url\": \"https://avatars2.githubusercontent.com/u/2109181?v=4\",","filePosition":16,"lineItems":[]},{"lineText":"    \"gravatar_id\": \"\",","filePosition":17,"lineItems":[]},{"lineText":"    \"url\": \"https://api.github.com/users/yogeshnachnani\",","filePosition":18,"lineItems":[]},{"lineText":"    \"html_url\": \"https://github.com/yogeshnachnani\",","filePosition":19,"lineItems":[]},{"lineText":"    \"followers_url\": \"https://api.github.com/users/yogeshnachnani/followers\",","filePosition":20,"lineItems":[]},{"lineText":"    \"following_url\": \"https://api.github.com/users/yogeshnachnani/following{/other_user}\",","filePosition":21,"lineItems":[]},{"lineText":"    \"gists_url\": \"https://api.github.com/users/yogeshnachnani/gists{/gist_id}\",","filePosition":22,"lineItems":[]},{"lineText":"    \"starred_url\": \"https://api.github.com/users/yogeshnachnani/starred{/owner}{/repo}\",","filePosition":23,"lineItems":[]},{"lineText":"    \"subscriptions_url\": \"https://api.github.com/users/yogeshnachnani/subscriptions\",","filePosition":24,"lineItems":[]},{"lineText":"    \"organizations_url\": \"https://api.github.com/users/yogeshnachnani/orgs\",","filePosition":25,"lineItems":[]},{"lineText":"    \"repos_url\": \"https://api.github.com/users/yogeshnachnani/repos\",","filePosition":26,"lineItems":[]},{"lineText":"    \"events_url\": \"https://api.github.com/users/yogeshnachnani/events{/privacy}\",","filePosition":27,"lineItems":[]},{"lineText":"    \"received_events_url\": \"https://api.github.com/users/yogeshnachnani/received_events\",","filePosition":28,"lineItems":[]},{"lineText":"    \"type\": \"User\",","filePosition":29,"lineItems":[]},{"lineText":"    \"site_admin\": false","filePosition":30,"lineItems":[]},{"lineText":"  },","filePosition":31,"lineItems":[]},{"lineText":"  \"body\": \"\",","filePosition":32,"lineItems":[]},{"lineText":"  \"created_at\": \"2020-05-21T08:29:16Z\",","filePosition":33,"lineItems":[]},{"lineText":"  \"updated_at\": \"2020-05-21T10:06:17Z\",","filePosition":34,"lineItems":[]},{"lineText":"  \"closed_at\": null,","filePosition":35,"lineItems":[]},{"lineText":"  \"merged_at\": null,","filePosition":36,"lineItems":[]},{"lineText":"  \"merge_commit_sha\": \"f99c4f7d46c31798e736d6b564f7527d9b573096\",","filePosition":37,"lineItems":[]},{"lineText":"  \"assignee\": null,","filePosition":38,"lineItems":[]},{"lineText":"  \"assignees\": [","filePosition":39,"lineItems":[]},{"lineText":"","filePosition":40,"lineItems":[]},{"lineText":"  ],","filePosition":41,"lineItems":[]},{"lineText":"  \"requested_reviewers\": [","filePosition":42,"lineItems":[]},{"lineText":"","filePosition":43,"lineItems":[]},{"lineText":"  ],","filePosition":44,"lineItems":[]},{"lineText":"  \"requested_teams\": [","filePosition":45,"lineItems":[]},{"lineText":"","filePosition":46,"lineItems":[]},{"lineText":"  ],","filePosition":47,"lineItems":[]},{"lineText":"  \"labels\": [","filePosition":48,"lineItems":[]},{"lineText":"","filePosition":49,"lineItems":[]},{"lineText":"  ],","filePosition":50,"lineItems":[]},{"lineText":"  \"milestone\": null,","filePosition":51,"lineItems":[]},{"lineText":"  \"draft\": false,","filePosition":52,"lineItems":[]},{"lineText":"  \"commits_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/pulls/2/commits\",","filePosition":53,"lineItems":[]},{"lineText":"  \"review_comments_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/pulls/2/comments\",","filePosition":54,"lineItems":[]},{"lineText":"  \"review_comment_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/pulls/comments{/number}\",","filePosition":55,"lineItems":[]},{"lineText":"  \"comments_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/issues/2/comments\",","filePosition":56,"lineItems":[]},{"lineText":"  \"statuses_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/statuses/c5549e620254c3b0a56b3a8b37dea197ba0e9236\",","filePosition":57,"lineItems":[]},{"lineText":"  \"head\": {","filePosition":58,"lineItems":[]},{"lineText":"    \"label\": \"theboringtech:foobarbaaz_changed\",","filePosition":59,"lineItems":[]},{"lineText":"    \"ref\": \"foobarbaaz_changed\",","filePosition":60,"lineItems":[]},{"lineText":"    \"sha\": \"c5549e620254c3b0a56b3a8b37dea197ba0e9236\",","filePosition":61,"lineItems":[]},{"lineText":"    \"user\": {","filePosition":62,"lineItems":[]},{"lineText":"      \"login\": \"theboringtech\",","filePosition":63,"lineItems":[]},{"lineText":"      \"id\": 64058207,","filePosition":64,"lineItems":[]},{"lineText":"      \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjY0MDU4MjA3\",","filePosition":65,"lineItems":[]},{"lineText":"      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/64058207?v=4\",","filePosition":66,"lineItems":[]},{"lineText":"      \"gravatar_id\": \"\",","filePosition":67,"lineItems":[]},{"lineText":"      \"url\": \"https://api.github.com/users/theboringtech\",","filePosition":68,"lineItems":[]},{"lineText":"      \"html_url\": \"https://github.com/theboringtech\",","filePosition":69,"lineItems":[]},{"lineText":"      \"followers_url\": \"https://api.github.com/users/theboringtech/followers\",","filePosition":70,"lineItems":[]},{"lineText":"      \"following_url\": \"https://api.github.com/users/theboringtech/following{/other_user}\",","filePosition":71,"lineItems":[]},{"lineText":"      \"gists_url\": \"https://api.github.com/users/theboringtech/gists{/gist_id}\",","filePosition":72,"lineItems":[]},{"lineText":"      \"starred_url\": \"https://api.github.com/users/theboringtech/starred{/owner}{/repo}\",","filePosition":73,"lineItems":[]},{"lineText":"      \"subscriptions_url\": \"https://api.github.com/users/theboringtech/subscriptions\",","filePosition":74,"lineItems":[]},{"lineText":"      \"organizations_url\": \"https://api.github.com/users/theboringtech/orgs\",","filePosition":75,"lineItems":[]},{"lineText":"      \"repos_url\": \"https://api.github.com/users/theboringtech/repos\",","filePosition":76,"lineItems":[]},{"lineText":"      \"events_url\": \"https://api.github.com/users/theboringtech/events{/privacy}\",","filePosition":77,"lineItems":[]},{"lineText":"      \"received_events_url\": \"https://api.github.com/users/theboringtech/received_events\",","filePosition":78,"lineItems":[]},{"lineText":"      \"type\": \"Organization\",","filePosition":79,"lineItems":[]},{"lineText":"      \"site_admin\": false","filePosition":80,"lineItems":[]},{"lineText":"    },","filePosition":81,"lineItems":[]},{"lineText":"    \"repo\": {","filePosition":82,"lineItems":[]},{"lineText":"      \"id\": 257480179,","filePosition":83,"lineItems":[]},{"lineText":"      \"node_id\": \"MDEwOlJlcG9zaXRvcnkyNTc0ODAxNzk=\",","filePosition":84,"lineItems":[]},{"lineText":"      \"name\": \"theboringtech.github.io\",","filePosition":85,"lineItems":[]},{"lineText":"      \"full_name\": \"theboringtech/theboringtech.github.io\",","filePosition":86,"lineItems":[]},{"lineText":"      \"private\": true,","filePosition":87,"lineItems":[]},{"lineText":"      \"owner\": {","filePosition":88,"lineItems":[]},{"lineText":"        \"login\": \"theboringtech\",","filePosition":89,"lineItems":[]},{"lineText":"        \"id\": 64058207,","filePosition":90,"lineItems":[]},{"lineText":"        \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjY0MDU4MjA3\",","filePosition":91,"lineItems":[]},{"lineText":"        \"avatar_url\": \"https://avatars1.githubusercontent.com/u/64058207?v=4\",","filePosition":92,"lineItems":[]},{"lineText":"        \"gravatar_id\": \"\",","filePosition":93,"lineItems":[]},{"lineText":"        \"url\": \"https://api.github.com/users/theboringtech\",","filePosition":94,"lineItems":[]},{"lineText":"        \"html_url\": \"https://github.com/theboringtech\",","filePosition":95,"lineItems":[]},{"lineText":"        \"followers_url\": \"https://api.github.com/users/theboringtech/followers\",","filePosition":96,"lineItems":[]},{"lineText":"        \"following_url\": \"https://api.github.com/users/theboringtech/following{/other_user}\",","filePosition":97,"lineItems":[]},{"lineText":"        \"gists_url\": \"https://api.github.com/users/theboringtech/gists{/gist_id}\",","filePosition":98,"lineItems":[]},{"lineText":"        \"starred_url\": \"https://api.github.com/users/theboringtech/starred{/owner}{/repo}\",","filePosition":99,"lineItems":[]},{"lineText":"        \"subscriptions_url\": \"https://api.github.com/users/theboringtech/subscriptions\",","filePosition":100,"lineItems":[]},{"lineText":"        \"organizations_url\": \"https://api.github.com/users/theboringtech/orgs\",","filePosition":101,"lineItems":[]},{"lineText":"        \"repos_url\": \"https://api.github.com/users/theboringtech/repos\",","filePosition":102,"lineItems":[]},{"lineText":"        \"events_url\": \"https://api.github.com/users/theboringtech/events{/privacy}\",","filePosition":103,"lineItems":[]},{"lineText":"        \"received_events_url\": \"https://api.github.com/users/theboringtech/received_events\",","filePosition":104,"lineItems":[]},{"lineText":"        \"type\": \"Organization\",","filePosition":105,"lineItems":[]},{"lineText":"        \"site_admin\": false","filePosition":106,"lineItems":[]},{"lineText":"      },","filePosition":107,"lineItems":[]},{"lineText":"      \"html_url\": \"https://github.com/theboringtech/theboringtech.github.io\",","filePosition":108,"lineItems":[]},{"lineText":"      \"description\": \"The boring website\",","filePosition":109,"lineItems":[]},{"lineText":"      \"fork\": false,","filePosition":110,"lineItems":[]},{"lineText":"      \"url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io\",","filePosition":111,"lineItems":[]},{"lineText":"      \"forks_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/forks\",","filePosition":112,"lineItems":[]},{"lineText":"      \"keys_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/keys{/key_id}\",","filePosition":113,"lineItems":[]},{"lineText":"      \"collaborators_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/collaborators{/collaborator}\",","filePosition":114,"lineItems":[]},{"lineText":"      \"teams_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/teams\",","filePosition":115,"lineItems":[]},{"lineText":"      \"hooks_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/hooks\",","filePosition":116,"lineItems":[]},{"lineText":"      \"issue_events_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/issues/events{/number}\",","filePosition":117,"lineItems":[]},{"lineText":"      \"events_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/events\",","filePosition":118,"lineItems":[]},{"lineText":"      \"assignees_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/assignees{/user}\",","filePosition":119,"lineItems":[]},{"lineText":"      \"branches_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/branches{/branch}\",","filePosition":120,"lineItems":[]},{"lineText":"      \"tags_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/tags\",","filePosition":121,"lineItems":[]},{"lineText":"      \"blobs_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/git/blobs{/sha}\",","filePosition":122,"lineItems":[]},{"lineText":"      \"git_tags_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/git/tags{/sha}\",","filePosition":123,"lineItems":[]},{"lineText":"      \"git_refs_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/git/refs{/sha}\",","filePosition":124,"lineItems":[]},{"lineText":"      \"trees_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/git/trees{/sha}\",","filePosition":125,"lineItems":[]},{"lineText":"      \"statuses_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/statuses/{sha}\",","filePosition":126,"lineItems":[]},{"lineText":"      \"languages_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/languages\",","filePosition":127,"lineItems":[]},{"lineText":"      \"stargazers_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/stargazers\",","filePosition":128,"lineItems":[]},{"lineText":"      \"contributors_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/contributors\",","filePosition":129,"lineItems":[]},{"lineText":"      \"subscribers_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/subscribers\",","filePosition":130,"lineItems":[]},{"lineText":"      \"subscription_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/subscription\",","filePosition":131,"lineItems":[]},{"lineText":"      \"commits_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/commits{/sha}\",","filePosition":132,"lineItems":[]},{"lineText":"      \"git_commits_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/git/commits{/sha}\",","filePosition":133,"lineItems":[]},{"lineText":"      \"comments_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/comments{/number}\",","filePosition":134,"lineItems":[]},{"lineText":"      \"issue_comment_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/issues/comments{/number}\",","filePosition":135,"lineItems":[]},{"lineText":"      \"contents_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/contents/{+path}\",","filePosition":136,"lineItems":[]},{"lineText":"      \"compare_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/compare/{base}...{head}\",","filePosition":137,"lineItems":[]},{"lineText":"      \"merges_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/merges\",","filePosition":138,"lineItems":[]},{"lineText":"      \"archive_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/{archive_format}{/ref}\",","filePosition":139,"lineItems":[]},{"lineText":"      \"downloads_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/downloads\",","filePosition":140,"lineItems":[]},{"lineText":"      \"issues_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/issues{/number}\",","filePosition":141,"lineItems":[]},{"lineText":"      \"pulls_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/pulls{/number}\",","filePosition":142,"lineItems":[]},{"lineText":"      \"milestones_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/milestones{/number}\",","filePosition":143,"lineItems":[]},{"lineText":"      \"notifications_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/notifications{?since,all,participating}\",","filePosition":144,"lineItems":[]},{"lineText":"      \"labels_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/labels{/name}\",","filePosition":145,"lineItems":[]},{"lineText":"      \"releases_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/releases{/id}\",","filePosition":146,"lineItems":[]},{"lineText":"      \"deployments_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/deployments\",","filePosition":147,"lineItems":[]},{"lineText":"      \"created_at\": \"2020-04-21T04:31:37Z\",","filePosition":148,"lineItems":[]},{"lineText":"      \"updated_at\": \"2020-06-01T13:54:53Z\",","filePosition":149,"lineItems":[]},{"lineText":"      \"pushed_at\": \"2020-06-01T13:54:50Z\",","filePosition":150,"lineItems":[]},{"lineText":"      \"git_url\": \"git://github.com/theboringtech/theboringtech.github.io.git\",","filePosition":151,"lineItems":[]},{"lineText":"      \"ssh_url\": \"git@github.com:theboringtech/theboringtech.github.io.git\",","filePosition":152,"lineItems":[]},{"lineText":"      \"clone_url\": \"https://github.com/theboringtech/theboringtech.github.io.git\",","filePosition":153,"lineItems":[]},{"lineText":"      \"svn_url\": \"https://github.com/theboringtech/theboringtech.github.io\",","filePosition":154,"lineItems":[]},{"lineText":"      \"homepage\": null,","filePosition":155,"lineItems":[]},{"lineText":"      \"size\": 306,","filePosition":156,"lineItems":[]},{"lineText":"      \"stargazers_count\": 0,","filePosition":157,"lineItems":[]},{"lineText":"      \"watchers_count\": 0,","filePosition":158,"lineItems":[]},{"lineText":"      \"language\": \"HTML\",","filePosition":159,"lineItems":[]},{"lineText":"      \"has_issues\": true,","filePosition":160,"lineItems":[]},{"lineText":"      \"has_projects\": true,","filePosition":161,"lineItems":[]},{"lineText":"      \"has_downloads\": true,","filePosition":162,"lineItems":[]},{"lineText":"      \"has_wiki\": true,","filePosition":163,"lineItems":[]},{"lineText":"      \"has_pages\": true,","filePosition":164,"lineItems":[]},{"lineText":"      \"forks_count\": 0,","filePosition":165,"lineItems":[]},{"lineText":"      \"mirror_url\": null,","filePosition":166,"lineItems":[]},{"lineText":"      \"archived\": false,","filePosition":167,"lineItems":[]},{"lineText":"      \"disabled\": false,","filePosition":168,"lineItems":[]},{"lineText":"      \"open_issues_count\": 2,","filePosition":169,"lineItems":[]},{"lineText":"      \"license\": null,","filePosition":170,"lineItems":[]},{"lineText":"      \"forks\": 0,","filePosition":171,"lineItems":[]},{"lineText":"      \"open_issues\": 2,","filePosition":172,"lineItems":[]},{"lineText":"      \"watchers\": 0,","filePosition":173,"lineItems":[]},{"lineText":"      \"default_branch\": \"master\"","filePosition":174,"lineItems":[]},{"lineText":"    }","filePosition":175,"lineItems":[]},{"lineText":"  },","filePosition":176,"lineItems":[]},{"lineText":"  \"base\": {","filePosition":177,"lineItems":[]},{"lineText":"    \"label\": \"theboringtech:foobarbaaz\",","filePosition":178,"lineItems":[]},{"lineText":"    \"ref\": \"foobarbaaz\",","filePosition":179,"lineItems":[]},{"lineText":"    \"sha\": \"168242420aa58e2c65921adca573df703e01292f\",","filePosition":180,"lineItems":[]},{"lineText":"    \"user\": {","filePosition":181,"lineItems":[]},{"lineText":"      \"login\": \"theboringtech\",","filePosition":182,"lineItems":[]},{"lineText":"      \"id\": 64058207,","filePosition":183,"lineItems":[]},{"lineText":"      \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjY0MDU4MjA3\",","filePosition":184,"lineItems":[]},{"lineText":"      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/64058207?v=4\",","filePosition":185,"lineItems":[]},{"lineText":"      \"gravatar_id\": \"\",","filePosition":186,"lineItems":[]},{"lineText":"      \"url\": \"https://api.github.com/users/theboringtech\",","filePosition":187,"lineItems":[]},{"lineText":"      \"html_url\": \"https://github.com/theboringtech\",","filePosition":188,"lineItems":[]},{"lineText":"      \"followers_url\": \"https://api.github.com/users/theboringtech/followers\",","filePosition":189,"lineItems":[]},{"lineText":"      \"following_url\": \"https://api.github.com/users/theboringtech/following{/other_user}\",","filePosition":190,"lineItems":[]},{"lineText":"      \"gists_url\": \"https://api.github.com/users/theboringtech/gists{/gist_id}\",","filePosition":191,"lineItems":[]},{"lineText":"      \"starred_url\": \"https://api.github.com/users/theboringtech/starred{/owner}{/repo}\",","filePosition":192,"lineItems":[]},{"lineText":"      \"subscriptions_url\": \"https://api.github.com/users/theboringtech/subscriptions\",","filePosition":193,"lineItems":[]},{"lineText":"      \"organizations_url\": \"https://api.github.com/users/theboringtech/orgs\",","filePosition":194,"lineItems":[]},{"lineText":"      \"repos_url\": \"https://api.github.com/users/theboringtech/repos\",","filePosition":195,"lineItems":[]},{"lineText":"      \"events_url\": \"https://api.github.com/users/theboringtech/events{/privacy}\",","filePosition":196,"lineItems":[]},{"lineText":"      \"received_events_url\": \"https://api.github.com/users/theboringtech/received_events\",","filePosition":197,"lineItems":[]},{"lineText":"      \"type\": \"Organization\",","filePosition":198,"lineItems":[]},{"lineText":"      \"site_admin\": false","filePosition":199,"lineItems":[]},{"lineText":"    },","filePosition":200,"lineItems":[]},{"lineText":"    \"repo\": {","filePosition":201,"lineItems":[]},{"lineText":"      \"id\": 257480179,","filePosition":202,"lineItems":[]},{"lineText":"      \"node_id\": \"MDEwOlJlcG9zaXRvcnkyNTc0ODAxNzk=\",","filePosition":203,"lineItems":[]},{"lineText":"      \"name\": \"theboringtech.github.io\",","filePosition":204,"lineItems":[]},{"lineText":"      \"full_name\": \"theboringtech/theboringtech.github.io\",","filePosition":205,"lineItems":[]},{"lineText":"      \"private\": true,","filePosition":206,"lineItems":[]},{"lineText":"      \"owner\": {","filePosition":207,"lineItems":[]},{"lineText":"        \"login\": \"theboringtech\",","filePosition":208,"lineItems":[]},{"lineText":"        \"id\": 64058207,","filePosition":209,"lineItems":[]},{"lineText":"        \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjY0MDU4MjA3\",","filePosition":210,"lineItems":[]},{"lineText":"        \"avatar_url\": \"https://avatars1.githubusercontent.com/u/64058207?v=4\",","filePosition":211,"lineItems":[]},{"lineText":"        \"gravatar_id\": \"\",","filePosition":212,"lineItems":[]},{"lineText":"        \"url\": \"https://api.github.com/users/theboringtech\",","filePosition":213,"lineItems":[]},{"lineText":"        \"html_url\": \"https://github.com/theboringtech\",","filePosition":214,"lineItems":[]},{"lineText":"        \"followers_url\": \"https://api.github.com/users/theboringtech/followers\",","filePosition":215,"lineItems":[]},{"lineText":"        \"following_url\": \"https://api.github.com/users/theboringtech/following{/other_user}\",","filePosition":216,"lineItems":[]},{"lineText":"        \"gists_url\": \"https://api.github.com/users/theboringtech/gists{/gist_id}\",","filePosition":217,"lineItems":[]},{"lineText":"        \"starred_url\": \"https://api.github.com/users/theboringtech/starred{/owner}{/repo}\",","filePosition":218,"lineItems":[]},{"lineText":"        \"subscriptions_url\": \"https://api.github.com/users/theboringtech/subscriptions\",","filePosition":219,"lineItems":[]},{"lineText":"        \"organizations_url\": \"https://api.github.com/users/theboringtech/orgs\",","filePosition":220,"lineItems":[]},{"lineText":"        \"repos_url\": \"https://api.github.com/users/theboringtech/repos\",","filePosition":221,"lineItems":[]},{"lineText":"        \"events_url\": \"https://api.github.com/users/theboringtech/events{/privacy}\",","filePosition":222,"lineItems":[]},{"lineText":"        \"received_events_url\": \"https://api.github.com/users/theboringtech/received_events\",","filePosition":223,"lineItems":[]},{"lineText":"        \"type\": \"Organization\",","filePosition":224,"lineItems":[]},{"lineText":"        \"site_admin\": false","filePosition":225,"lineItems":[]},{"lineText":"      },","filePosition":226,"lineItems":[]},{"lineText":"      \"html_url\": \"https://github.com/theboringtech/theboringtech.github.io\",","filePosition":227,"lineItems":[]},{"lineText":"      \"description\": \"The boring website\",","filePosition":228,"lineItems":[]},{"lineText":"      \"fork\": false,","filePosition":229,"lineItems":[]},{"lineText":"      \"url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io\",","filePosition":230,"lineItems":[]},{"lineText":"      \"forks_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/forks\",","filePosition":231,"lineItems":[]},{"lineText":"      \"keys_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/keys{/key_id}\",","filePosition":232,"lineItems":[]},{"lineText":"      \"collaborators_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/collaborators{/collaborator}\",","filePosition":233,"lineItems":[]},{"lineText":"      \"teams_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/teams\",","filePosition":234,"lineItems":[]},{"lineText":"      \"hooks_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/hooks\",","filePosition":235,"lineItems":[]},{"lineText":"      \"issue_events_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/issues/events{/number}\",","filePosition":236,"lineItems":[]},{"lineText":"      \"events_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/events\",","filePosition":237,"lineItems":[]},{"lineText":"      \"assignees_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/assignees{/user}\",","filePosition":238,"lineItems":[]},{"lineText":"      \"branches_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/branches{/branch}\",","filePosition":239,"lineItems":[]},{"lineText":"      \"tags_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/tags\",","filePosition":240,"lineItems":[]},{"lineText":"      \"blobs_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/git/blobs{/sha}\",","filePosition":241,"lineItems":[]},{"lineText":"      \"git_tags_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/git/tags{/sha}\",","filePosition":242,"lineItems":[]},{"lineText":"      \"git_refs_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/git/refs{/sha}\",","filePosition":243,"lineItems":[]},{"lineText":"      \"trees_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/git/trees{/sha}\",","filePosition":244,"lineItems":[]},{"lineText":"      \"statuses_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/statuses/{sha}\",","filePosition":245,"lineItems":[]},{"lineText":"      \"languages_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/languages\",","filePosition":246,"lineItems":[]},{"lineText":"      \"stargazers_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/stargazers\",","filePosition":247,"lineItems":[]},{"lineText":"      \"contributors_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/contributors\",","filePosition":248,"lineItems":[]},{"lineText":"      \"subscribers_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/subscribers\",","filePosition":249,"lineItems":[]},{"lineText":"      \"subscription_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/subscription\",","filePosition":250,"lineItems":[]},{"lineText":"      \"commits_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/commits{/sha}\",","filePosition":251,"lineItems":[]},{"lineText":"      \"git_commits_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/git/commits{/sha}\",","filePosition":252,"lineItems":[]},{"lineText":"      \"comments_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/comments{/number}\",","filePosition":253,"lineItems":[]},{"lineText":"      \"issue_comment_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/issues/comments{/number}\",","filePosition":254,"lineItems":[]},{"lineText":"      \"contents_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/contents/{+path}\",","filePosition":255,"lineItems":[]},{"lineText":"      \"compare_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/compare/{base}...{head}\",","filePosition":256,"lineItems":[]},{"lineText":"      \"merges_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/merges\",","filePosition":257,"lineItems":[]},{"lineText":"      \"archive_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/{archive_format}{/ref}\",","filePosition":258,"lineItems":[]},{"lineText":"      \"downloads_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/downloads\",","filePosition":259,"lineItems":[]},{"lineText":"      \"issues_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/issues{/number}\",","filePosition":260,"lineItems":[]},{"lineText":"      \"pulls_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/pulls{/number}\",","filePosition":261,"lineItems":[]},{"lineText":"      \"milestones_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/milestones{/number}\",","filePosition":262,"lineItems":[]},{"lineText":"      \"notifications_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/notifications{?since,all,participating}\",","filePosition":263,"lineItems":[]},{"lineText":"      \"labels_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/labels{/name}\",","filePosition":264,"lineItems":[]},{"lineText":"      \"releases_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/releases{/id}\",","filePosition":265,"lineItems":[]},{"lineText":"      \"deployments_url\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/deployments\",","filePosition":266,"lineItems":[]},{"lineText":"      \"created_at\": \"2020-04-21T04:31:37Z\",","filePosition":267,"lineItems":[]},{"lineText":"      \"updated_at\": \"2020-06-01T13:54:53Z\",","filePosition":268,"lineItems":[]},{"lineText":"      \"pushed_at\": \"2020-06-01T13:54:50Z\",","filePosition":269,"lineItems":[]},{"lineText":"      \"git_url\": \"git://github.com/theboringtech/theboringtech.github.io.git\",","filePosition":270,"lineItems":[]},{"lineText":"      \"ssh_url\": \"git@github.com:theboringtech/theboringtech.github.io.git\",","filePosition":271,"lineItems":[]},{"lineText":"      \"clone_url\": \"https://github.com/theboringtech/theboringtech.github.io.git\",","filePosition":272,"lineItems":[]},{"lineText":"      \"svn_url\": \"https://github.com/theboringtech/theboringtech.github.io\",","filePosition":273,"lineItems":[]},{"lineText":"      \"homepage\": null,","filePosition":274,"lineItems":[]},{"lineText":"      \"size\": 306,","filePosition":275,"lineItems":[]},{"lineText":"      \"stargazers_count\": 0,","filePosition":276,"lineItems":[]},{"lineText":"      \"watchers_count\": 0,","filePosition":277,"lineItems":[]},{"lineText":"      \"language\": \"HTML\",","filePosition":278,"lineItems":[]},{"lineText":"      \"has_issues\": true,","filePosition":279,"lineItems":[]},{"lineText":"      \"has_projects\": true,","filePosition":280,"lineItems":[]},{"lineText":"      \"has_downloads\": true,","filePosition":281,"lineItems":[]},{"lineText":"      \"has_wiki\": true,","filePosition":282,"lineItems":[]},{"lineText":"      \"has_pages\": true,","filePosition":283,"lineItems":[]},{"lineText":"      \"forks_count\": 0,","filePosition":284,"lineItems":[]},{"lineText":"      \"mirror_url\": null,","filePosition":285,"lineItems":[]},{"lineText":"      \"archived\": false,","filePosition":286,"lineItems":[]},{"lineText":"      \"disabled\": false,","filePosition":287,"lineItems":[]},{"lineText":"      \"open_issues_count\": 2,","filePosition":288,"lineItems":[]},{"lineText":"      \"license\": null,","filePosition":289,"lineItems":[]},{"lineText":"      \"forks\": 0,","filePosition":290,"lineItems":[]},{"lineText":"      \"open_issues\": 2,","filePosition":291,"lineItems":[]},{"lineText":"      \"watchers\": 0,","filePosition":292,"lineItems":[]},{"lineText":"      \"default_branch\": \"master\"","filePosition":293,"lineItems":[]},{"lineText":"    }","filePosition":294,"lineItems":[]},{"lineText":"  },","filePosition":295,"lineItems":[]},{"lineText":"  \"_links\": {","filePosition":296,"lineItems":[]},{"lineText":"    \"self\": {","filePosition":297,"lineItems":[]},{"lineText":"      \"href\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/pulls/2\"","filePosition":298,"lineItems":[]},{"lineText":"    },","filePosition":299,"lineItems":[]},{"lineText":"    \"html\": {","filePosition":300,"lineItems":[]},{"lineText":"      \"href\": \"https://github.com/theboringtech/theboringtech.github.io/pull/2\"","filePosition":301,"lineItems":[]},{"lineText":"    },","filePosition":302,"lineItems":[]},{"lineText":"    \"issue\": {","filePosition":303,"lineItems":[]},{"lineText":"      \"href\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/issues/2\"","filePosition":304,"lineItems":[]},{"lineText":"    },","filePosition":305,"lineItems":[]},{"lineText":"    \"comments\": {","filePosition":306,"lineItems":[]},{"lineText":"      \"href\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/issues/2/comments\"","filePosition":307,"lineItems":[]},{"lineText":"    },","filePosition":308,"lineItems":[]},{"lineText":"    \"review_comments\": {","filePosition":309,"lineItems":[]},{"lineText":"      \"href\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/pulls/2/comments\"","filePosition":310,"lineItems":[]},{"lineText":"    },","filePosition":311,"lineItems":[]},{"lineText":"    \"review_comment\": {","filePosition":312,"lineItems":[]},{"lineText":"      \"href\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/pulls/comments{/number}\"","filePosition":313,"lineItems":[]},{"lineText":"    },","filePosition":314,"lineItems":[]},{"lineText":"    \"commits\": {","filePosition":315,"lineItems":[]},{"lineText":"      \"href\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/pulls/2/commits\"","filePosition":316,"lineItems":[]},{"lineText":"    },","filePosition":317,"lineItems":[]},{"lineText":"    \"statuses\": {","filePosition":318,"lineItems":[]},{"lineText":"      \"href\": \"https://api.github.com/repos/theboringtech/theboringtech.github.io/statuses/c5549e620254c3b0a56b3a8b37dea197ba0e9236\"","filePosition":319,"lineItems":[]},{"lineText":"    }","filePosition":320,"lineItems":[]},{"lineText":"  },","filePosition":321,"lineItems":[]},{"lineText":"  \"author_association\": \"CONTRIBUTOR\"","filePosition":322,"lineItems":[]},{"lineText":"}","filePosition":323,"lineItems":[]},{"lineText":"","filePosition":324,"lineItems":[]}],"path":"kotlin/src/jsTest/resources/pull_request_example2.json"},"diffChangeType":"ADD","tShirtSize":"XL","editList":[{"beginA":0,"beginB":0,"endA":0,"endB":324}]},{"oldFile":{"objectId":"78de02f450b6442676ab4a9257420320d42bc58e","fileLines":[{"lineText":"package io.btc.supercr.api","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import APP_NAME","filePosition":2,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"import HOME","filePosition":3,"lineItems":[]},{"lineText":"import io.btc.supercr.db.ProjectRepository","filePosition":4,"lineItems":[]},{"lineText":"import io.btc.supercr.git.GitProject","filePosition":5,"lineItems":[]},{"lineText":"import io.btc.supercr.git.GitUtils","filePosition":6,"lineItems":[]},{"lineText":"import io.ktor.application.Application","filePosition":7,"lineItems":[]},{"lineText":"import io.ktor.application.call","filePosition":8,"lineItems":[]},{"lineText":"import io.ktor.application.install","filePosition":9,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"import io.ktor.features.CallLogging","filePosition":10,"lineItems":[]},{"lineText":"import io.ktor.features.ContentNegotiation","filePosition":11,"lineItems":[]},{"lineText":"import io.ktor.features.DefaultHeaders","filePosition":12,"lineItems":[]},{"lineText":"import io.ktor.jackson.jackson","filePosition":13,"lineItems":[]},{"lineText":"import io.ktor.response.respond","filePosition":14,"lineItems":[]},{"lineText":"import io.ktor.routing.Routing","filePosition":15,"lineItems":[]},{"lineText":"import io.ktor.routing.get","filePosition":16,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"import io.ktor.server.engine.embeddedServer","filePosition":17,"lineItems":[]},{"lineText":"import io.ktor.server.netty.Netty","filePosition":18,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"import org.jdbi.v3.core.Jdbi","filePosition":19,"lineItems":[]},{"lineText":"import org.jdbi.v3.core.kotlin.KotlinPlugin","filePosition":20,"lineItems":[]},{"lineText":"import org.jdbi.v3.sqlite3.SQLitePlugin","filePosition":21,"lineItems":[]},{"lineText":"import org.jdbi.v3.sqlobject.kotlin.KotlinSqlObjectPlugin","filePosition":22,"lineItems":[]},{"lineText":"import org.slf4j.event.Level","filePosition":23,"lineItems":[]},{"lineText":"import java.io.File","filePosition":24,"lineItems":[]},{"lineText":"","filePosition":25,"lineItems":[]},{"lineText":"","filePosition":26,"lineItems":[]},{"lineText":"class ApiServer constructor(","filePosition":27,"lineItems":[]},{"lineText":"","filePosition":28,"lineItems":[]},{"lineText":") {","filePosition":29,"lineItems":[]},{"lineText":"    init {","filePosition":30,"lineItems":[]},{"lineText":"        embeddedServer(Netty, 8081, watchPaths = listOf(\"ApiServerInitKt\"), module = Application::superCrServerProduction)","filePosition":31,"lineItems":[]},{"lineText":"            .start()","filePosition":32,"lineItems":[]},{"lineText":"    }","filePosition":33,"lineItems":[]},{"lineText":"","filePosition":34,"lineItems":[]},{"lineText":"}","filePosition":35,"lineItems":[]},{"lineText":"","filePosition":36,"lineItems":[]},{"lineText":"fun Application.superCrServerProduction() {","filePosition":37,"lineItems":[]},{"lineText":"    this.superCrServer(initDb())","filePosition":38,"lineItems":[]},{"lineText":"}","filePosition":39,"lineItems":[]},{"lineText":"","filePosition":40,"lineItems":[]},{"lineText":"fun Application.superCrServer(jdbi: Jdbi) {","filePosition":41,"lineItems":[]},{"lineText":"    install(DefaultHeaders)","filePosition":42,"lineItems":[]},{"lineText":"    install(CallLogging) {","filePosition":43,"lineItems":[]},{"lineText":"        level = Level.INFO","filePosition":44,"lineItems":[]},{"lineText":"    }","filePosition":45,"lineItems":[]},{"lineText":"    install(ContentNegotiation) {","filePosition":46,"lineItems":[]},{"lineText":"        jackson {","filePosition":47,"lineItems":[]},{"lineText":"","filePosition":48,"lineItems":[]},{"lineText":"        }","filePosition":49,"lineItems":[]},{"lineText":"    }","filePosition":50,"lineItems":[]},{"lineText":"    install(Routing) {","filePosition":51,"lineItems":[]},{"lineText":"        get(\"/\") {","filePosition":52,"lineItems":[]},{"lineText":"            call.respond(mapOf(\"OK\" to true))","filePosition":53,"lineItems":[]},{"lineText":"        }","filePosition":54,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"        ProjectApi(this, GitProject(GitUtils(), ProjectRepository(jdbi)))","filePosition":55,"lineItems":[]},{"lineText":"    }","filePosition":56,"lineItems":[]},{"lineText":"}","filePosition":57,"lineItems":[]},{"lineText":"","filePosition":58,"lineItems":[]},{"lineText":"fun initDb(dbName: String = \"supercrdb\"): Jdbi {","filePosition":59,"lineItems":[]},{"lineText":"    val userHome = System.getenv(HOME)","filePosition":60,"lineItems":[]},{"lineText":"    val superCrDirectory = \"$userHome/.$APP_NAME\"","filePosition":61,"lineItems":[]},{"lineText":"        .also {","filePosition":62,"lineItems":[]},{"lineText":"            File(it).mkdirs()","filePosition":63,"lineItems":[]},{"lineText":"        }","filePosition":64,"lineItems":[]},{"lineText":"","filePosition":65,"lineItems":[]},{"lineText":"    return Jdbi.create(\"jdbc:sqlite:$superCrDirectory/${dbName}.db\")","filePosition":66,"lineItems":[]},{"lineText":"        .installPlugin(SQLitePlugin())","filePosition":67,"lineItems":[]},{"lineText":"        .installPlugin(KotlinPlugin())","filePosition":68,"lineItems":[]},{"lineText":"        .installPlugin(KotlinSqlObjectPlugin())","filePosition":69,"lineItems":[]},{"lineText":"        .also { jdbi ->","filePosition":70,"lineItems":[]},{"lineText":"            jdbi.runMigrations()","filePosition":71,"lineItems":[]},{"lineText":"        }","filePosition":72,"lineItems":[]},{"lineText":"}","filePosition":73,"lineItems":[]},{"lineText":"","filePosition":74,"lineItems":[]},{"lineText":"internal fun Jdbi.runMigrations() {","filePosition":75,"lineItems":[]},{"lineText":"    this.useTransaction<RuntimeException> { handle ->","filePosition":76,"lineItems":[]},{"lineText":"        handle.createUpdate(\"\"\"","filePosition":77,"lineItems":[]},{"lineText":"                CREATE TABLE IF NOT EXISTS project(name TEXT, localPath TEXT, providerPath TEXT)","filePosition":78,"lineItems":[]},{"lineText":"            \"\"\".trimIndent())","filePosition":79,"lineItems":[]},{"lineText":"            .execute()","filePosition":80,"lineItems":[]},{"lineText":"    }","filePosition":81,"lineItems":[]},{"lineText":"}","filePosition":82,"lineItems":[]},{"lineText":"","filePosition":83,"lineItems":[]}],"path":"kotlin/src/jvmMain/kotlin/io/btc/supercr/api/ApiServer.kt"},"newFile":{"objectId":"ca49177ab0c0966174b4f5de18f48acb41bb4ba9","fileLines":[{"lineText":"package io.btc.supercr.api","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import APP_NAME","filePosition":2,"lineItems":[]},{"lineText":"import DEFAULT_PORT","filePosition":3,"lineItems":[]},{"lineText":"import HOME","filePosition":4,"lineItems":[]},{"lineText":"import io.btc.supercr.db.ProjectRepository","filePosition":5,"lineItems":[]},{"lineText":"import io.btc.supercr.git.GitProject","filePosition":6,"lineItems":[]},{"lineText":"import io.btc.supercr.git.GitUtils","filePosition":7,"lineItems":[]},{"lineText":"import io.ktor.application.Application","filePosition":8,"lineItems":[]},{"lineText":"import io.ktor.application.call","filePosition":9,"lineItems":[]},{"lineText":"import io.ktor.application.install","filePosition":10,"lineItems":[]},{"lineText":"import io.ktor.features.CORS","filePosition":11,"lineItems":[]},{"lineText":"import io.ktor.features.CallLogging","filePosition":12,"lineItems":[]},{"lineText":"import io.ktor.features.ContentNegotiation","filePosition":13,"lineItems":[]},{"lineText":"import io.ktor.features.DefaultHeaders","filePosition":14,"lineItems":[]},{"lineText":"","filePosition":null,"lineItems":[]},{"lineText":"import io.ktor.response.respond","filePosition":15,"lineItems":[]},{"lineText":"import io.ktor.routing.Routing","filePosition":16,"lineItems":[]},{"lineText":"import io.ktor.routing.get","filePosition":17,"lineItems":[]},{"lineText":"import io.ktor.serialization.json","filePosition":18,"lineItems":[]},{"lineText":"import io.ktor.server.engine.embeddedServer","filePosition":19,"lineItems":[]},{"lineText":"import io.ktor.server.netty.Netty","filePosition":20,"lineItems":[]},{"lineText":"import kotlinx.serialization.json.Json","filePosition":21,"lineItems":[]},{"lineText":"import kotlinx.serialization.json.JsonConfiguration","filePosition":22,"lineItems":[]},{"lineText":"import org.jdbi.v3.core.Jdbi","filePosition":23,"lineItems":[]},{"lineText":"import org.jdbi.v3.core.kotlin.KotlinPlugin","filePosition":24,"lineItems":[]},{"lineText":"import org.jdbi.v3.sqlite3.SQLitePlugin","filePosition":25,"lineItems":[]},{"lineText":"import org.jdbi.v3.sqlobject.kotlin.KotlinSqlObjectPlugin","filePosition":26,"lineItems":[]},{"lineText":"import org.slf4j.event.Level","filePosition":27,"lineItems":[]},{"lineText":"import java.io.File","filePosition":28,"lineItems":[]},{"lineText":"","filePosition":29,"lineItems":[]},{"lineText":"","filePosition":30,"lineItems":[]},{"lineText":"class ApiServer constructor(","filePosition":31,"lineItems":[]},{"lineText":"","filePosition":32,"lineItems":[]},{"lineText":") {","filePosition":33,"lineItems":[]},{"lineText":"    init {","filePosition":34,"lineItems":[]},{"lineText":"        embeddedServer(Netty, DEFAULT_PORT, watchPaths = listOf(\"ApiServerInitKt\"), module = Application::superCrServerProduction)","filePosition":35,"lineItems":[]},{"lineText":"            .start()","filePosition":36,"lineItems":[]},{"lineText":"    }","filePosition":37,"lineItems":[]},{"lineText":"","filePosition":38,"lineItems":[]},{"lineText":"}","filePosition":39,"lineItems":[]},{"lineText":"","filePosition":40,"lineItems":[]},{"lineText":"fun Application.superCrServerProduction() {","filePosition":41,"lineItems":[]},{"lineText":"    this.superCrServer(initDb())","filePosition":42,"lineItems":[]},{"lineText":"}","filePosition":43,"lineItems":[]},{"lineText":"","filePosition":44,"lineItems":[]},{"lineText":"fun Application.superCrServer(jdbi: Jdbi) {","filePosition":45,"lineItems":[]},{"lineText":"    install(DefaultHeaders)","filePosition":46,"lineItems":[]},{"lineText":"    install(CallLogging) {","filePosition":47,"lineItems":[]},{"lineText":"        level = Level.INFO","filePosition":48,"lineItems":[]},{"lineText":"    }","filePosition":49,"lineItems":[]},{"lineText":"    install(ContentNegotiation) {","filePosition":50,"lineItems":[]},{"lineText":"        json(json = Json(JsonConfiguration.Stable.copy(ignoreUnknownKeys = true)))","filePosition":51,"lineItems":[]},{"lineText":"    }","filePosition":52,"lineItems":[]},{"lineText":"    install(Routing) {","filePosition":53,"lineItems":[]},{"lineText":"        get(\"/\") {","filePosition":54,"lineItems":[]},{"lineText":"            call.respond(mapOf(\"OK\" to true))","filePosition":55,"lineItems":[]},{"lineText":"        }","filePosition":56,"lineItems":[]},{"lineText":"        ProjectApi(this, GitProject(GitUtils(), ProjectRepository(jdbi)))","filePosition":57,"lineItems":[]},{"lineText":"    }","filePosition":58,"lineItems":[]},{"lineText":"    install(CORS) {","filePosition":59,"lineItems":[]},{"lineText":"        host(\"localhost:8080\")","filePosition":60,"lineItems":[]},{"lineText":"        allowNonSimpleContentTypes = true","filePosition":61,"lineItems":[]},{"lineText":"    }","filePosition":62,"lineItems":[]},{"lineText":"}","filePosition":63,"lineItems":[]},{"lineText":"","filePosition":64,"lineItems":[]},{"lineText":"fun initDb(dbName: String = \"supercrdb\"): Jdbi {","filePosition":65,"lineItems":[]},{"lineText":"    val userHome = System.getenv(HOME)","filePosition":66,"lineItems":[]},{"lineText":"    val superCrDirectory = \"$userHome/.$APP_NAME\"","filePosition":67,"lineItems":[]},{"lineText":"        .also {","filePosition":68,"lineItems":[]},{"lineText":"            File(it).mkdirs()","filePosition":69,"lineItems":[]},{"lineText":"        }","filePosition":70,"lineItems":[]},{"lineText":"","filePosition":71,"lineItems":[]},{"lineText":"    return Jdbi.create(\"jdbc:sqlite:$superCrDirectory/${dbName}.db\")","filePosition":72,"lineItems":[]},{"lineText":"        .installPlugin(SQLitePlugin())","filePosition":73,"lineItems":[]},{"lineText":"        .installPlugin(KotlinPlugin())","filePosition":74,"lineItems":[]},{"lineText":"        .installPlugin(KotlinSqlObjectPlugin())","filePosition":75,"lineItems":[]},{"lineText":"        .also { jdbi ->","filePosition":76,"lineItems":[]},{"lineText":"            jdbi.runMigrations()","filePosition":77,"lineItems":[]},{"lineText":"        }","filePosition":78,"lineItems":[]},{"lineText":"}","filePosition":79,"lineItems":[]},{"lineText":"","filePosition":80,"lineItems":[]},{"lineText":"internal fun Jdbi.runMigrations() {","filePosition":81,"lineItems":[]},{"lineText":"    this.useTransaction<RuntimeException> { handle ->","filePosition":82,"lineItems":[]},{"lineText":"        handle.createUpdate(\"\"\"","filePosition":83,"lineItems":[]},{"lineText":"                CREATE TABLE IF NOT EXISTS project(name TEXT, localPath TEXT, providerPath TEXT)","filePosition":84,"lineItems":[]},{"lineText":"            \"\"\".trimIndent())","filePosition":85,"lineItems":[]},{"lineText":"            .execute()","filePosition":86,"lineItems":[]},{"lineText":"    }","filePosition":87,"lineItems":[]},{"lineText":"}","filePosition":88,"lineItems":[]},{"lineText":"","filePosition":89,"lineItems":[]}],"path":"kotlin/src/jvmMain/kotlin/io/btc/supercr/api/ApiServer.kt"},"diffChangeType":"MODIFY","tShirtSize":"S","editList":[{"beginA":3,"beginB":3,"endA":3,"endB":4},{"beginA":10,"beginB":11,"endA":10,"endB":12},{"beginA":13,"beginB":15,"endA":14,"endB":15},{"beginA":17,"beginB":18,"endA":17,"endB":19},{"beginA":19,"beginB":21,"endA":19,"endB":23},{"beginA":31,"beginB":35,"endA":32,"endB":36},{"beginA":47,"beginB":51,"endA":50,"endB":52},{"beginA":57,"beginB":59,"endA":57,"endB":63}]},{"oldFile":{"objectId":"f53b999fae94b32403b81c6532d06b9997af2de8","fileLines":[{"lineText":"package io.btc.supercr.api","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import codereview.Project","filePosition":2,"lineItems":[]},{"lineText":"import io.btc.supercr.git.GitProject","filePosition":3,"lineItems":[]},{"lineText":"import io.btc.supercr.git.checkOrFetchRef","filePosition":4,"lineItems":[]},{"lineText":"import io.btc.supercr.git.fetchRef","filePosition":5,"lineItems":[]},{"lineText":"import io.btc.supercr.git.formatDiff","filePosition":6,"lineItems":[]},{"lineText":"import io.ktor.application.call","filePosition":7,"lineItems":[]},{"lineText":"import io.ktor.http.HttpStatusCode","filePosition":8,"lineItems":[]},{"lineText":"import io.ktor.request.receive","filePosition":9,"lineItems":[]},{"lineText":"import io.ktor.response.respond","filePosition":10,"lineItems":[]},{"lineText":"import io.ktor.routing.Routing","filePosition":11,"lineItems":[]},{"lineText":"import io.ktor.routing.get","filePosition":12,"lineItems":[]},{"lineText":"import io.ktor.routing.post","filePosition":13,"lineItems":[]},{"lineText":"import io.ktor.routing.route","filePosition":14,"lineItems":[]},{"lineText":"","filePosition":15,"lineItems":[]},{"lineText":"class ProjectApi constructor(","filePosition":16,"lineItems":[]},{"lineText":"    routing: Routing,","filePosition":17,"lineItems":[]},{"lineText":"    private val gitProject: GitProject","filePosition":18,"lineItems":[]},{"lineText":"): ApiController(routing) {","filePosition":19,"lineItems":[]},{"lineText":"","filePosition":20,"lineItems":[]},{"lineText":"    override fun initRoutes(routing: Routing) {","filePosition":21,"lineItems":[]},{"lineText":"        routing {","filePosition":22,"lineItems":[]},{"lineText":"            route(\"/projects\")  {","filePosition":23,"lineItems":[]},{"lineText":"                get(\"_all\") {","filePosition":24,"lineItems":[]},{"lineText":"                    call.respond(gitProject.getAllProjects())","filePosition":25,"lineItems":[]},{"lineText":"                }","filePosition":26,"lineItems":[]},{"lineText":"                post {","filePosition":27,"lineItems":[]},{"lineText":"                    with(call.receive<Project>()) {","filePosition":28,"lineItems":[]},{"lineText":"                        gitProject.addProject(this)","filePosition":29,"lineItems":[]},{"lineText":"                    }","filePosition":30,"lineItems":[]},{"lineText":"                    call.respond(mapOf(\"OK\" to true))","filePosition":31,"lineItems":[]},{"lineText":"                }","filePosition":32,"lineItems":[]},{"lineText":"                route(\"{id}\") {","filePosition":33,"lineItems":[]},{"lineText":"                    get {","filePosition":34,"lineItems":[]},{"lineText":"                        val id = call.parameters[\"id\"]!!","filePosition":35,"lineItems":[]},{"lineText":"                        val responseProject = (gitProject[id]?.first)","filePosition":36,"lineItems":[]},{"lineText":"                            ?: Project(providerPath = \"Not found\", localPath = id, name = \"NA\")","filePosition":37,"lineItems":[]},{"lineText":"                        call.respond(responseProject)","filePosition":38,"lineItems":[]},{"lineText":"                    }","filePosition":39,"lineItems":[]},{"lineText":"                    post(\"fetch/{ref}\") {","filePosition":40,"lineItems":[]},{"lineText":"                        val (project, git) = gitProject[call.parameters[\"id\"]!!] ?: Pair(null, null)","filePosition":41,"lineItems":[]},{"lineText":"                        when(project) {","filePosition":42,"lineItems":[]},{"lineText":"                            null -> call.respond(HttpStatusCode.NotFound)","filePosition":43,"lineItems":[]},{"lineText":"                            else -> {","filePosition":44,"lineItems":[]},{"lineText":"                                val ref = call.parameters[\"ref\"]!!","filePosition":45,"lineItems":[]},{"lineText":"                                if (git!!.fetchRef(ref)) {","filePosition":46,"lineItems":[]},{"lineText":"                                    call.respond(HttpStatusCode.Accepted)","filePosition":47,"lineItems":[]},{"lineText":"                                } else {","filePosition":48,"lineItems":[]},{"lineText":"                                    call.respond(HttpStatusCode.NotFound)","filePosition":49,"lineItems":[]},{"lineText":"                                }","filePosition":50,"lineItems":[]},{"lineText":"                            }","filePosition":51,"lineItems":[]},{"lineText":"                        }","filePosition":52,"lineItems":[]},{"lineText":"                    }","filePosition":53,"lineItems":[]},{"lineText":"                    get(\"diff\") {","filePosition":54,"lineItems":[]},{"lineText":"                        val oldRef = call.request.queryParameters[\"oldRef\"]","filePosition":55,"lineItems":[]},{"lineText":"                        val newRef = call.request.queryParameters[\"newRef\"]","filePosition":56,"lineItems":[]},{"lineText":"                        val (project, git) = gitProject[call.parameters[\"id\"]!!] ?: Pair(null, null)","filePosition":57,"lineItems":[]},{"lineText":"                        if (oldRef == null || newRef == null || project == null) {","filePosition":58,"lineItems":[]},{"lineText":"                            call.respond(HttpStatusCode.BadRequest)","filePosition":59,"lineItems":[]},{"lineText":"                        } else {","filePosition":60,"lineItems":[]},{"lineText":"                            val fetchedOldRef = git!!.checkOrFetchRef(oldRef)","filePosition":61,"lineItems":[]},{"lineText":"                            val fetchedNewRef = git.checkOrFetchRef(newRef)","filePosition":62,"lineItems":[]},{"lineText":"                            if(!fetchedOldRef || !fetchedNewRef) {","filePosition":63,"lineItems":[]},{"lineText":"                                call.respond(HttpStatusCode.NotFound)","filePosition":64,"lineItems":[]},{"lineText":"                            } else {","filePosition":65,"lineItems":[]},{"lineText":"                                call.respond(git.formatDiff(oldRef, newRef))","filePosition":66,"lineItems":[]},{"lineText":"                            }","filePosition":67,"lineItems":[]},{"lineText":"                        }","filePosition":68,"lineItems":[]},{"lineText":"                    }","filePosition":69,"lineItems":[]},{"lineText":"                }","filePosition":70,"lineItems":[]},{"lineText":"            }","filePosition":71,"lineItems":[]},{"lineText":"        }","filePosition":72,"lineItems":[]},{"lineText":"    }","filePosition":73,"lineItems":[]},{"lineText":"}","filePosition":74,"lineItems":[]},{"lineText":"","filePosition":75,"lineItems":[]},{"lineText":"","filePosition":76,"lineItems":[]}],"path":"kotlin/src/jvmMain/kotlin/io/btc/supercr/api/ProjectApi.kt"},"newFile":{"objectId":"d50c40ba40d29626973477ccd17f9e84c95dc600","fileLines":[{"lineText":"package io.btc.supercr.api","filePosition":0,"lineItems":[]},{"lineText":"","filePosition":1,"lineItems":[]},{"lineText":"import codereview.Project","filePosition":2,"lineItems":[]},{"lineText":"import io.btc.supercr.git.GitProject","filePosition":3,"lineItems":[]},{"lineText":"import io.btc.supercr.git.checkOrFetchRef","filePosition":4,"lineItems":[]},{"lineText":"import io.btc.supercr.git.fetchRef","filePosition":5,"lineItems":[]},{"lineText":"import io.btc.supercr.git.formatDiff","filePosition":6,"lineItems":[]},{"lineText":"import io.ktor.application.call","filePosition":7,"lineItems":[]},{"lineText":"import io.ktor.http.HttpStatusCode","filePosition":8,"lineItems":[]},{"lineText":"import io.ktor.request.receive","filePosition":9,"lineItems":[]},{"lineText":"import io.ktor.response.respond","filePosition":10,"lineItems":[]},{"lineText":"import io.ktor.routing.Routing","filePosition":11,"lineItems":[]},{"lineText":"import io.ktor.routing.get","filePosition":12,"lineItems":[]},{"lineText":"import io.ktor.routing.post","filePosition":13,"lineItems":[]},{"lineText":"import io.ktor.routing.route","filePosition":14,"lineItems":[]},{"lineText":"","filePosition":15,"lineItems":[]},{"lineText":"class ProjectApi constructor(","filePosition":16,"lineItems":[]},{"lineText":"    routing: Routing,","filePosition":17,"lineItems":[]},{"lineText":"    private val gitProject: GitProject","filePosition":18,"lineItems":[]},{"lineText":"): ApiController(routing) {","filePosition":19,"lineItems":[]},{"lineText":"","filePosition":20,"lineItems":[]},{"lineText":"    override fun initRoutes(routing: Routing) {","filePosition":21,"lineItems":[]},{"lineText":"        routing {","filePosition":22,"lineItems":[]},{"lineText":"            route(\"/projects\")  {","filePosition":23,"lineItems":[]},{"lineText":"                get(\"_all\") {","filePosition":24,"lineItems":[]},{"lineText":"                    call.respond(gitProject.getAllProjects())","filePosition":25,"lineItems":[]},{"lineText":"                }","filePosition":26,"lineItems":[]},{"lineText":"                post {","filePosition":27,"lineItems":[]},{"lineText":"                    with(call.receive<Project>()) {","filePosition":28,"lineItems":[]},{"lineText":"                        gitProject.addProject(this)","filePosition":29,"lineItems":[]},{"lineText":"                    }","filePosition":30,"lineItems":[]},{"lineText":"                    call.respond(HttpStatusCode.Created ,mapOf(\"OK\" to true))","filePosition":31,"lineItems":[]},{"lineText":"                }","filePosition":32,"lineItems":[]},{"lineText":"                route(\"{id}\") {","filePosition":33,"lineItems":[]},{"lineText":"                    get {","filePosition":34,"lineItems":[]},{"lineText":"                        val id = call.parameters[\"id\"]!!","filePosition":35,"lineItems":[]},{"lineText":"                        val responseProject = (gitProject[id]?.first)","filePosition":36,"lineItems":[]},{"lineText":"                            ?: Project(providerPath = \"Not found\", localPath = id, name = \"NA\")","filePosition":37,"lineItems":[]},{"lineText":"                        call.respond(responseProject)","filePosition":38,"lineItems":[]},{"lineText":"                    }","filePosition":39,"lineItems":[]},{"lineText":"                    post(\"fetch/{ref}\") {","filePosition":40,"lineItems":[]},{"lineText":"                        val (project, git) = gitProject[call.parameters[\"id\"]!!] ?: Pair(null, null)","filePosition":41,"lineItems":[]},{"lineText":"                        when(project) {","filePosition":42,"lineItems":[]},{"lineText":"                            null -> call.respond(HttpStatusCode.NotFound)","filePosition":43,"lineItems":[]},{"lineText":"                            else -> {","filePosition":44,"lineItems":[]},{"lineText":"                                val ref = call.parameters[\"ref\"]!!","filePosition":45,"lineItems":[]},{"lineText":"                                if (git!!.fetchRef(ref)) {","filePosition":46,"lineItems":[]},{"lineText":"                                    call.respond(HttpStatusCode.Accepted)","filePosition":47,"lineItems":[]},{"lineText":"                                } else {","filePosition":48,"lineItems":[]},{"lineText":"                                    call.respond(HttpStatusCode.NotFound)","filePosition":49,"lineItems":[]},{"lineText":"                                }","filePosition":50,"lineItems":[]},{"lineText":"                            }","filePosition":51,"lineItems":[]},{"lineText":"                        }","filePosition":52,"lineItems":[]},{"lineText":"                    }","filePosition":53,"lineItems":[]},{"lineText":"                    get(\"diff\") {","filePosition":54,"lineItems":[]},{"lineText":"                        val oldRef = call.request.queryParameters[\"oldRef\"]","filePosition":55,"lineItems":[]},{"lineText":"                        val newRef = call.request.queryParameters[\"newRef\"]","filePosition":56,"lineItems":[]},{"lineText":"                        val (project, git) = gitProject[call.parameters[\"id\"]!!] ?: Pair(null, null)","filePosition":57,"lineItems":[]},{"lineText":"                        if (oldRef == null || newRef == null || project == null) {","filePosition":58,"lineItems":[]},{"lineText":"                            call.respond(HttpStatusCode.BadRequest)","filePosition":59,"lineItems":[]},{"lineText":"                        } else {","filePosition":60,"lineItems":[]},{"lineText":"                            val fetchedOldRef = git!!.checkOrFetchRef(oldRef)","filePosition":61,"lineItems":[]},{"lineText":"                            val fetchedNewRef = git.checkOrFetchRef(newRef)","filePosition":62,"lineItems":[]},{"lineText":"                            if(!fetchedOldRef || !fetchedNewRef) {","filePosition":63,"lineItems":[]},{"lineText":"                                call.respond(HttpStatusCode.NotFound)","filePosition":64,"lineItems":[]},{"lineText":"                            } else {","filePosition":65,"lineItems":[]},{"lineText":"                                call.respond(git.formatDiff(oldRef, newRef))","filePosition":66,"lineItems":[]},{"lineText":"                            }","filePosition":67,"lineItems":[]},{"lineText":"                        }","filePosition":68,"lineItems":[]},{"lineText":"                    }","filePosition":69,"lineItems":[]},{"lineText":"                }","filePosition":70,"lineItems":[]},{"lineText":"            }","filePosition":71,"lineItems":[]},{"lineText":"        }","filePosition":72,"lineItems":[]},{"lineText":"    }","filePosition":73,"lineItems":[]},{"lineText":"}","filePosition":74,"lineItems":[]},{"lineText":"","filePosition":75,"lineItems":[]},{"lineText":"","filePosition":76,"lineItems":[]}],"path":"kotlin/src/jvmMain/kotlin/io/btc/supercr/api/ProjectApi.kt"},"diffChangeType":"MODIFY","tShirtSize":"XS","editList":[{"beginA":31,"beginB":31,"endA":32,"endB":32}]}]}